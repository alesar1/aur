# Log filtering level.
LOG_LEVEL="--log.level=info"

# Log format to use.
LOG_FORMAT="--log.format=logfmt"

# GCP project to send Google Cloud Trace tracings to.
# If empty, tracing will be disabled.
#GCLOUDTRACE_PROJECT="--gcloudtrace.project=GCLOUDTRACE.PROJECT"

# How often we send traces (1/<sample-factor>).
# If 0 no trace will be sent periodically, unless forced by baggage item.
# See `pkg/tracing/tracing.go` for details.
#GCLOUDTRACE_SAMPLE="--gcloudtrace.sample-factor=1"

# Listen ip:port address for gRPC endpoints (StoreAPI).
# Make sure this address is routable from other components if you use gossip,
# 'grpc-advertise-address' is empty and you require cross-node connection.
#GRPC_ADDRESS="--grpc-address=0.0.0.0:10901"

# Explicit (external) host:port address to advertise for gRPC StoreAPI
# in gossip cluster. If empty, 'grpc-address' will be used.
#GRPC_ADVERTISE_ADDRESS="--grpc-advertise-address=GRPC-ADVERTISE-ADDRESS"

# TLS Certificate for gRPC server, leave blank to disable TLS
#GRPC_SERVER_TLS_CERT="--grpc-server-tls-cert="

# TLS Key for the gRPC server, leave blank to disable TLS
#GRPC_SERVER_TLS_KEY="--grpc-server-tls-key="

# TLS CA to verify clients against. If no client CA is specified,
# there is no client verification on server side. (tls.NoClientCert)
#GRPC_SERVER_TLS_CLIENT_CA="--grpc-server-tls-client-ca="

# Listen host:port for HTTP endpoints.
#HTTP_ADDRESS="--http-address=0.0.0.0:10902"

# Listen ip:port address for gossip cluster.
#CLUSTER_ADDRESS="--cluster.address=0.0.0.0:10900"  

# Explicit (external) ip:port address to advertise for gossip in gossip cluster.
# Used internally for membership only.
#CLUSTER_ADVERTISE_ADDRESS="--cluster.advertise-address="

# Initial peers to join the cluster.
# It can be either <ip:port>, or <domain:port>.
# A lookup resolution is done only at the startup.
#CLUSTER_PEERS="--cluster.peers="

# Interval between sending gossip messages.
# By lowering this value (more frequent) gossip messages are propagated across
# the cluster more quickly at the expense of increased bandwidth.
# Default is used from a specified network-type.
#CLUSTER_GOSSIP_INTERVAL="--cluster.gossip-interval="

# Interval for gossip state syncs. Setting this interval lower (more frequent)
# will increase convergence speeds across larger clusters at the expense of
# increased bandwidth usage. Default is used from a specified network-type.
#CLUSTER_PUSHPULL_INTERVAL="--cluster.pushpull-interval="

# Interval for membership to refresh cluster.peers state, 0 disables refresh.
#CLUSTER_REFRESH_INTERVAL="--cluster.refresh-interval=1m"

# Initial secret key to encrypt cluster gossip.
# Can be one of AES-128, AES-192, or AES-256 in hexadecimal format.
#CLUSTER_SECRET_KEY="--cluster.secret-key=CLUSTER.SECRET-KEY"

# Network type with predefined peers configurations.
# Sets of configurations accounting the latency differences between network types: local, lan, wan.
#CLUSTER_NETWORK_TYPE="--cluster.network-type=lan"

# If true gossip will be disabled and no cluster related server will be started.
#CLUSTER_DISABLE="--cluster.disable"

# Data directory in which to cache remote blocks.
DATA_DIR="--data-dir=/var/lib/thanos/store/cache"

# Maximum size of items held in the index cache.
INDEX_CACHE="--index-cache-size=250MB"

# Maximum size of concurrently allocatable bytes for chunks.
CHUNK_POOL_SIZE="--chunk-pool-size=2GB"

# Path to YAML file that contains object store configuration.
#OBJSTORE_CONFIG_FILE="--objstore.config-file=<bucket.config-yaml-path>"

# Alternative to 'objstore.config-file' flag.
# Object store configuration in YAML.
#OBJSTORE_CONFIG="--objstore.config=<bucket.config-yaml>"

# Repeat interval for syncing the blocks between
# local and remote view.
#SYNC_BLOCK_DURATION="--sync-block-duration=3m"

# Number of goroutines to use when syncing blocks
# from object storage.
#SYNC_BLOCK_CONCURRENCY="--block-sync-concurrency=20"

