--- src/gl_variables.c	1970-01-01 03:00:00.000000000 +0300
+++ src/gl_variables.c	2020-08-25 15:55:39.806472450 +0300
@@ -0,0 +1,39 @@
+/*
+ * C source file for global variables definition of tabipb
+ *
+ * C version authored by:
+ * Jiahui Chen, Southern Methodist University, Dallas, TX
+ *
+ * Additional modifications and updates by:
+ * Leighton Wilson, University of Michigan, Ann Arbor, MI
+ *
+ * Based on package originally written in FORTRAN by:
+ * Weihua Geng, Southern Methodist University, Dallas, TX
+ * Robery Krasny, University of Michigan, Ann Arbor, MI
+ *
+ * Last modified by Viktor Drobot, 08/25/2020
+ */
+
+#include "gl_variables.h"
+
+/*constant variables */
+double pi, one_over_4pi, kcal2j, bulk_coef, units_coef, epsw, epsp, eps;
+double bulk_strength, kappa2, kappa;
+
+
+/*global scalar variables*/
+int nface, nspt, natm;
+
+
+/*dynamic allocated variables*/
+int **extr_v; //[3][nspt]
+int **extr_f; //[2][nface]
+int **face;//[3][nface]
+
+double **vert, **snrm; //[3][nspt];
+double *tr_xyz, *tr_q; //[3]*[nface]
+double *tr_area, *bvct, *xvct; //[nface];
+double *atmrad, *atmchr, *chrpos; //[natm],[3][nface];
+
+/* GMRes variables */
+double *work, *h;
--- src/gl_variables.h	2020-08-25 16:31:43.073197652 +0300
+++ src/gl_variables.h	2020-08-25 16:31:45.386509224 +0300
@@ -9,38 +9,38 @@
  *
  * Based on package originally written in FORTRAN by:
  * Weihua Geng, Southern Methodist University, Dallas, TX
  * Robery Krasny, University of Michigan, Ann Arbor, MI
  *
- * Last modified by Leighton Wilson, 06/20/2016
+ * Last modified by Viktor Drobot, 08/25/2020
  */
 
 #ifndef H_GLVARS_H
 #define H_GLVARS_H
 
 #include "TABIPBstruct.h"
 
 
 /*constant variables */
-double pi, one_over_4pi, kcal2j, bulk_coef, units_coef, epsw, epsp, eps;
-double bulk_strength, kappa2, kappa;
+extern double pi, one_over_4pi, kcal2j, bulk_coef, units_coef, epsw, epsp, eps;
+extern double bulk_strength, kappa2, kappa;
 
 
 /*global scalar variables*/
-int nface, nspt, natm;
+extern int nface, nspt, natm;
 
 
 /*dynamic allocated variables*/
-int **extr_v; //[3][nspt]
-int **extr_f; //[2][nface]
-int **face;//[3][nface]
-
-double **vert, **snrm; //[3][nspt];
-double *tr_xyz, *tr_q; //[3]*[nface]
-double *tr_area, *bvct, *xvct; //[nface];
-double *atmrad, *atmchr, *chrpos; //[natm],[3][nface];
+extern int **extr_v; //[3][nspt]
+extern int **extr_f; //[2][nface]
+extern int **face;//[3][nface]
+
+extern double **vert, **snrm; //[3][nspt];
+extern double *tr_xyz, *tr_q; //[3]*[nface]
+extern double *tr_area, *bvct, *xvct; //[nface];
+extern double *atmrad, *atmchr, *chrpos; //[natm],[3][nface];
 
 /* GMRes variables */
-double *work, *h;
+extern double *work, *h;
 
 
 #endif /* H_GLVARS_H */
--- src/treecode.c	2020-08-25 16:40:07.671844382 +0300
+++ src/treecode.c	2020-08-25 16:41:23.934469576 +0300
@@ -9,11 +9,11 @@
  *
  * Based on package originally written in FORTRAN by:
  * Weihua Geng, Southern Methodist University, Dallas, TX
  * Robery Krasny, University of Michigan, Ann Arbor, MI
  *
- * Last modified by Leighton Wilson, 06/20/2016
+ * Last modified by Viktor Drobot, 08/25/2020
  */
 
 #include <time.h>
 #include <stdio.h>
 #include <math.h>
@@ -21,10 +21,75 @@
 
 #include "gl_variables.h"
 #include "treecode.h"
 
 
+/* runtime parameters */
+int numpars, order, maxparnode, iflag, forcedim;
+double theta;
+double center[3], r0[3], v0[3];
+
+
+/* arrays for coordinates, charge, potential & force */
+double *x, *y, *z, *q;
+double *x_copy, *y_copy, *z_copy, *q_copy;
+double **tforce, **dforce;
+int *orderind, *n_clst;
+
+
+/* timing variables */
+double timebeg, timeend;
+
+
+/* local variables */
+double xyzminmax[6];
+double t1, abserr, relerr, adsinf_err, relinf_err;
+double f_inferr[3], f_relinferr[3], t[3];
+
+double ***tchg, ***schg;
+double ****der_cof;
+int kk[16][3];
+
+
+/* global variables for taylor expansions */
+int torder, torder2, torderlim;
+double *cf, *cf1, *cf2, *cf3;
+double ***a, ***b;
+
+
+/* global variables to track tree levels  */
+int minlevel, maxlevel;
+
+
+/* global variables used when computing potential/force */
+int orderoffset;
+double tarpos[3], tarq[3];
+double tarchr;
+
+
+/* global variables for position and charge storage */
+/* arrays are not copied in this version!! orderarr is till valid*/
+int *orderarr;
+double *xcopy,*ycopy,*zcopy,*qcopy;
+
+
+/* node pointer and node struct declarations */
+typedef struct tnode{
+  int node_idx;
+  int numpar, ibeg, iend;
+  double x_min, y_min, z_min;
+  double x_max, y_max, z_max;
+  double x_mid, y_mid, z_mid;
+  double radius, aspect;
+  int level, num_children, exist_ms;
+  double ****ms;
+  struct tnode** child;
+}tnode;
+
+tnode* troot;
+
+
 int treecode_initialization(int main_order,int main_maxparnode,double main_theta) {
   /* set up variables used in treecode */
   /* local variables*/
   int level, ierr, err, i, j, k, mm, nn, idx, ijk[3];
 
--- src/treecode.h	2020-08-25 16:40:07.675177684 +0300
+++ src/treecode.h	2020-08-25 16:40:43.728176389 +0300
@@ -9,79 +9,16 @@
  *
  * Based on package originally written in FORTRAN by:
  * Weihua Geng, Southern Methodist University, Dallas, TX
  * Robery Krasny, University of Michigan, Ann Arbor, MI
  *
- * Last modified by Leighton Wilson, 06/20/2016
+ * Last modified by Viktor Drobot, 08/25/2020
  */
 
 #ifndef H_TREECODE_H
 #define H_TREECODE_H
 
 
-/* runtime parameters */
-int numpars, order, maxparnode, iflag, forcedim;
-double theta;
-double center[3], r0[3], v0[3];
-
-
-/* arrays for coordinates, charge, potential & force */
-double *x, *y, *z, *q;
-double *x_copy, *y_copy, *z_copy, *q_copy;
-double **tforce, **dforce;
-int *orderind, *n_clst;
-
-
-/* timing variables */
-double timebeg, timeend;
-
-
-/* local variables */
-double xyzminmax[6];
-double t1, abserr, relerr, adsinf_err, relinf_err;
-double f_inferr[3], f_relinferr[3], t[3];
-
-double ***tchg, ***schg;
-double ****der_cof;
-int kk[16][3];
-
-
-/* global variables for taylor expansions */
-int torder, torder2, torderlim;
-double *cf, *cf1, *cf2, *cf3;
-double ***a, ***b;
-
-
-/* global variables to track tree levels  */
-int minlevel, maxlevel;
-
-
-/* global variables used when computing potential/force */
-int orderoffset;
-double tarpos[3], tarq[3];
-double tarchr;
-double ***tchg, ***schg;
-
-
-/* global variables for position and charge storage */
-/* arrays are not copied in this version!! orderarr is till valid*/
-int *orderarr;
-double *xcopy,*ycopy,*zcopy,*qcopy;
-
-
-/* node pointer and node struct declarations */
-typedef struct tnode{
-  int node_idx;
-  int numpar, ibeg, iend;
-  double x_min, y_min, z_min;
-  double x_max, y_max, z_max;
-  double x_mid, y_mid, z_mid;
-  double radius, aspect;
-  int level, num_children, exist_ms;
-  double ****ms;
-  struct tnode** child;
-}tnode;
-
-tnode* troot;
+extern int *orderarr;
 
 
 #endif /* H_TREECODE_H */
--- CMakeLists.txt	2020-08-25 16:40:07.671844382 +0300
+++ CMakeLists.txt	2020-08-25 17:01:51.382985737 +0300
@@ -51,10 +51,11 @@
               src/drot.c
               src/drotg.c
               src/dscal.c
               src/dtrsv.c
               src/f2c.h
+              src/gl_variables.c
               src/gl_variables.h
               src/gmres.c
               src/readin.c
               src/tabipb.c
               src/TABIPBstruct.h
@@ -92,17 +93,17 @@
 # C code for standalone; don't include pp_timer.c in Windows version
   if(WIN32)
         add_executable(tabipb
           src/main.c src/tabipb.c src/gmres.c src/daxpy.c src/dcopy.c src/ddot.c
           src/dgemv.c src/dnrm2.c src/drot.c src/drotg.c src/dscal.c src/d_sign.c
-          src/dtrsv.c src/readin.c src/treecode.c
+          src/dtrsv.c src/readin.c src/treecode.c src/gl_variables.c
           src/xmalloc.c)
   else()
         add_executable(tabipb
           src/main.c src/tabipb.c src/gmres.c src/daxpy.c src/dcopy.c src/ddot.c
           src/dgemv.c src/dnrm2.c src/drot.c src/drotg.c src/dscal.c src/d_sign.c
-          src/dtrsv.c src/readin.c src/pp_timer.c src/treecode.c
+          src/dtrsv.c src/readin.c src/pp_timer.c src/treecode.c src/gl_variables.c
           src/xmalloc.c)
   endif()
 
 
 ################################################
@@ -145,11 +146,11 @@
   endif ()
 
   set (LIBFILES
     src/TABIPBWrap.c src/tabipb.c src/gmres.c src/daxpy.c src/dcopy.c src/ddot.c
     src/dgemv.c src/dnrm2.c src/drot.c src/drotg.c src/dscal.c src/d_sign.c
-    src/dtrsv.c src/readin.c src/treecode.c src/xmalloc.c)
+    src/dtrsv.c src/readin.c src/treecode.c src/gl_variables.c src/xmalloc.c)
 
   message(***** ${CMAKE_INSTALL_PREFIX} *****)
 
   if(NOT DEFINED ${CMAKE_INSTALL_PREFIX})
     set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR})
