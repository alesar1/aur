diff -ura a/browser/finder/index.js b/browser/finder/index.js
--- a/browser/finder/index.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/finder/index.js	2017-07-29 09:15:29.836430857 +0200
@@ -10,7 +10,6 @@
 import NoteList from './NoteList'
 import NoteDetail from './NoteDetail'
 import SideNavFilter from 'browser/components/SideNavFilter'
-import AwsMobileAnalyticsConfig from 'browser/main/lib/AwsMobileAnalyticsConfig'
 require('!!style!css!stylus?sourceMap!../main/global.styl')
 require('../lib/customMeta')
 
@@ -95,7 +94,6 @@
 
     if (e.keyCode === 13) {
       this.refs.detail.saveToClipboard()
-      AwsMobileAnalyticsConfig.recordDynamicCustomEvent('COPY_FINDER')
       hideFinder()
       e.preventDefault()
     }
diff -ura a/browser/main/Detail/MarkdownNoteDetail.js b/browser/main/Detail/MarkdownNoteDetail.js
--- a/browser/main/Detail/MarkdownNoteDetail.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/Detail/MarkdownNoteDetail.js	2017-07-29 09:17:01.436368456 +0200
@@ -13,7 +13,6 @@
 import StatusBar from '../StatusBar'
 import _ from 'lodash'
 import { findNoteTitle } from 'browser/lib/findNoteTitle'
-import AwsMobileAnalyticsConfig from 'browser/main/lib/AwsMobileAnalyticsConfig'
 import TrashButton from './TrashButton'
 import InfoButton from './InfoButton'
 import InfoPanel from './InfoPanel'
@@ -121,7 +120,6 @@
           type: 'UPDATE_NOTE',
           note: note
         })
-        AwsMobileAnalyticsConfig.recordDynamicCustomEvent('EDIT_NOTE')
       })
   }
 
@@ -160,7 +158,6 @@
 
   handleStarButtonClick (e) {
     let { note } = this.state
-    if (!note.isStarred) AwsMobileAnalyticsConfig.recordDynamicCustomEvent('ADD_STAR')
 
     note.isStarred = !note.isStarred
 
diff -ura a/browser/main/Detail/SnippetNoteDetail.js b/browser/main/Detail/SnippetNoteDetail.js
--- a/browser/main/Detail/SnippetNoteDetail.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/Detail/SnippetNoteDetail.js	2017-07-29 09:17:39.492978037 +0200
@@ -16,7 +16,6 @@
 import ConfigManager from 'browser/main/lib/ConfigManager'
 import _ from 'lodash'
 import { findNoteTitle } from 'browser/lib/findNoteTitle'
-import AwsMobileAnalyticsConfig from 'browser/main/lib/AwsMobileAnalyticsConfig'
 import TrashButton from './TrashButton'
 import InfoButton from './InfoButton'
 import InfoPanel from './InfoPanel'
@@ -115,7 +114,6 @@
           type: 'UPDATE_NOTE',
           note: note
         })
-        AwsMobileAnalyticsConfig.recordDynamicCustomEvent('EDIT_NOTE')
       })
   }
 
@@ -154,7 +152,6 @@
 
   handleStarButtonClick (e) {
     let { note } = this.state
-    if (!note.isStarred) AwsMobileAnalyticsConfig.recordDynamicCustomEvent('ADD_STAR')
 
     note.isStarred = !note.isStarred
 
diff -ura a/browser/main/Detail/TagSelect.js b/browser/main/Detail/TagSelect.js
--- a/browser/main/Detail/TagSelect.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/Detail/TagSelect.js	2017-07-29 09:18:10.999584995 +0200
@@ -2,7 +2,6 @@
 import CSSModules from 'browser/lib/CSSModules'
 import styles from './TagSelect.styl'
 import _ from 'lodash'
-import AwsMobileAnalyticsConfig from 'browser/main/lib/AwsMobileAnalyticsConfig'
 
 class TagSelect extends React.Component {
   constructor (props) {
@@ -57,7 +56,6 @@
   }
 
   submitTag () {
-    AwsMobileAnalyticsConfig.recordDynamicCustomEvent('ADD_TAG')
     let { value } = this.props
     let newTag = this.refs.newTag.value.trim().replace(/ +/g, '_')
 
diff -ura a/browser/main/lib/ConfigManager.js b/browser/main/lib/ConfigManager.js
--- a/browser/main/lib/ConfigManager.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/lib/ConfigManager.js	2017-07-29 09:22:04.355519453 +0200
@@ -15,7 +15,6 @@
   navWidth: 200,
   sortBy: 'UPDATED_AT', // 'CREATED_AT', 'UPDATED_AT', 'APLHABETICAL'
   listStyle: 'DEFAULT', // 'DEFAULT', 'SMALL'
-  amaEnabled: true,
   hotkey: {
     toggleFinder: OSX ? 'Cmd + Alt + S' : 'Super + Alt + S',
     toggleMain: OSX ? 'Cmd + Alt + L' : 'Super + Alt + E'
diff -ura a/browser/main/Main.js b/browser/main/Main.js
--- a/browser/main/Main.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/Main.js	2017-07-29 09:19:05.342790885 +0200
@@ -12,7 +12,6 @@
 import modal from 'browser/main/lib/modal'
 import InitModal from 'browser/main/modals/InitModal'
 import mixpanel from 'browser/main/lib/mixpanel'
-import mobileAnalytics from 'browser/main/lib/AwsMobileAnalyticsConfig'
 import eventEmitter from 'browser/main/lib/eventEmitter'
 
 function focused () {
@@ -23,10 +22,6 @@
   constructor (props) {
     super(props)
 
-    if (process.env.NODE_ENV === 'production') {
-      mobileAnalytics.initAwsMobileAnalytics()
-    }
-
     let { config } = props
 
     this.state = {
diff -ura a/browser/main/modals/CreateFolderModal.js b/browser/main/modals/CreateFolderModal.js
--- a/browser/main/modals/CreateFolderModal.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/modals/CreateFolderModal.js	2017-07-29 09:19:50.945995347 +0200
@@ -5,7 +5,6 @@
 import store from 'browser/main/store'
 import consts from 'browser/lib/consts'
 import ModalEscButton from 'browser/components/ModalEscButton'
-import AwsMobileAnalyticsConfig from 'browser/main/lib/AwsMobileAnalyticsConfig'
 
 class CreateFolderModal extends React.Component {
   constructor (props) {
@@ -49,7 +48,6 @@
   }
 
   confirm () {
-    AwsMobileAnalyticsConfig.recordDynamicCustomEvent('ADD_FOLDER')
     if (this.state.name.trim().length > 0) {
       let { storage } = this.props
       let input = {
diff -ura a/browser/main/modals/NewNoteModal.js b/browser/main/modals/NewNoteModal.js
--- a/browser/main/modals/NewNoteModal.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/modals/NewNoteModal.js	2017-07-29 09:20:27.279212901 +0200
@@ -5,7 +5,6 @@
 import { hashHistory } from 'react-router'
 import ee from 'browser/main/lib/eventEmitter'
 import ModalEscButton from 'browser/components/ModalEscButton'
-import AwsMobileAnalyticsConfig from 'browser/main/lib/AwsMobileAnalyticsConfig'
 
 class NewNoteModal extends React.Component {
   constructor (props) {
@@ -24,8 +23,6 @@
   }
 
   handleMarkdownNoteButtonClick (e) {
-    AwsMobileAnalyticsConfig.recordDynamicCustomEvent('ADD_MARKDOWN')
-    AwsMobileAnalyticsConfig.recordDynamicCustomEvent('ADD_ALLNOTE')
     let { storage, folder, dispatch, location } = this.props
     dataApi
       .createNote(storage, {
@@ -56,8 +53,6 @@
   }
 
   handleSnippetNoteButtonClick (e) {
-    AwsMobileAnalyticsConfig.recordDynamicCustomEvent('ADD_SNIPPET')
-    AwsMobileAnalyticsConfig.recordDynamicCustomEvent('ADD_ALLNOTE')
     let { storage, folder, dispatch, location } = this.props
 
     dataApi
diff -ura a/browser/main/modals/PreferencesModal/index.js b/browser/main/modals/PreferencesModal/index.js
--- a/browser/main/modals/PreferencesModal/index.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/modals/PreferencesModal/index.js	2017-07-29 09:24:26.231548394 +0200
@@ -45,10 +45,7 @@
     switch (this.state.currentTab) {
       case 'INFO':
         return (
-          <InfoTab
-            dispatch={dispatch}
-            config={config}
-          />
+          <InfoTab />
         )
       case 'HOTKEY':
         return (
diff -ura a/browser/main/modals/PreferencesModal/InfoTab.js b/browser/main/modals/PreferencesModal/InfoTab.js
--- a/browser/main/modals/PreferencesModal/InfoTab.js	2017-07-29 08:04:53.000000000 +0200
+++ b/browser/main/modals/PreferencesModal/InfoTab.js	2017-07-29 09:23:38.431776264 +0200
@@ -1,9 +1,6 @@
 import React from 'react'
 import CSSModules from 'browser/lib/CSSModules'
 import styles from './InfoTab.styl'
-import ConfigManager from 'browser/main/lib/ConfigManager'
-import store from 'browser/main/store'
-import AwsMobileAnalyticsConfig from 'browser/main/lib/AwsMobileAnalyticsConfig'
 
 const electron = require('electron')
 const { shell, remote } = electron
@@ -14,7 +11,6 @@
     super(props)
 
     this.state = {
-      config: this.props.config
     }
   }
 
@@ -23,28 +19,6 @@
     e.preventDefault()
   }
 
-  handleConfigChange (e) {
-    const newConfig = { amaEnabled: this.refs.amaEnabled.checked }
-
-    this.setState({ config: newConfig })
-  }
-
-  handleSaveButtonClick (e) {
-    let newConfig = {
-      amaEnabled: this.state.config.amaEnabled
-    }
-
-    ConfigManager.set(newConfig)
-
-    store.dispatch({
-      type: 'SET_CONFIG',
-      config: newConfig
-    })
-    if (!newConfig.amaEnabled) {
-      AwsMobileAnalyticsConfig.recordDynamicCustomEvent('DISABLE_AMA')
-    }
-  }
-
   render () {
     return (
       <div styleName='root'>
@@ -94,18 +68,6 @@
             License: GPL v3
           </li>
         </ul>
-        <hr />
-        <div styleName='policy'>Data collection policy</div>
-        <p>We collect only the number of DAU for Boostnote and DO NOT collect any detail information</p>
-        <p>such as your note content. You can see how it works on <a href='https://github.com/BoostIO/Boostnote' onClick={(e) => this.handleLinkClick(e)}>GitHub</a>.</p>
-        <p>These data are only used for Boostnote improvements.</p>
-        <input onChange={(e) => this.handleConfigChange(e)}
-          checked={this.state.config.amaEnabled}
-          ref='amaEnabled'
-          type='checkbox'
-        />
-        Enable to send analytics to our servers<br />
-        <button styleName='policy-submit' onClick={(e) => this.handleSaveButtonClick(e)}>Save</button>
       </div>
     )
   }
diff -ura a/package.json b/package.json
--- a/package.json	2017-07-29 08:04:53.000000000 +0200
+++ b/package.json	2017-07-29 09:20:48.735806094 +0200
@@ -49,8 +49,6 @@
   "dependencies": {
     "@rokt33r/markdown-it-math": "^4.0.1",
     "@rokt33r/season": "^5.3.0",
-    "aws-sdk": "^2.48.0",
-    "aws-sdk-mobile-analytics": "^0.9.2",
     "codemirror": "^5.19.0",
     "electron-config": "^0.2.1",
     "electron-gh-releases": "^2.0.2",
