diff --git a/AprilTagTrackers/Tracker.cpp b/AprilTagTrackers/Tracker.cpp
index e1c6409..1cd454a 100644
--- a/AprilTagTrackers/Tracker.cpp
+++ b/AprilTagTrackers/Tracker.cpp
@@ -1009,7 +1009,7 @@ void Tracker::CalibrateTracker()
 
             //rotation/translation vectors are shown as offset of our camera from the marker
 
-            cv::aruco::drawAxis(image, parameters->camMat, parameters->distCoeffs, rvec, tvec, parameters->markerSize);
+            cv::drawFrameAxes(image, parameters->camMat, parameters->distCoeffs, rvec, tvec, parameters->markerSize);
         }
         */
 
@@ -1024,7 +1024,7 @@ void Tracker::CalibrateTracker()
             {
                 if (cv::aruco::estimatePoseBoard(corners, ids, arBoard, parameters->camMat, parameters->distCoeffs, boardRvec[i], boardTvec[i], false) > 0)         //try to estimate current trackers pose
                 {
-                    cv::aruco::drawAxis(image, parameters->camMat, parameters->distCoeffs, boardRvec[i], boardTvec[i], 0.1f);       //if found, draw axis and mark it found
+                    cv::drawFrameAxes(image, parameters->camMat, parameters->distCoeffs, boardRvec[i], boardTvec[i], 0.1f);       //if found, draw axis and mark it found
                     boardFound[i] = true;
                 }
                 else
@@ -1355,7 +1355,7 @@ void Tracker::MainLoop()
                 tvec[1] = rpos.at<double>(1, 0);
                 tvec[2] = rpos.at<double>(2, 0);
 
-                cv::aruco::drawAxis(drawImg, parameters->camMat, parameters->distCoeffs, rvec, tvec, 0.10);
+                cv::drawFrameAxes(drawImg, parameters->camMat, parameters->distCoeffs, rvec, tvec, 0.10);
 
                 if (!trackerStatus[i].boardFound)
                 {
@@ -1686,7 +1686,7 @@ void Tracker::MainLoop()
             //convert rodriguez rotation to quaternion
             Quaternion<double> q = rodr2quat(trackerStatus[i].boardRvec[0], trackerStatus[i].boardRvec[1], trackerStatus[i].boardRvec[2]);
 
-            //cv::aruco::drawAxis(drawImg, parameters->camMat, parameters->distCoeffs, boardRvec[i], boardTvec[i], 0.05);
+            //cv::drawFrameAxes(drawImg, parameters->camMat, parameters->distCoeffs, boardRvec[i], boardTvec[i], 0.05);
 
             q = Quaternion<double>(0, 0, 1, 0) * (wrotation * q) * Quaternion<double>(0, 0, 1, 0);
 
