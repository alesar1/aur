--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -81,7 +81,7 @@ include_directories(${TENSORRT_ROOT}/include
 )
 
 # And lib directories.
-link_directories(${TENSORRT_BUILD})
+link_directories(${TENSORRT_BUILD} $ENV{TRT_NONOSS_ROOT}/lib)
 # Enable link-time optimizations
 set(CMAKE_CXX_FLAGS "-fvisibility=hidden -std=c++11 -flto -fno-fat-lto-objects -Wno-deprecated-declarations")
 
@@ -102,6 +102,9 @@ message(STATUS "PY_CONFIG_INCLUDE: ${PY_CONFIG_INCLUDE}")
 if (${CMAKE_BUILD_TYPE} STREQUAL Release)
     message(STATUS "Building in Release mode")
     set(TRT_LIBS nvinfer nvonnxparser nvparsers nvinfer_plugin)
+elseif (${CMAKE_BUILD_TYPE} STREQUAL None OR ${CMAKE_BUILD_TYPE} STREQUAL "")
+    message(STATUS "Building with the None build type")
+    set(TRT_LIBS nvinfer nvonnxparser nvparsers nvinfer_plugin)
 else()
     message(STATUS "Building in Debug mode")
     set(TRT_LIBS nvinfer_debug nvonnxparser_debug nvparsers_debug nvinfer_plugin_debug)
--- a/python/build.sh
+++ b/python/build.sh
@@ -26,21 +26,24 @@ pushd ${WHEEL_OUTPUT_DIR}
 
 # Generate tensorrt.so
 echo $(ls ${ROOT_PATH}/python/include)
-cmake .. -DCMAKE_BUILD_TYPE=Release \
+cmake .. -DCMAKE_BUILD_TYPE=None \
          -DTARGET_ARCHITECTURE=${TARGET_ARCHITECTURE} \
          -DPYTHON_MAJOR_VERSION=${PYTHON_MAJOR_VERSION} \
          -DPYTHON_MINOR_VERSION=${PYTHON_MINOR_VERSION} \
-         -DEXT_PATH=${EXT_PATH} \
-         -DCUDA_INCLUDE_DIRS=/usr/local/cuda/include \
-         -DTENSORRT_ROOT=${ROOT_PATH} \
-         -DTENSORRT_BUILD=${ROOT_PATH}/build/
-make -j12
+         -DEXT_PATH="$EXT_PATH" \
+         -DCUDA_INCLUDE_DIRS='/opt/cuda/include' \
+         -DTENSORRT_ROOT="$ROOT_PATH" \
+         -DTENSORRT_BUILD="${ROOT_PATH}/build/" \
+         -DPY_INCLUDE="/usr/include/python${PYTHON_MAJOR_VERSION}.${PYTHON_MINOR_VERSION}" \
+         -DPY_CONFIG_INCLUDE="/usr/include/python${PYTHON_MAJOR_VERSION}.${PYTHON_MINOR_VERSION}" \
+         -Wno-dev
+make
 
 # Generate wheel
-TRT_MAJOR=$(awk '/^\#define NV_TENSORRT_MAJOR/ {print $3}' ${ROOT_PATH}/include/NvInferVersion.h)
-TRT_MINOR=$(awk '/^\#define NV_TENSORRT_MINOR/ {print $3}' ${ROOT_PATH}/include/NvInferVersion.h)
-TRT_PATCH=$(awk '/^\#define NV_TENSORRT_PATCH/ {print $3}' ${ROOT_PATH}/include/NvInferVersion.h)
-TRT_BUILD=$(awk '/^\#define NV_TENSORRT_BUILD/ {print $3}' ${ROOT_PATH}/include/NvInferVersion.h)
+TRT_MAJOR=$(awk '/^#define NV_TENSORRT_MAJOR/ {print $3}' ${ROOT_PATH}/include/NvInferVersion.h)
+TRT_MINOR=$(awk '/^#define NV_TENSORRT_MINOR/ {print $3}' ${ROOT_PATH}/include/NvInferVersion.h)
+TRT_PATCH=$(awk '/^#define NV_TENSORRT_PATCH/ {print $3}' ${ROOT_PATH}/include/NvInferVersion.h)
+TRT_BUILD=$(awk '/^#define NV_TENSORRT_BUILD/ {print $3}' ${ROOT_PATH}/include/NvInferVersion.h)
 TRT_VERSION=${TRT_MAJOR}.${TRT_MINOR}.${TRT_PATCH}.${TRT_BUILD}
 TRT_MAJMINPATCH=${TRT_MAJOR}.${TRT_MINOR}.${TRT_PATCH}
 
@@ -48,8 +51,8 @@ echo "Generating python ${PYTHON_MAJOR_VERSION}.${PYTHON_MINOR_VERSION} bindings
 
 expand_vars_cp () {
     test -f ${1} || (echo "ERROR: File: ${1} does not exist!" && exit 1); \
-    sed -e "s|\#\#TENSORRT_VERSION\#\#|${TRT_VERSION}|g" \
-        -e "s|\#\#TENSORRT_MAJMINPATCH\#\#|${TRT_MAJMINPATCH}|g" \
+    sed -e "s|##TENSORRT_VERSION##|${TRT_VERSION}|g" \
+        -e "s|##TENSORRT_MAJMINPATCH##|${TRT_MAJMINPATCH}|g" \
         ${1} > ${2}
 }
 
