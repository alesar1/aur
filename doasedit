#!/bin/bash

# This script is not provided with the assumption that it is absolutely secure - instead, its primary function is to give users the convenience of using their configuration for their editor while editing root-owned files
# Certain situations where security issues might arise, such as when copying a non-world-readable file to /tmp, are disallowed for this reason, but I can make no promises about the security of using this software
# If, on the other hand, you have a suggestion to improve the security of the script, please contact me at magnus@iastate.edu or on matrix @magnustesshu:matrix.org and tell me how to improve it

EDITOR=${EDITOR:-vi}

ERR() {
    echo 'doasedit: '"$1";
    exit $2;
}

[[ "$(id -u)" == "0" ]] && ERR "Do not run doasedit as root!" 7;
[[ "$(/sbin/doas -C /etc/doas.conf doasedit \"$1\")" == "permit" ]] || ERR "You are not a doer" 1; # To allow doasedit, you must be allowed to run `doas doasedit`
[[ -f "$1" ]] || ERR "'$1' is not a file" 2; # File exists, seems to work on symlinks
fileperms=$(stat -L -c "%a" "$1")
anyreadperm=${fileperms:3:1} # With sticky bit
[[ ${#fileperms} == "3" ]] && anyreadperm=${fileperms:2:1} # without sticky bit
[[ $anyreadperm -ge "4" ]] || ERR "file '$1' is not world-readable (since security is hard, this is a sacrifice doasedit makes for ease of implementation)" 3;
[[ -r "$1" ]] || ERR "file '$1' is world-readable but is not readable by your user, what are you doing?" 4;
[[ "$(stat -L -c "%u" "$1")" == "0" ]] || ERR "Can only edit root-owned files with this script, as copying the file back will make root the owner" 5;

cp "$1" /tmp/doasediting &&
    $EDITOR /tmp/doasediting &&
    cmp -s /tmp/doasediting "$1" ||
    doas cp /tmp/doasediting "$1" &&
    exit 0

ERR "You put your password in wrong. Manually run 'doas cp /tmp/doasediting $1'" 6;
