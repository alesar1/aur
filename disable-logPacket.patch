diff '--color=auto' --unified --recursive --text src/vivictpp.original/src/workers/DecoderWorker.cc src/vivictpp-0.2.1/src/workers/DecoderWorker.cc
--- src/vivictpp.original/src/workers/DecoderWorker.cc	2022-09-23 21:30:04.000000000 +0200
+++ src/vivictpp-0.2.1/src/workers/DecoderWorker.cc	2022-09-25 16:56:29.112970013 +0200
@@ -59,6 +59,7 @@
                                              }, "seek"));
 }
 
+/*
 void logPacket(vivictpp::libav::Packet pkt, const std::shared_ptr<spdlog::logger> &logger) {
   AVPacket *packet = pkt.avPacket();
   if (packet) {
@@ -67,6 +68,7 @@
     logger->trace("Packet: nullptr");
   }
 }
+*/
 
 void vivictpp::workers::DecoderWorker::doWork() {
     logger->trace("vivictpp::workers::DecoderWorker::doWork");
@@ -88,7 +90,7 @@
   // TODO: check filter.eof
 
   vivictpp::libav::Packet packet = *(data.data);
-  logPacket(packet, logger);
+  //logPacket(packet, logger);
   std::vector<vivictpp::libav::Frame> frames = decoder->handlePacket(packet.avPacket());
   for (auto frame : frames) {
     dropFrameIfSeekingAndBufferFull();
