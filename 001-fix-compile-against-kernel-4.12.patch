diff -ura src/include/osdep_service_linux.h src_p/include/osdep_service_linux.h
--- src/include/osdep_service_linux.h	2017-08-18 11:36:58.287868396 +0200
+++ src_p/include/osdep_service_linux.h	2017-08-18 11:36:38.547759805 +0200
@@ -46,6 +46,9 @@
 #endif
 #include <linux/sem.h>
 #include <linux/sched.h>
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0))
+    #include <linux/sched/signal.h>
+#endif
 #include <linux/etherdevice.h>
 #include <linux/wireless.h>
 #include <net/iw_handler.h>
diff -ura src/os_dep/linux/ioctl_cfg80211.c src_p/os_dep/linux/ioctl_cfg80211.c
--- src/os_dep/linux/ioctl_cfg80211.c	2017-08-18 11:37:02.707892757 +0200
+++ src_p/os_dep/linux/ioctl_cfg80211.c	2017-08-18 11:36:39.647765849 +0200
@@ -23,6 +23,12 @@
 
 #ifdef CONFIG_IOCTL_CFG80211
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0))
+    #if !defined(WIPHY_FLAG_SUPPORTS_SCHED_SCAN)
+        #define WIPHY_FLAG_SUPPORTS_SCHED_SCAN BIT(12)
+    #endif
+#endif
+
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0))
 #define STATION_INFO_SIGNAL		BIT(NL80211_STA_INFO_SIGNAL)
 #define STATION_INFO_TX_BITRATE		BIT(NL80211_STA_INFO_TX_BITRATE)
@@ -748,6 +754,17 @@
 #endif
 
 		RTW_INFO(FUNC_ADPT_FMT" call cfg80211_roamed\n", FUNC_ADPT_ARG(padapter));
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0))
+        struct cfg80211_roam_info roam_info = {
+                .channel = notify_channel,
+                .bssid = cur_network->network.MacAddress,
+                .req_ie = pmlmepriv->assoc_req + sizeof(struct rtw_ieee80211_hdr_3addr) + 2,            
+                .req_ie_len = pmlmepriv->assoc_req_len - sizeof(struct rtw_ieee80211_hdr_3addr) - 2,
+                .resp_ie = pmlmepriv->assoc_rsp + sizeof(struct rtw_ieee80211_hdr_3addr) + 6,
+                .resp_ie_len = pmlmepriv->assoc_rsp_len - sizeof(struct rtw_ieee80211_hdr_3addr) - 6
+        };
+        cfg80211_roamed(padapter->pnetdev,&roam_info, GFP_ATOMIC);
+#else
 		cfg80211_roamed(padapter->pnetdev
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 39) || defined(COMPAT_KERNEL_RELEASE)
 		                , notify_channel
@@ -758,6 +775,7 @@
 		                , pmlmepriv->assoc_rsp + sizeof(struct rtw_ieee80211_hdr_3addr) + 6
 		                , pmlmepriv->assoc_rsp_len - sizeof(struct rtw_ieee80211_hdr_3addr) - 6
 		                , GFP_ATOMIC);
+#endif
 	} else {
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3, 11, 0) || defined(COMPAT_KERNEL_RELEASE)
 		RTW_INFO("pwdev->sme_state(b)=%d\n", pwdev->sme_state);
@@ -1721,7 +1739,11 @@
 #endif
 static int cfg80211_rtw_change_iface(struct wiphy *wiphy,
                                      struct net_device *ndev,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,12,0))
+				                     enum nl80211_iftype type,
+#else
                                      enum nl80211_iftype type, u32 *flags,
+#endif                                     
                                      struct vif_params *params) {
 	enum nl80211_iftype old_type;
 	NDIS_802_11_NETWORK_INFRASTRUCTURE networkType;
@@ -3595,7 +3617,12 @@
 	mon_ndev->type = ARPHRD_IEEE80211_RADIOTAP;
 	strncpy(mon_ndev->name, name, IFNAMSIZ);
 	mon_ndev->name[IFNAMSIZ - 1] = 0;
-	mon_ndev->destructor = rtw_ndev_destructor;
+#if (LINUX_VERSION_CODE>=KERNEL_VERSION(4,11,9))
+    mon_ndev->needs_free_netdev = true;
+	mon_ndev->priv_destructor = rtw_ndev_destructor;
+#else 
+    mon_ndev->destructor = rtw_ndev_destructor;	   
+#endif
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29))
 	mon_ndev->netdev_ops = &rtw_cfg80211_monitor_if_ops;
@@ -3661,7 +3688,12 @@
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 1, 0))
     unsigned char name_assign_type,
 #endif
-    enum nl80211_iftype type, u32 *flags, struct vif_params *params) {
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,12,0))
+	enum nl80211_iftype type, struct vif_params *params)
+#else
+    enum nl80211_iftype type, u32 *flags, struct vif_params *params) 
+#endif
+    {
 	int ret = 0;
 	struct net_device *ndev = NULL;
 	_adapter *padapter = wiphy_to_adapter(wiphy);
