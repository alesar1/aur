# Specify additional arguments to pass to promscale on startup
PROMSCALE_ARGS=""

# Available arguments and environment variables:
#
#  -async-acks
#        Ack before data is written to DB [TS_PROM_ASYNC_ACKS]
#  -db-connect-retries int
#        How many times to retry connecting to the database [TS_PROM_DB_CONNECT_RETRIES]
#  -db-connections-max int
#        maximum connections that can be open at once, defaults to 80% of the max the DB can handle [TS_PROM_DB_CONNECTIONS_MAX] (default -1)
#  -db-host string
#        The TimescaleDB host [TS_PROM_DB_HOST] (default "localhost")
#  -db-name string
#        The TimescaleDB database [TS_PROM_DB_NAME] (default "timescale")
#  -db-password string
#        The TimescaleDB password [TS_PROM_DB_PASSWORD]
#  -db-port int
#        The TimescaleDB port [TS_PROM_DB_PORT] (default 5432)
#  -db-ssl-mode string
#        The TimescaleDB connection ssl mode [TS_PROM_DB_SSL_MODE] (default "require")
#  -db-user string
#        The TimescaleDB user [TS_PROM_DB_USER] (default "postgres")
#  -db-writer-connection-concurrency int
#        maximum number of database connections per go process writing to the database [TS_PROM_DB_WRITER_CONNECTION_CONCURRENCY] (default 4)
#  -install-timescaledb
#        Install or update the TimescaleDB extension [TS_PROM_INSTALL_TIMESCALEDB] (default true)
#  -labels-cache-size uint
#        maximum number of labels to cache [TS_PROM_LABELS_CACHE_SIZE] (default 10000)
#  -leader-election-pg-advisory-lock-id int
#        Unique advisory lock id per adapter high-availability group. Set it if you want to use leader election implementation based on PostgreSQL advisory lock. [TS_PROM_LEADER_ELECTION_PG_ADVISORY_LOCK_ID]
#  -leader-election-pg-advisory-lock-prometheus-timeout slack
#        Adapter will resign if there are no requests from Prometheus within a given timeout (0 means no timeout). Note: make sure that only one Prometheus instance talks to the adapter. Timeout value should be co-related with Prometheus scrape interval but add enough slack to prevent random flips. [TS_PROM_LEADER_ELECTION_PG_ADVISORY_LOCK_PROMETHEUS_TIMEOUT] (default -1ns)
#  -log-format string
#        The log format to use [ "logfmt", "json" ]. [TS_PROM_LOG_FORMAT] (default "logfmt")
#  -log-level string
#        The log level to use [ "error", "warn", "info", "debug" ]. [TS_PROM_LOG_LEVEL] (default "debug")
#  -metrics-cache-size uint
#        maximum number of metric names to cache [TS_PROM_METRICS_CACHE_SIZE] (default 10000)
#  -migrate string
#        Update the Prometheus SQL to the latest version. Valid options are: [true, false, only] [TS_PROM_MIGRATE] (default "true")
#  -read-only
#        Read-only mode. Don't write to database. Useful when pointing adapter to read replica [TS_PROM_READ_ONLY]
#  -scheduled-election-interval duration
#        Interval at which scheduled election runs. This is used to select a leader and confirm that we still holding the advisory lock. [TS_PROM_SCHEDULED_ELECTION_INTERVAL] (default 5s)
#  -tput-report int
#        interval in seconds at which throughput should be reported [TS_PROM_TPUT_REPORT]
#  -use-schema-version-lease
#        Prevent race conditions during migration [TS_PROM_USE_SCHEMA_VERSION_LEASE] (default true)
#  -web-cors-origin string
#        Regex for CORS origin. It is fully anchored. Example: 'https?://(domain1|domain2)\.com' [TS_PROM_WEB_CORS_ORIGIN] (default ".*")
#  -web-listen-address string
#        Address to listen on for web endpoints. [TS_PROM_WEB_LISTEN_ADDRESS] (default ":9201")
#  -web-telemetry-path string
#        Address to listen on for web endpoints. [TS_PROM_WEB_TELEMETRY_PATH] (default "/metrics")
