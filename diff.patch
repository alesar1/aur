--- a/src/chainparams.cpp	2016-09-07 22:43:02.398093506 -0700
+++ b/src/chainparams.cpp	2016-09-07 22:14:12.888168216 -0700
@@ -90,16 +90,16 @@
         //
         // http://doc.satoshilabs.com/slips/slip-0044.html gives the CLAM coin type version as 23 (0x80000017)
 
-        base58Prefixes[PUBKEY_ADDRESS] = list_of(137);
-        base58Prefixes[SCRIPT_ADDRESS] = list_of(13);
+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,137);
+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,13);
         //CLAM Secret key, from old base58.h (release 1.4.2.1)  == 5 + 128
-        base58Prefixes[SECRET_KEY]     = list_of(133);
+        base58Prefixes[SECRET_KEY]     = std::vector<unsigned char>(1,133);
         //BTC, LTC and DOGE secret keys
-        base58Prefixes[SECRET_KEY_BTC] = list_of(128);
-        base58Prefixes[SECRET_KEY_LTC] = list_of(176);
-        base58Prefixes[SECRET_KEY_DOGE] = list_of(158);
-        base58Prefixes[EXT_PUBLIC_KEY] = list_of(0x04)(0x88)(0xB2)(0x1E);
-        base58Prefixes[EXT_SECRET_KEY] = list_of(0x04)(0x88)(0xAD)(0xE4);
+        base58Prefixes[SECRET_KEY_BTC] = std::vector<unsigned char>(1,128);
+        base58Prefixes[SECRET_KEY_LTC] = std::vector<unsigned char>(1,176);
+        base58Prefixes[SECRET_KEY_DOGE] = std::vector<unsigned char>(1,158);
+        base58Prefixes[EXT_PUBLIC_KEY] = boost::assign::list_of(0x04)(0x88)(0xB2)(0x1E).convert_to_container<std::vector<unsigned char> >();
+        base58Prefixes[EXT_SECRET_KEY] = boost::assign::list_of(0x04)(0x88)(0xAD)(0xE4).convert_to_container<std::vector<unsigned char> >();
 
         convertSeed6(vFixedSeeds, pnSeed6_main, ARRAYLEN(pnSeed6_main));
     }
@@ -148,11 +148,11 @@
         vFixedSeeds.clear();
         vSeeds.clear();
 
-        base58Prefixes[PUBKEY_ADDRESS] = list_of(111);
-        base58Prefixes[SCRIPT_ADDRESS] = list_of(196);
-        base58Prefixes[SECRET_KEY]     = list_of(239);
-        base58Prefixes[EXT_PUBLIC_KEY] = list_of(0x04)(0x35)(0x87)(0xCF);
-        base58Prefixes[EXT_SECRET_KEY] = list_of(0x04)(0x35)(0x83)(0x94);
+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);
+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,96);
+        base58Prefixes[SECRET_KEY]     = std::vector<unsigned char>(1,239);
+        base58Prefixes[EXT_PUBLIC_KEY] = boost::assign::list_of(0x04)(0x35)(0x87)(0xCF).convert_to_container<std::vector<unsigned char> >();
+        base58Prefixes[EXT_SECRET_KEY] = boost::assign::list_of(0x04)(0x35)(0x83)(0x94).convert_to_container<std::vector<unsigned char> >();
 
         convertSeed6(vFixedSeeds, pnSeed6_test, ARRAYLEN(pnSeed6_test));
 
