diff --unified --recursive --text easea.ok/compiler/Easea.h easea/compiler/Easea.h
--- easea.ok/compiler/Easea.h	2021-10-04 19:49:25.576925333 +0200
+++ easea/compiler/Easea.h	2021-10-05 16:21:17.662062145 +0200
@@ -81,6 +81,31 @@
 extern unsigned iMAX_INIT_TREE_D,iMIN_INIT_TREE_D,iMAX_TREE_D,iNB_GPU,iPRG_BUF_SIZE,iMAX_TREE_DEPTH,iNO_FITNESS_CASES;
 
 // Prototypes
-extern int mystricmp(const char *, const char *);
+static inline char  mytolower(char c) {
+  return ((c>=65)&&(c<=90)) ? c+=32:c;
+}
+
+static inline int mystricmp(const char *string1, const char *string2){
+  int i;
+  for (i=0; string1[i]&&string2[i];i++){
+    if (mytolower(string1[i])<mytolower(string2[i])) return -(i+1);
+    if (mytolower(string1[i])>mytolower(string2[i])) return i+1;
+  }
+  if (string2[i]) return  -(i+1);
+  if (string1[i]) return  i+1;
+  return 0;
+}                                  
+
+static inline int isLetter(char c){ 
+  if (((c>=65)&&(c<=90))||((c>=97)&&(c<=122))) return 1;
+  if ((c==45)||(c==46)||(c==95)) return 1;
+  return 0;
+}
+
+static inline int isFigure(char c){ 
+  if ((c>=48)&&(c<=57)) return 1;
+  return 0;
+}
+
 
 #endif
--- easea.ok/compiler/EaseaLex.l	2021-10-04 19:49:25.576925333 +0200
+++ easea/compiler/EaseaLex.l	2021-10-05 16:21:00.321604976 +0200
@@ -2475,33 +2475,6 @@
 
 %%
 		       /////////////////////////////////////////////////////////////////////////////
-
-inline char  mytolower(char c) {
-  return ((c>=65)&&(c<=90)) ? c+=32:c;
-}
-
-inline int mystricmp(const char *string1, const char *string2){
-  int i;
-  for (i=0; string1[i]&&string2[i];i++){
-    if (mytolower(string1[i])<mytolower(string2[i])) return -(i+1);
-    if (mytolower(string1[i])>mytolower(string2[i])) return i+1;
-  }
-  if (string2[i]) return  -(i+1);
-  if (string1[i]) return  i+1;
-  return 0;
-}                                  
-
-inline int isLetter(char c){ 
-  if (((c>=65)&&(c<=90))||((c>=97)&&(c<=122))) return 1;
-  if ((c==45)||(c==46)||(c==95)) return 1;
-  return 0;
-}
-
-inline int isFigure(char c){ 
-  if ((c>=48)&&(c<=57)) return 1;
-  return 0;
-}
-
 /////////////////////////////////////////////////////////////////////////////
 // EASEALexer commands
 diff --unified --recursive --text easea/compiler/EaseaSym.cpp easea.ok/compiler/EaseaSym.cpp
--- easea/compiler/EaseaSym.cpp	2021-10-05 16:48:00.538024802 +0200
+++ easea.ok/compiler/EaseaSym.cpp	2021-10-04 19:49:25.576925333 +0200
@@ -42,6 +42,19 @@
 //   else pHead=new CListItem<T>(pCurrent,NewObject);
 //   }
 
+template <class T> CListItem<T> *CLList<T>::walkToNextItem()
+{
+	if (pNextItem==NULL) return NULL;
+	if (pNextItem==pHead)
+	{
+		pNextItem=pHead->pNext;
+		return pHead;
+	}
+	pCurrentObject=pNextItem;
+	pNextItem=pNextItem->pNext;
+	return pCurrentObject;
+}
+
 /////////////////////////////////////////////////////////////////////////////
 // symbol construction/destruction
 
diff --unified --recursive --text easea/compiler/EaseaSym.h easea.ok/compiler/EaseaSym.h
--- easea/compiler/EaseaSym.h	2021-10-05 16:47:57.061354350 +0200
+++ easea.ok/compiler/EaseaSym.h	2021-10-04 19:49:25.576925333 +0200
@@ -67,21 +67,6 @@
   CListItem<T> *remove(T *p);
   };
 
-/* Need to be defined in Header !! */
-template <class T> CListItem<T> *CLList<T>::walkToNextItem()
-{
-	if (pNextItem==NULL) return NULL;
-	if (pNextItem==pHead)
-	{
-		pNextItem=pHead->pNext;
-		return pHead;
-	}
-	pCurrentObject=pNextItem;
-	pNextItem=pNextItem->pNext;
-	return pCurrentObject;
-}
-
-
  /////////////////////////////////////////////////////////////////////////////
 // Symbol
 
