# v1.9.0-beta.4

- Multi-note editor: ensuring the set of selected notes is updated properly for example when notes are deleted
- New command: note.revealInSidebar
- New command: tags.expandOnlyParents
- Syntax highlighting: added support for 945 common extension names as aliases for grammars, it's not recommended to use these because different grammars may say they use the same extensions
- New search filter: `path:*`, it searches into the file path of each note
- New search filter: `file:*`, it searches into the file name of each note
- Help menu: reorganized links to help pages into submenus
- Window: reduced the minimun allowed width outside of zen mode by ~100px
- New theme colors: `color:success:background`, `color:success:backgroundHover`, `color:success:backgroundActive`, `color:success:border`, `color:success:foreground`
- Global search: added an inline preview of what matches will be replaced with
- Preview search: scrolling the current match into view automatically
- Preview search: opening closed `<details>` elements automatically if the current match is inside them
- Tab: switching to the existing tab for the chosen note instead of creating a new one, unless a new tab is explicitly requested
- Editor search: ensuring decorations are updated immediately and always as soon as the search bar is opened
- Palette: ensuring recent items picked again are properly ranked up at the top next time
- New settings scope: "window", this exists only while there are multiple windows open, it takes precedence over every other scope, and it's pre-populated with setting regarding the interface, the idea is that multiple windows can now look different at the same time
- Settings: triggering a sync write when closing/reloading/opening a window
- Search engine: always setting multi-line matching when searching with regexes, as that's more useful
- Window: ensuring in-memory settings are saved before opening a new window, so that they are picked up by the new window
- Removed shortcut: double-click for jumping from the preview to the editor, use Cmd/Ctrl+Click
- New setting: search.results.collapsed, if "true" global search results start collapsed rather than expanded
- Titlebar: increased width of window control buttons to match the width of the native buttons in Explorer in Windows 11 (Windows)
- Viewbar: minor changes to the css
- Markdown grammar: added basic support for the frontmatter section, although disabled as it can't quite be implemented perfectly apparently
- Markdown compiler: added basic frontmatter detection
- Added a basic standalone file editor: textual files and attachments can now be edited via the "Edit" context menu item in their context menus
- Updated command: note.revealInSidebar, ensuring if a note is in a special section like "Favorites" it's still revealed properly
- New commands: search.results.copy, search.results.copyLinks, search.results.copyMarkdownLinks, search.results.copyPaths
- Zen mode: added a button to the toolbar of the default mainbar for switching to other tabs
- Zen mode: retractable UI elements now have a consisent 15px area used for opening them, they are animated, and the viewbar+sidebar can be shown on the left too
- Zen mode: ensuring the titlebar is taken into account when positioning retractable sections
- Zen mode: fixed a Windows-only bug that made the viewbar+sidebar section close automatically
- Semaphore: avoiding repositioning it depending on the state of the app (macOS)
- New command: note.metadata.log, for quickly inspecting a specific metadata field for the current note via a shortcut
- Tab: ensuring all non-note tabs are rendered as persistent tabs
- Shortcuts: ensuring unbinding shortcuts (prefixed with "-") work
- Shortcuts value autocomplete provider: fixed a major performance issue
- Search engine: fixed a major performance regression when matching fuzzily in some edge cases
- Treating `*.rmd` files as Markdown files
- Tab context menu: hiding the Persistent/Unpersistent menu item for pinned tabs
- Settings: fixed a pretty important internal synchronization bug between in-memory settings and on-disk settings
- Updated shortcut: Ctrl/Cmd+Alt+Click -> DoubleClick, on a tag in the sidebar to search into it
- Commands: every command is now marked as either secure or insecure
- Scheme: automatically considering `notable://` urls that trigger a secure command as secure themselves


