diff --git a/CMakeLists.txt b/CMakeLists.txt
index a13b35d..9cb8cb6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -378,20 +378,34 @@ if(CUDA_FOUND)
             DEPENDS src/modelHandler_CUDA.cu
         )
     endif()
+    if (CUDA_VERSION_MAJOR LESS 10)
+        add_custom_command(
+            OUTPUT modelHandler_CUDA.ptx30.h
+            COMMAND ${CONV_EXE} modelHandler_CUDA.ptx30 modelHandler_CUDA.ptx30.h str
+            DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx20 conv
+        )
+        add_custom_command(
+            OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx30
+            COMMAND ${CUDA_NVCC_EXECUTABLE} ${CUDA_NVCC_FLAGS} -arch=sm_30 -ptx -o ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx30 ${CMAKE_CURRENT_SOURCE_DIR}/src/modelHandler_CUDA.cu
+            DEPENDS src/modelHandler_CUDA.cu
+        )
+    endif()
     add_custom_command(
-        OUTPUT modelHandler_CUDA.ptx30.h
-        COMMAND ${CONV_EXE} modelHandler_CUDA.ptx30 modelHandler_CUDA.ptx30.h str
-        DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx30 conv
+        OUTPUT modelHandler_CUDA.ptx52.h
+        COMMAND ${CONV_EXE} modelHandler_CUDA.ptx52 modelHandler_CUDA.ptx52.h str
+        DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx52 conv
     )
     add_custom_command(
-        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx30
-        COMMAND ${CUDA_NVCC_EXECUTABLE} ${CUDA_NVCC_FLAGS} -arch=sm_30 -ptx -o ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx30 ${CMAKE_CURRENT_SOURCE_DIR}/src/modelHandler_CUDA.cu
+        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx52
+        COMMAND ${CUDA_NVCC_EXECUTABLE} ${CUDA_NVCC_FLAGS} -arch=sm_52 -ptx -o ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx52 ${CMAKE_CURRENT_SOURCE_DIR}/src/modelHandler_CUDA.cu
         DEPENDS src/modelHandler_CUDA.cu
     )
     if (CUDA_VERSION_MAJOR LESS 9)
         set(GPU_CODE ${GPU_CODE} modelHandler_CUDA.ptx30.h modelHandler_CUDA.ptx20.h)
-    else()
+    elseif (CUDA_VERSION_MAJOR LESS 10)
         set(GPU_CODE ${GPU_CODE} modelHandler_CUDA.ptx30.h)
+    else()
+        set(GPU_CODE ${GPU_CODE} modelHandler_CUDA.ptx52.h)
     endif()
 endif()

diff --git a/src/modelHandler_CUDA.cpp b/src/modelHandler_CUDA.cpp
index af879fe..304e6d1 100644
--- a/src/modelHandler_CUDA.cpp
+++ b/src/modelHandler_CUDA.cpp
@@ -47,9 +47,14 @@ static void *handle;
         static const char prog20[] =
             #include "modelHandler_CUDA.ptx20.h"
             ;
-    #endif // CUDART_VERSION < 9000
-    static const char prog30[] =
-        #include "modelHandler_CUDA.ptx30.h"
+    #endif // CUDART_VERSION < 10000
+    #if CUDART_VERSION < 10000
+        static const char prog30[] =
+            #include "modelHandler_CUDA.ptx30.h"
+            ;
+    #endif // CUDART_VERSION < 10000
+    static const char prog52[] =
+        #include "modelHandler_CUDA.ptx52.h"
 	;
 #endif // HAVE_CUDA

@@ -172,9 +177,15 @@ namespace w2xc
 			return false;
 		}

-		const char *prog = prog30;
+		const char *prog = prog52;
 		// cuda 9.0 doesn't support Compute 20

+#if CUDART_VERSION < 10000
+		if (cap_major < 3)
+		{
+			prog = prog30;
+		}
+#endif // CUDART_VERSION < 10000
 #if CUDART_VERSION < 9000
 		if (cap_major < 3)
 		{
