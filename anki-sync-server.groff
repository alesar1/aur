.ds server anki-sync-server
.ds server-dir /opt/anki-sync-server

.TH \*[server] 1 "" "2022-01-22" "Post Installation Guide"

.SH Name
.IP anki-sync-server

.SH Synopsis
.
database
.RS
cd /opt/anki-sync-server &&
.br
sudo -u anki-sync-server ankisyncctl.py
.RE
.
server
.RS
cd /opt/anki-sync-server &&
.br
sudo -u anki-sync-server python -m ankisyncd
.RE
.
systemctl
.RS
systemctl <command> anki-sync-server
.RE
.
.YS

.SH Post Installation Instructions
.SS Adding a user
.PP
You'll need to go to:

.EX
    \*[server-dir]
.EE

and run:

.EX
    sudo -u \*[server] ./ankisyncctl.py adduser <username>
.EE

to add a new user to the \*[server] database.

.SS Plugin Installation
.PP
To have your anki client interface with the server, you'll need to copy the plugin
from \fI\*[server-dir]/plugins\fR to the relevant directory.

.ds anki-2.1.28 ~/.local/share/Anki2/addons21
.ds anki-2.1 ~/.local/share/Anki2/addons21
.ds anki-2 ~/Anki/addons
.ds anki-plugins \*[server-dir]/plugins

\fIAnki 2.1.28 (and up)\fR
.EX
    ln -s  \\
      \*[anki-plugins]/anki2.1.28/\*[server] \\
      \*[anki-2.1.28]/\*[server]
.EE

\fIAnki 2.1\fR
.EX
    ln -s  \\
      \*[anki-plugins]/anki2.1/\*[server] \\
      \*[anki-2.1]/\*[server]
.EE

\fIAnki 2.0\fR
.EX
    ln -s  \\
      \*[anki-plugins]/anki2.0/\*[server].py \\
      \*[anki-2]/\*[server].py
.EE

or your OS equivalent.

.SS Running The Server
.PP
The server should be set to auto start via \fIsystemctl\fR and should be already running.
See:

.EX
    systemctl status \*[server]
    systemctl status nginx
.EE

for details.

Otherwise, to run the server go to:

.EX
    \*[server-dir]/
.EE

then run:

.EX
    sudo -u \*[server] python -m ankisyncd
.EE

.B NOTE: if you run it as another user you may have to install the python dependencies again:

.EX
    pip install -r \*[server-dir]/requirements.txt [--user]
.EE

.B Be aware you may have trouble with permissions on your auth.db and
.B other files if you run as different users!

.SH NGINX
.PP
\fI/etc/nginx/nginx.conf\fR may have been modified. If the installation modifed
the \fInginx.conf\fR file, a backup has been saved to
\fI/etc/nginx/nginx.conf.pacsave\fR. It would be a good idea to to see if
anything has gone awry.

.SS Server Files
.
.PP
There are two servers included in \fI/etc/nginx/site-available\fR:

.RS
.IP \(bu 2
anki-sync-server-http
.IP \(bu
anki-sync-server-https
.RE

.SS Using The HTTPS Server

By default the HTTP server is enabled. The plugins for the anki client are
set to connect to the nginx server via HTTP.

You can turn on the nginx HTTPS server by symlinking the HTTPS server and
removing the HTTP server from \fI/etc/nginx/sites-enabled\fR.

.SS SSL Certificates
The HTTPS server requires two key files in order to work. You can generate
these keys by using a cert generator like \fImkcert\fR. The key needs to be
named the same thing as the ip address (or dns address) you will be connecting to
when you use the client.

.SS HTTPS Example Usage
.EX
If your server is running on \fI192.168.0.1\fR, then your keys should be
\fI<absolute-path>/192.168.0.1.pem\fR and \fI<absolute-path>/192.168.0.1-key.pem\fR.

Your client will then be connecting to \fIhttps://192.168.0.1:27701\fR.
.EE

Lastly, you need to import the \fIrootCA.pem\fR to your device that you are
using the anki client on (which is also generated by \fImkcert\fR).
