#!/usr/bin/env bash

# x0.at paste client

# Vars

AUTOCOPY=1

# Functions

function usage(){
  filename=$(basename "$0")
  cat <<- EOF
x0.at paste client

Usage :

# Upload a file
$ $filename [OPTIONS] file
$ cat file.ext | $filename [OPTIONS]

# Upload text
$ echo "upaste rocks" | up
$ up
upaste
really
rocks
C-d C-d

Options :
    -h    Print this usage
    -a    Disable autocopy in clipboard
    -t    Set extension, without dot
EOF
}

function upload(){

  # Set vars
  local args
  local url

  if [ -z "$1" ]
  then
    # If argument is empty, upload stdin
    local file="file=@-"
  else
    # Else upload filename
    local file="file=@\"$1\""
  fi

  if [ -z "$EXTENSION" ]
  then
    local extension="filename=$EXTENSION"
  fi

  args="$file;$extension"

  url=$(curl -s -F "$args" 'https://x0.at/')
  return $url
}

# Arguments

function arguments(){
  while getopts "hat:" arg
  do
    case $arg in
      a)
        AUTOCOPY=0
        ;;
      h)
        usage
        exit
        ;;
      t)
        EXTENSION=${OPTARG}
        ;;
      *)
        usage
        exit 1
        ;;
    esac
  done
  shift $((OPTIND-1))
}

function autocopy(){
  # If xorg or wayland is running
  if grep 'DISPLAY' <(env) &> /dev/null
  then
    # If xclip is installed
    if which xclip &> /dev/null
    then
      xclip "$1"
    # Else if wl-clipboard is installed
    elif which wl-copy &> /dev/null
    then
      wl-copy -p "$1"
    fi
  fi
}

function is_file(){
  # Test if first argument is an existing file
  if [ ! -f "$1" ]
  then
    echo "File \"$1\" does not exist or is not a regular file"
    exit 2
  fi
}

function main(){

  # Vars
  local url

  # Getopts
  arguments "$@"

  # If no piped data
  if [ -t 0 ]
  then
  
    # If no argument, read stdin and save url
    if [ -z "$1" ]
    then
      url=$(upload)
      # Force a newline at the end
      echo -e "\n"
    # Else upload argument and save url
    else
      # Test if file exists and is a regular file
      if [ -n "$1" ]
      then
        is_file "$1"
      fi
      url=$(upload "$1")
    fi
  
  # Else if piped data
  else
    # Test if argument exists
    if [ -n "$1" ]
    then
      echo "Warning: ignoring file $1..."
    fi
    # Upload and save url
    url=$(upload)
  fi
  
  # Print url
  echo "$url"

  # If autocopy is set
  if [ "$AUTOCOPY" == "1" ]
  then
    # Autocopy url
    autocopy "$url"
  fi
}

# Main

main "$@"
