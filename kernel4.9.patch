http://dpdk.org/ml/archives/dev/2016-October/049016.html

diff -Naur igb-5.3.5.4-orig/src/igb_main.c igb-5.3.5.4/src/igb_main.c
--- igb-5.3.5.4-orig/src/igb_main.c	2016-08-26 06:01:30.000000000 +0800
+++ igb-5.3.5.4/src/igb_main.c	2017-01-28 17:26:14.030381667 +0800
@@ -183,7 +183,11 @@
 #ifdef IFLA_VF_MAX
 static int igb_ndo_set_vf_mac(struct net_device *netdev, int vf, u8 *mac);
 static int igb_ndo_set_vf_vlan(struct net_device *netdev,
-			       int vf, u16 vlan, u8 qos);
+#ifdef HAVE_VF_VLAN_PROTO
+				int vf, u16 vlan, u8 qos, __be16 vlan_proto);
+#else
+				int vf, u16 vlan, u8 qos);
+#endif
 #ifdef HAVE_VF_SPOOFCHK_CONFIGURE
 static int igb_ndo_set_vf_spoofchk(struct net_device *netdev, int vf,
 				bool setting);
@@ -6615,7 +6619,11 @@
 }
 
 static int igb_ndo_set_vf_vlan(struct net_device *netdev,
-			       int vf, u16 vlan, u8 qos)
+#ifdef HAVE_VF_VLAN_PROTO
+					int vf, u16 vlan, u8 qos, __be16 vlan_proto)
+#else
+					int vf, u16 vlan, u8 qos)
+#endif
 {
 	int err = 0;
 	struct igb_adapter *adapter = netdev_priv(netdev);
@@ -6624,6 +6632,12 @@
 	if ((vf >= adapter->vfs_allocated_count) || (vlan > VLAN_VID_MASK-1)
 	    || (qos > 7))
 		return -EINVAL;
+
+#ifdef HAVE_VF_VLAN_PROTO
+	if (vlan_proto != htons(ETH_P_8021Q))
+		return -EPROTONOSUPPORT;
+#endif
+
 	if (vlan || qos) {
 		err = igb_vlvf_set(adapter, vlan, !!vlan, vf);
 		if (err)
@@ -6783,7 +6797,12 @@
 	if (adapter->vf_data[vf].pf_vlan)
 		igb_ndo_set_vf_vlan(adapter->netdev, vf,
 				    adapter->vf_data[vf].pf_vlan,
-				    adapter->vf_data[vf].pf_qos);
+#ifdef HAVE_VF_VLAN_PROTO
+					adapter->vf_data[vf].pf_qos,
+					htons(ETH_P_8021Q));
+#else
+					adapter->vf_data[vf].pf_qos);
+#endif
 	else
 		igb_clear_vf_vfta(adapter, vf);
 #endif
diff -Naur igb-5.3.5.4-orig/src/kcompat.h igb-5.3.5.4/src/kcompat.h
--- igb-5.3.5.4-orig/src/kcompat.h	2016-08-26 06:01:30.000000000 +0800
+++ igb-5.3.5.4/src/kcompat.h	2017-01-28 17:27:25.429396667 +0800
@@ -4913,6 +4913,7 @@
 #ifndef skb_vlan_tag_present
 #define skb_vlan_tag_present vlan_tx_tag_present
 #endif
+
 #if RHEL_RELEASE_CODE && (RHEL_RELEASE_CODE > RHEL_RELEASE_VERSION(7,1))
 #define HAVE_INCLUDE_LINUX_TIMECOUNTER_H
 #endif
@@ -5068,4 +5069,8 @@
 #define HAVE_UDP_ENC_RX_OFFLOAD
 #endif /* 4.8.0 */
 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(4,9,0) )
+#define HAVE_VF_VLAN_PROTO
+#endif /* >= 4.9.0 */
+
 #endif /* _KCOMPAT_H_ */
