--- a/slang-0.9/source/CMakeLists.txt
+++ b/slang-0.9/source/CMakeLists.txt
@@ -40,7 +40,7 @@ add_custom_target(gen_version
     -P "${CMAKE_CURRENT_SOURCE_DIR}/../cmake/gitversion.cmake"
 )

-add_library(slangcore
+set(slangcore_SOURCES
     ${CMAKE_CURRENT_BINARY_DIR}/DiagCode.cpp
     diagnostics/DiagnosticClient.cpp
     diagnostics/DiagnosticEngine.cpp
@@ -61,17 +61,33 @@ add_library(slangcore
     util/CommandLine.cpp
     util/OS.cpp
     util/String.cpp
-
-    ../external/fmt/format.cc
-    ../external/fmt/os.cc
-    ../external/xxhash/xxhash.cpp
 )
+
+if(NOT SLANG_USE_SYSTEM_LIBS)
+    set(slangcore_SOURCES
+        ${slangcore_SOURCES}
+        ../external/fmt/format.cc
+        ../external/fmt/os.cc
+        ../external/xxhash/xxhash.cpp
+    )
+endif()
+
+add_library(slangcore ${slangcore_SOURCES})
+
 slang_define_lib(slangcore)
 add_dependencies(slangcore gen_version)

+set(slangcore_SYSTEM_LIBS stdc++fs)
+
+if(SLANG_USE_SYSTEM_LIBS)
+    find_package(fmt)
+    find_package(xxHash)
+    set(slangcore_SYSTEM_LIBS ${slangcore_SYSTEM_LIBS} fmt::fmt xxHash::xxhash)
+endif()
+
 if(NOT CMAKE_CXX_COMPILER_ID MATCHES "MSVC" AND NOT APPLE)
     # Link against C++17 filesystem
-    target_link_libraries(slangcore PUBLIC stdc++fs)
+    target_link_libraries(slangcore PUBLIC ${slangcore_SYSTEM_LIBS})
 endif()

 find_package(Threads)

