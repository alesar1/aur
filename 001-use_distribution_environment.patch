--- a/fsl/etc/fslconf/fsl.sh	2014-05-19 16:54:10.000000000 +0200
+++ b/fsl/etc/fslconf/fsl.sh	2018-11-25 11:26:42.623047078 +0100
@@ -26,8 +26,8 @@
 # The following variables specify paths for programs and can be changed
 #  or replaced by different programs ( e.g. FSLDISPLAY=open   for MacOSX)
 
-FSLTCLSH=$FSLDIR/bin/fsltclsh
-FSLWISH=$FSLDIR/bin/fslwish
+FSLTCLSH=/usr/bin/tclsh
+FSLWISH=/usr/bin/wish
 
 export FSLTCLSH FSLWISH 
 
--- a/fsl/etc/fslconf/fsl.csh	2014-05-19 16:54:10.000000000 +0200
+++ b/fsl/etc/fslconf/fsl.csh	2018-11-25 11:26:42.623047078 +0100
@@ -25,8 +25,8 @@
 # The following variables specify paths for programs and can be changed
 #  or replaced by different programs ( e.g. FSLDISPLAY=open   for MacOSX)
 
-setenv FSLTCLSH $FSLDIR/bin/fsltclsh
-setenv FSLWISH $FSLDIR/bin/fslwish
+setenv FSLTCLSH /usr/bin/tclsh
+setenv FSLWISH /usr/bin/wish
 
 # The following variables are used for running code in parallel across
 #  several machines ( i.e. for FDT )
--- a/fsl/etc/fslconf/fsl-devel.sh	2014-05-19 16:54:10.000000000 +0200
+++ b/fsl/etc/fslconf/fsl-devel.sh	2018-11-25 11:26:42.623047078 +0100
@@ -26,8 +26,8 @@
 # The following variables specify paths for programs and can be changed
 #  or replaced by different programs ( e.g. FSLDISPLAY=open   for MacOSX)
 
-FSLTCLSH=$FSLDIR/bin/fsltclsh
-FSLWISH=$FSLDIR/bin/fslwish
+FSLTCLSH=/usr/bin/tclsh
+FSLWISH=/usr/bin/wish
 
 export FSLTCLSH FSLWISH 
 
--- a/fsl/extras/build  2019-09-29 14:50:57.966635464 +0200
+++ b/fsl/extras/build  2019-09-29 14:53:48.906589517 +0200
@@ -96,21 +96,12 @@
        BUILDICONV=1
     fi
 fi
-PROJECTS="tcl tk"
-if [ ${BUILDZLIB} -eq 1 ]; then
-  PROJECTS="${PROJECTS} zlib"
-fi
-PROJECTS="${PROJECTS} libpng"
-if [ ${BUILDICONV} -eq 1 ]; then
-  PROJECTS="${PROJECTS} libiconv"
-fi
-PROJECTS="${PROJECTS} libgd libgdc libprob libcprob newmat cprob newran fftw"
-PROJECTS="${PROJECTS} boost libxml2-2.9.2 libxmlpp libsqlite libnlopt ../include/armawrap/dummy_newmat"
+PROJECTS="${PROJECTS} libgdc libprob libcprob cprob newran ../include/armawrap/dummy_newmat"
 for projname in $PROJECTS; do
     if [ -d $FSLESRCDIR/$projname ] ; then
        buildIt $FSLESRCDIR $projname 1
     elif [ "$projname" = "boost" -a -d ${FSLEXTINC}/boost/boost ]; then
-       buildIt $FSLEXTINC boost 0
+       buildIt $FSLEXTINC 0
     fi
 done
 
--- a/fsl/src/mist/Makefile	2018-10-17 13:00:28.000000000 +0200
+++ b/fsl/src/mist/Makefile	2018-11-25 11:26:42.643047048 +0100
@@ -2,15 +2,15 @@
 
 NLOPT_INC = ${FSLEXTINC}
 NLOPT_LIB = ${FSLEXTLIB}
-SQLITE_INC = ${FSLEXTINC}/libsqlite
-SQLITE_LIB = ${FSLEXTLIB}
+SQLITE_INC = /usr/include/libsqlite
+SQLITE_LIB = /usr/lib
 
 PROJNAME = mist
 
 XFILES = mist/mist
 SCRIPTS = bin/mist_1_train bin/mist_2_fit bin/mist_FA_reg bin/mist_display bin/mist_mesh_utils
 
-USRCXXFLAGS = -std=c++11
+USRCXXFLAGS = -std=c++11 -DBOOST_LOG_DYN_LINK
 USRINCFLAGS = -I${FSLDIR}/include/newimage -I${INC_NEWMAT} -I${INC_ZLIB} -I${INC_GDC} -I${INC_GD} -I${SQLITE_INC} -I${NLOPT_INC} -I${VTKDIR_INC} -Icommon
 USRLDFLAGS = -L${LIB_NEWMAT} -L${LIB_ZLIB} -L${LIB_BOOST} -L${LIB_GDC} -L${LIB_GD} -L${NLOPT_LIB} -L${VTKDIR_LIB}
 
@@ -19,14 +19,14 @@
         LIBRT = -lrt
 endif
 
-LDLIBS =	-lvtkIOLegacy${VTKSUFFIX} -lvtkIOCore${VTKSUFFIX} -lvtkFiltersModeling${VTKSUFFIX} -lvtkFiltersCore${VTKSUFFIX} \
+LDLIBS = 		-lsqlite3 -lvtkIOLegacy${VTKSUFFIX} -lvtkIOCore${VTKSUFFIX} -lvtkFiltersModeling${VTKSUFFIX} -lvtkFiltersCore${VTKSUFFIX} \
 			-lvtkCommonExecutionModel${VTKSUFFIX} -lvtkCommonDataModel${VTKSUFFIX} -lvtkCommonMisc${VTKSUFFIX} \
 			-lvtkCommonSystem${VTKSUFFIX} -lvtkCommonTransforms${VTKSUFFIX} -lvtkCommonMath${VTKSUFFIX} \
 			-lvtkCommonCore${VTKSUFFIX} -lvtksys${VTKSUFFIX} \
 			-lboost_log -lboost_log_setup -lboost_thread -lboost_filesystem -lboost_date_time -lboost_chrono \
 			-lboost_system -lboost_serialization -lboost_regex -lwarpfns -lbasisfield -lnewimage -lmiscmaths \
 			-lnewmat -lgdc -lgd -lpng -lNewNifti -lutils -lznz -lm -lz -lnlopt -lpthread -ldl \
-			${SQLITE_LIB}/libsqlite3.a ${LIBRT}
+			${LIBRT}
 
 HDRS = common/gibbsshapemodel.h common/mrfshapemodel.h common/mvnshapemodel.h common/plotting.h common/profilefilters.h common/profilemixtures.h common/profilemodel.h common/profilepriors.h common/serialisation.h common/shape.h common/shapemodel.h common/stats.h common/transformation.h mist/builddate.h
