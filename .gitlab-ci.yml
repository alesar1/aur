include:
  - project: 'common/gitlab-helper'
    ref: master
    file: 'container-helper.yml'
  - project: 'common/gitlab-helper'
    ref: master
    file: 'deploy-helper.yml'
    
variables:
  BUILD_AND_TEST_IMAGE: "build-and-test"

workflow:
  rules:
    # don't create pipeline if the commit message starts with WIP
    - if: $CI_COMMIT_MESSAGE =~ /^WIP/
      when: never
    # don't create pipeline if we're merging from master or version branches
    - if: $CI_MERGE_REQUEST_IID && $CI_COMMIT_REF_NAME =~ /^(master|VER_\d+_\d+)$/
      when: never
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_REF_NAME =~ /^(master|VER_\d+_\d+)$/
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE =~ /^(trigger|pipeline|web|api|merge_request_event)$/

.rules_templates:
  rules:
    - if: &on_master $CI_COMMIT_REF_NAME =~ /^master$/

stages:
  - prepareBuild
  - build
  - test
  - deploy

docker-build-and-test:
  stage: prepareBuild
  extends: .container-build-and-push
  variables:
    WORKING_DIR: ${CI_PROJECT_DIR}
    DOCKERFILE_NAME: "Dockerfile.build_and_test"
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${BUILD_AND_TEST_IMAGE}:${CI_COMMIT_REF_NAME}
    BUILD_ARGS: REGISTRY=${CI_REGISTRY}

build-clockify-desktop:
  stage: build
  image: ${CI_REGISTRY_IMAGE}/${BUILD_AND_TEST_IMAGE}:${CI_COMMIT_REF_NAME}
  needs:
    - job: "docker-build-and-test"
      artifacts: no
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    expire_in: 1 day
    paths:
      - clockify-desktop*.pkg.tar.zst
  script:
    - makepkg

test-clockify-desktop:
  stage: test
  image: ${CI_REGISTRY_IMAGE}/${BUILD_AND_TEST_IMAGE}:${CI_COMMIT_REF_NAME}
  needs: ["build-clockify-desktop"]
  script:
    - sudo pacman -U --noconfirm clockify-desktop*.pkg.tar.zst
    # This is not a very sophisticated test but at least checks the binary is 
    # in place and there are all shared libs found in the system
    - ls /opt/Clockify/clockify
    - if [[ -n $(ldd /opt/Clockify/clockify | grep "not found") ]]; then exit 1; fi

deploy-clockify-desktop:
  stage: deploy
  extends: .git-ssh-push-remote
  variables:
    REMOTE_HOST: "aur.archlinux.org"
    REMOTE_USER: "aur"
    REMOTE_REPOSITORY: "clockify-desktop.git"
  before_script:
    - echo "Uploading to AUR..."
  rules:
    - if: *on_master
      when: manual
