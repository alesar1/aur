image: "registry.devseed.de/all-the-things/docker-archlinux"

stages:
  - build
  - check
  - release
  - publish


before_script:
  - git config --global user.email "${GIT_USER_EMAIL:-$GITLAB_USER_EMAIL}"
  - git config --global user.name "${GIT_USER_NAME:-$GITLAB_USER_NAME}"


makepkg:
  tags:
    - archlinux
  stage: build
  script:
    # update package hash for integrity check
    - updpkgsums
    # Test building a source package
    - sudo -u builder makepkg -C -S --log --noconfirm
    # Test building and installing the package
    - sudo -u builder makepkg -C -i --log --noconfirm
    # generate SRCINFO
    - sudo -u builder makepkg --printsrcinfo > .SRCINFO
  cache:
    key: makepkg
    paths:
      - PKGBUILD
      - .SRCINFO

namcap:
  tags:
    - archlinux
  stage: check
  script:
    - namcap -i PKGBUILD
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
      allow_failure: true

push:
  tags:
    - archlinux
  stage: release
  script:
    - git add PKGBUILD
    - git diff-index --quiet HEAD || git commit -m "updates hash for AppImage"
    - git add .SRCINFO
    - git diff-index --quiet HEAD || git commit -m "updates .SRCINFO"
    - git push -o ci.skip "https://${GITLAB_USER_NAME}:${RENOVATE_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:${CI_COMMIT_BRANCH}"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
      when: never

publish:
  tags:
    - archlinux
  stage: publish
  script:
    - command -v ssh-agent >/dev/null || ( sudo pacman -Sy --noconfirm openssh )
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$AUR_SSH_KEY" | tr -d '\r' | ssh-add -
    - git remote add aur-defi-app-bin ssh://aur@aur.archlinux.org/defi-app-bin.git || true
    - git push aur-defi-app-bin HEAD:master
