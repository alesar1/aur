From 3a6b12cf42efc3369e7e9d9d04d9febe3b85b571 Mon Sep 17 00:00:00 2001
From: Marko Kabic <mkmarkokabic@gmail.com>
Date: Sat, 5 Dec 2020 23:32:52 +0100
Subject: [PATCH] Fixed the outdated scalar_matmul.cpp test.

---
 tests/multiply.cpp      | 3 ---
 tests/scalar_matmul.cpp | 7 +++++--
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/tests/multiply.cpp b/tests/multiply.cpp
index 5580865..dbe9881 100644
--- a/tests/multiply.cpp
+++ b/tests/multiply.cpp
@@ -129,9 +129,6 @@ TEST_P(MultiplyTestWithParams, multiply) {
 
         EXPECT_TRUE(no_overlap);
 
-        // wait for no-overlap to finish
-        MPI_Barrier(comm);
-
         // then run with the overlap of communication and computation
         strategy.enable_overlapping_comm_and_comp();
         bool with_overlap = test_cosma<double>(strategy, ctx, comm, epsilon, multiply_state::get_test_counter());
diff --git a/tests/scalar_matmul.cpp b/tests/scalar_matmul.cpp
index 0f6f5d1..650d280 100644
--- a/tests/scalar_matmul.cpp
+++ b/tests/scalar_matmul.cpp
@@ -27,11 +27,14 @@ void test_matmul() {
     auto ctx = cosma::make_context<Scalar>();
 
     // first run without overlapping communication and computation
-    bool no_overlap = test_cosma<Scalar>(strategy, ctx, comm, false, 1e-2);
+    bool no_overlap = test_cosma<Scalar>(strategy, ctx, comm, 1e-2, 0);
     ASSERT_TRUE(no_overlap);
 
+    // enable the ovelap of comm and comp
+    strategy.enable_overlapping_comm_and_comp();
+
     // then run with the overlap of communication and computation
-    bool with_overlap = test_cosma<Scalar>(strategy, ctx, comm, true, 1e-2);
+    bool with_overlap = test_cosma<Scalar>(strategy, ctx, comm, 1e-2, 1);
     ASSERT_TRUE(with_overlap);
 }
 
