From aeb2c3fa7a434a0b0838381ba63661f284221e33 Mon Sep 17 00:00:00 2001
From: Adam Dodman <adam@adam-ant.co.uk>
Date: Sat, 23 Oct 2021 17:01:02 +0100
Subject: [PATCH] New Steam libraryfolders format

---
 src/data/sources/steam/Steam.vala | 24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/src/data/sources/steam/Steam.vala b/src/data/sources/steam/Steam.vala
index 13c641f..d2f49e1 100644
--- a/src/data/sources/steam/Steam.vala
+++ b/src/data/sources/steam/Steam.vala
@@ -481,19 +481,33 @@ namespace GameHub.Data.Sources.Steam
 				if(libraryfolders == null || !libraryfolders.query_exists()) return _library_folders;
 
 				var root = Parser.parse_vdf_file(libraryfolders.get_path());
-				var lf = Parser.json_object(root, {"LibraryFolders"});
+				var lf = Parser.json_object(root, {"libraryfolders"}) ?? Parser.json_object(root, {"LibraryFolders"});
 
 				if(lf != null)
 				{
-					foreach(var key in lf.get_members())
-					{
-						var libdir = FS.file(lf.get_string_member(key));
+            lf.foreach_member((obj, key, node) => {
+						File? libdir = null;
+
+						if(node.get_node_type() == Json.NodeType.VALUE)
+						{
+							libdir = FS.file(node.get_string());
+						}
+						else if(node.get_node_type() == Json.NodeType.OBJECT)
+						{
+							var libobj = node.get_object();
+							if(libobj.has_member("path"))
+							{
+								libdir = FS.file(libobj.get_string_member("path"));
+							}
+						}
+
+
 						if(libdir != null && libdir.query_exists())
 						{
 							var dir = FS.find_case_insensitive(libdir, "steamapps");
 							if(dir != null && dir.query_exists()) _library_folders.add(dir.get_path());
 						}
-					}
+					});
 				}
 
 				return _library_folders;
-- 
2.33.1

