From 449ac8c3c81a82a7e86019ca4401b78d7f387f47 Mon Sep 17 00:00:00 2001
From: Rafael Reggiani Manzo <rr.manzo@gmail.com>
Date: Thu, 10 Dec 2015 08:01:42 -0200
Subject: [PATCH] Fix Flex version compilation restriction

The macro did not handled the case of flex 2.6.0.
---
 src/code.l           | 4 ++--
 src/commentcnv.l     | 2 +-
 src/commentscan.l    | 6 +++---
 src/declinfo.l       | 2 +-
 src/defargs.l        | 2 +-
 src/doctokenizer.l   | 2 +-
 src/fortrancode.l    | 4 ++--
 src/fortranscanner.l | 2 +-
 src/pre.l            | 4 ++--
 src/pycode.l         | 4 ++--
 src/pyscanner.l      | 2 +-
 src/scanner.l        | 2 +-
 src/tclscanner.l     | 2 +-
 src/vhdlcode.l       | 6 +++---
 src/xmlcode.l        | 4 ++--
 15 files changed, 24 insertions(+), 24 deletions(-)

diff --git a/src/code.l b/src/code.l
index c024f6c..4ae27d9 100644
--- a/src/code.l
+++ b/src/code.l
@@ -3741,11 +3741,11 @@ void codeFreeScanner()
 
 
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
   void codeYYdummy() { yy_flex_realloc(0,0); } 
 }
-#elif YY_FLEX_SUBMINOR_VERSION<33
+#elif YY_FLEX_SUBMINOR_VERSION<33 && YY_FLEX_MINOR_VERSION < 6
 #error "You seem to be using a version of flex newer than 2.5.4 but older than 2.5.33. These versions do NOT work with doxygen! Please use version <=2.5.4 or >=2.5.33 or expect things to be parsed wrongly!"
 #endif
 
diff --git a/src/commentcnv.l b/src/commentcnv.l
index 8823b68..ff75b4d 100644
--- a/src/commentcnv.l
+++ b/src/commentcnv.l
@@ -1038,7 +1038,7 @@ void convertCppComments(BufStr *inBuf,BufStr *outBuf,const char *fileName)
 
 
 //----------------------------------------------------------------------------
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
     void commentcnvYYdummy() { yy_flex_realloc(0,0); } 
 }
diff --git a/src/commentscan.l b/src/commentscan.l
index 3546277..c3746ab 100644
--- a/src/commentscan.l
+++ b/src/commentscan.l
@@ -1103,7 +1103,7 @@ RCSTAG    "$"{ID}":"[^\n$]+"$"
 					      // but we need to know the position in the input buffer where this 
 					      // rule matched.
 					      // for flex 2.5.33+ we should use YY_CURRENT_BUFFER_LVALUE
-#if YY_FLEX_MINOR_VERSION>=5 && YY_FLEX_SUBMINOR_VERSION>=33
+#if (YY_FLEX_MINOR_VERSION==5 && YY_FLEX_SUBMINOR_VERSION>=33) || YY_FLEX_MINOR_VERSION>5
 					      inputPosition=prevPosition + (int)(yy_bp - YY_CURRENT_BUFFER_LVALUE->yy_ch_buf);
 #else
 					      inputPosition=prevPosition + (int)(yy_bp - yy_current_buffer->yy_ch_buf);
@@ -1165,7 +1165,7 @@ RCSTAG    "$"{ID}":"[^\n$]+"$"
                                           g_memberGroupHeader.resize(0);
 					  parseMore=TRUE;
                                           needNewEntry = TRUE;
-#if YY_FLEX_MINOR_VERSION>=5 && YY_FLEX_SUBMINOR_VERSION>=33
+#if (YY_FLEX_MINOR_VERSION==5 && YY_FLEX_SUBMINOR_VERSION>=33) || YY_FLEX_MINOR_VERSION>5
 				          inputPosition=prevPosition + (int)(yy_bp - YY_CURRENT_BUFFER_LVALUE->yy_ch_buf) + strlen(yytext);
 #else
 				          inputPosition=prevPosition + (int)(yy_bp - yy_current_buffer->yy_ch_buf) + strlen(yytext);
@@ -3202,7 +3202,7 @@ static void handleGuard(const QCString &expr)
 
 
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 //----------------------------------------------------------------------------
 extern "C" { // some bogus code to keep the compiler happy
   void commentscanYYdummy() { yy_flex_realloc(0,0); } 
diff --git a/src/declinfo.l b/src/declinfo.l
index 0f24d9e..180fd01 100644
--- a/src/declinfo.l
+++ b/src/declinfo.l
@@ -352,7 +352,7 @@ int main()
 }
 #endif
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 //----------------------------------------------------------------------------
 extern "C" { // some bogus code to keep the compiler happy
   void declinfoYYdummy() { yy_flex_realloc(0,0); } 
diff --git a/src/defargs.l b/src/defargs.l
index 9032d8e..f23055f 100644
--- a/src/defargs.l
+++ b/src/defargs.l
@@ -575,7 +575,7 @@ void stringToArgumentList(const char *argsString,ArgumentList* al,QCString *extr
   printlex(yy_flex_debug, FALSE, __FILE__, NULL);
 }
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
   void defargsYYdummy() { yy_flex_realloc(0,0); } 
 }
diff --git a/src/doctokenizer.l b/src/doctokenizer.l
index 31d583c..9f03108 100644
--- a/src/doctokenizer.l
+++ b/src/doctokenizer.l
@@ -1512,7 +1512,7 @@ void doctokenizerYYendAutoList()
 //  printlex(yy_flex_debug, FALSE, __FILE__, g_fileName);
 //  return retval;
 //}
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
     void doctokenizerYYdummy() { yy_flex_realloc(0,0); }
 }
diff --git a/src/fortrancode.l b/src/fortrancode.l
index af1a82e..da28dd5 100644
--- a/src/fortrancode.l
+++ b/src/fortrancode.l
@@ -1302,11 +1302,11 @@ void parseFortranCode(CodeOutputInterface &od,const char *className,const QCStri
   return;
 }
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
   void fortrancodeYYdummy() { yy_flex_realloc(0,0); } 
 }
-#elif YY_FLEX_SUBMINOR_VERSION<33
+#elif YY_FLEX_SUBMINOR_VERSION<33 && YY_FLEX_MINOR_VERSION < 6
 #error "You seem to be using a version of flex newer than 2.5.4 but older than 2.5.33. These versions do NOT work with doxygen! Please use version <=2.5.4 or >=2.5.33 or expect things to be parsed wrongly!"
 #else
 extern "C" { // some bogus code to keep the compiler happy
diff --git a/src/fortranscanner.l b/src/fortranscanner.l
index cbe13fd..cda7913 100644
--- a/src/fortranscanner.l
+++ b/src/fortranscanner.l
@@ -2604,7 +2604,7 @@ static void scanner_abort()
 
 //----------------------------------------------------------------------------
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 //----------------------------------------------------------------------------
 extern "C" { // some bogus code to keep the compiler happy
   void fortranscannernerYYdummy() { yy_flex_realloc(0,0); } 
diff --git a/src/pre.l b/src/pre.l
index 86f9ebb..42acdca 100644
--- a/src/pre.l
+++ b/src/pre.l
@@ -3214,7 +3214,7 @@ void preprocessFile(const char *fileName,BufStr &input,BufStr &output)
 
 void preFreeScanner()
 {
-#if defined(YY_FLEX_SUBMINOR_VERSION) 
+#if defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
   if (g_lexInit)
   {
     preYYlex_destroy();
@@ -3222,7 +3222,7 @@ void preFreeScanner()
 #endif
 }
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
 //  int  preYYwrap() { return 1 ; }
   void preYYdummy() { yy_flex_realloc(0,0); } 
diff --git a/src/pycode.l b/src/pycode.l
index 3c41a69..0a7590c 100644
--- a/src/pycode.l
+++ b/src/pycode.l
@@ -1499,11 +1499,11 @@ void parsePythonCode(CodeOutputInterface &od,const char * /*className*/,
 }
 
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
   void pycodeYYdummy() { yy_flex_realloc(0,0); } 
 }
-#elif YY_FLEX_SUBMINOR_VERSION<33
+#elif YY_FLEX_SUBMINOR_VERSION<33 && YY_FLEX_MINOR_VERSION < 6
 #error "You seem to be using a version of flex newer than 2.5.4. These are currently incompatible with 2.5.4, and do NOT work with doxygen! Please use version 2.5.4 or expect things to be parsed wrongly! A bug report has been submitted (#732132)."
 #endif
 
diff --git a/src/pyscanner.l b/src/pyscanner.l
index 8332a36..a6c7e61 100644
--- a/src/pyscanner.l
+++ b/src/pyscanner.l
@@ -1745,7 +1745,7 @@ void PythonLanguageScanner::resetCodeParserState()
 
 //----------------------------------------------------------------------------
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 //----------------------------------------------------------------------------
 extern "C" { // some bogus code to keep the compiler happy
   void pyscannerYYdummy() { yy_flex_realloc(0,0); } 
diff --git a/src/scanner.l b/src/scanner.l
index 328dc3f..b29ce65 100644
--- a/src/scanner.l
+++ b/src/scanner.l
@@ -7076,7 +7076,7 @@ void CLanguageScanner::parsePrototype(const char *text)
 
 //----------------------------------------------------------------------------
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 //----------------------------------------------------------------------------
 extern "C" { // some bogus code to keep the compiler happy
   void scannerYYdummy() { yy_flex_realloc(0,0); } 
diff --git a/src/tclscanner.l b/src/tclscanner.l
index 5e249a6..d7b3243 100644
--- a/src/tclscanner.l
+++ b/src/tclscanner.l
@@ -3095,7 +3095,7 @@ void tclDummy()
   yy_top_state();
 }
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 //----------------------------------------------------------------------------
 extern "C" { // some bogus code to keep the compiler happy
   void tclscannerYYdummy() { yy_flex_realloc(0,0); } 
diff --git a/src/vhdlcode.l b/src/vhdlcode.l
index 369ae48..418999e 100644
--- a/src/vhdlcode.l
+++ b/src/vhdlcode.l
@@ -1601,7 +1601,7 @@ void parseVhdlCode(CodeOutputInterface &od,const char *className,const QCString
 
 void codeFreeVhdlScanner()
 {
-#if defined(YY_FLEX_SUBMINOR_VERSION) 
+#if defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
   if (g_lexInit)
   {
     vhdlcodeYYlex_destroy();
@@ -1609,11 +1609,11 @@ void codeFreeVhdlScanner()
 #endif
 }
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
   void vhdlcodeYYdummy() { yy_flex_realloc(0,0); } 
 }
-#elif YY_FLEX_SUBMINOR_VERSION<33
+#elif YY_FLEX_SUBMINOR_VERSION<33 && YY_FLEX_MINOR_VERSION < 6
 #error "You seem to be using a version of flex newer than 2.5.4 but older than 2.5.33. These versions do NOT work with doxygen! Please use version <=2.5.4 or >=2.5.33 or expect things to be parsed wrongly!"
 #endif
 
diff --git a/src/xmlcode.l b/src/xmlcode.l
index 15b5d7e..e3646b5 100644
--- a/src/xmlcode.l
+++ b/src/xmlcode.l
@@ -403,11 +403,11 @@ void resetXmlCodeParserState()
   g_currentMemberDef = 0;
 }
 
-#if !defined(YY_FLEX_SUBMINOR_VERSION) 
+#if !defined(YY_FLEX_SUBMINOR_VERSION) || !defined(YY_FLEX_MINOR_VERSION)
 extern "C" { // some bogus code to keep the compiler happy
   void xmlcodeYYdummy() { yy_flex_realloc(0,0); } 
 }
-#elif YY_FLEX_SUBMINOR_VERSION<33
+#elif YY_FLEX_SUBMINOR_VERSION<33 && YY_FLEX_MINOR_VERSION<6
 #error "You seem to be using a version of flex newer than 2.5.4. These are currently incompatible with 2.5.4, and do NOT work with doxygen! Please use version 2.5.4 or expect things to be parsed wrongly! A bug report has been submitted (#732132)."
 #endif
 
-- 
2.6.4

