diff --git a/CMake/FollySetup.cmake b/CMake/FollySetup.cmake
index 4d9fbd8..5170883 100644
--- a/CMake/FollySetup.cmake
+++ b/CMake/FollySetup.cmake
@@ -46,5 +46,7 @@ if(CYGWIN)
 endif()
 
 if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
-  add_definitions("-DFOLLY_USE_LIBCPP=1")
+  if(NOT CLANG_FORCE_LIBSTDCXX)
+    add_definitions("-DFOLLY_USE_LIBCPP=1")
+  endif()
 endif()
diff --git a/CMake/HPHPCompiler.cmake b/CMake/HPHPCompiler.cmake
index 31d8309..60bc9d8 100644
--- a/CMake/HPHPCompiler.cmake
+++ b/CMake/HPHPCompiler.cmake
@@ -29,6 +29,13 @@ if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
     endif()
     set(LLVM_OPT "${LLVM_OPT} --param=ssp-buffer-size=4 -pie -fPIC")
   endif()
+
+  if(CLANG_FORCE_LIBSTDCXX)
+    set(CLANG_STDLIB "libstdc++")
+  else()
+    set(CLANG_STDLIB "libc++")
+  endif()
+
   set(CMAKE_C_FLAGS_DEBUG            "-g")
   set(CMAKE_CXX_FLAGS_DEBUG          "-g")
   set(CMAKE_C_FLAGS_MINSIZEREL       "-Os -DNDEBUG")
@@ -38,7 +45,7 @@ if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
   set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 -g")
   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g")
   set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} ${LLVM_OPT} -w")
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=gnu++11 -stdlib=libc++ -fno-omit-frame-pointer -Woverloaded-virtual -Wno-deprecated -Wno-strict-aliasing -Wno-write-strings -Wno-invalid-offsetof -fno-operator-names -Wno-error=array-bounds -Wno-error=switch -Werror=format-security -Wno-unused-result -Wno-sign-compare -Wno-attributes -Wno-maybe-uninitialized -Wno-mismatched-tags -Wno-unknown-warning-option -Wno-return-type-c-linkage -Qunused-arguments ${LLVM_OPT}")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=gnu++11 -stdlib=${CLANG_STDLIB} -fno-omit-frame-pointer -Woverloaded-virtual -Wno-deprecated -Wno-strict-aliasing -Wno-write-strings -Wno-invalid-offsetof -fno-operator-names -Wno-error=array-bounds -Wno-error=switch -Werror=format-security -Wno-unused-result -Wno-sign-compare -Wno-attributes -Wno-maybe-uninitialized -Wno-mismatched-tags -Wno-unknown-warning-option -Wno-return-type-c-linkage -Qunused-arguments ${LLVM_OPT}")
 # using GCC
 elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
   execute_process(COMMAND ${CMAKE_CXX_COMPILER} ${CMAKE_CXX_COMPILER_ARG1} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
diff --git a/CMake/Options.cmake b/CMake/Options.cmake
index 055c52d..1e79ef4 100644
--- a/CMake/Options.cmake
+++ b/CMake/Options.cmake
@@ -12,6 +12,8 @@ option(ENABLE_FULL_SETLINE "Enable full setline function for debugger and code-c
 
 option(USE_JEMALLOC "Use jemalloc" ON)
 
+option(CLANG_FORCE_LIBSTDCXX "Force libstdc++ when building against Clang/LLVM" OFF)
+
 option(USE_TCMALLOC "Use tcmalloc (if jemalloc is not used)" ON)
 option(USE_GOOGLE_HEAP_PROFILER "Use Google heap profiler" OFF)
 option(USE_GOOGLE_CPU_PROFILER "Use Google cpu profiler" OFF)
