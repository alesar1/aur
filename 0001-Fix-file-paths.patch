From a8beb39ac0babaa9516a9888b35d1bfe657c0747 Mon Sep 17 00:00:00 2001
From: Jan Cholasta <jan@cholasta.net>
Date: Thu, 6 Feb 2020 07:59:18 +0100
Subject: [PATCH] Fix file paths

---
 source/common/audio/music/i_soundfont.cpp   |  4 +---
 source/common/platform/posix/sdl/i_main.cpp | 14 +-------------
 source/core/gameconfigfile.cpp              | 13 +------------
 source/core/gamecontrol.cpp                 |  2 +-
 4 files changed, 4 insertions(+), 29 deletions(-)

diff --git a/source/common/audio/music/i_soundfont.cpp b/source/common/audio/music/i_soundfont.cpp
index a8b4e9fdf..911b8e308 100644
--- a/source/common/audio/music/i_soundfont.cpp
+++ b/source/common/audio/music/i_soundfont.cpp
@@ -232,9 +232,7 @@ FPatchSetReader::FPatchSetReader(const char *filename)
 #ifndef _WIN32
 	mCaseSensitivePaths = true;
 	const char *paths[] = {
-		"/usr/local/lib/timidity",
-		"/etc/timidity",
-		"/etc"
+		"/etc/timidity++"
 	};
 #else
 	const char *paths[] = {
diff --git a/source/common/platform/posix/sdl/i_main.cpp b/source/common/platform/posix/sdl/i_main.cpp
index 7fc179a51..fb4ce733e 100644
--- a/source/common/platform/posix/sdl/i_main.cpp
+++ b/source/common/platform/posix/sdl/i_main.cpp
@@ -129,19 +129,7 @@ int main (int argc, char **argv)
 	Args = new FArgs(argc, argv);
 
 	// Should we even be doing anything with progdir on Unix systems?
-	char program[PATH_MAX];
-	if (realpath (argv[0], program) == NULL)
-		strcpy (program, argv[0]);
-	char *slash = strrchr (program, '/');
-	if (slash != NULL)
-	{
-		*(slash + 1) = '\0';
-		progdir = program;
-	}
-	else
-	{
-		progdir = "./";
-	}
+	progdir = "/usr/lib/raze/";
 	
 	I_StartupJoysticks();
 
diff --git a/source/core/gameconfigfile.cpp b/source/core/gameconfigfile.cpp
index b532b2925..8ffd663b1 100644
--- a/source/core/gameconfigfile.cpp
+++ b/source/core/gameconfigfile.cpp
@@ -100,15 +100,10 @@ FGameConfigFile::FGameConfigFile ()
 		// Debian likes them in /usr/share/games/doom
 		// I assume other distributions don't do anything radically different
 		SetValueForKey ("Path", "/usr/share/games/jfduke3d", true);
-		SetValueForKey ("Path", "/usr/local/share/games/jfduke3d", true);
 		SetValueForKey ("Path", "/usr/share/games/eduke32", true);
-		SetValueForKey ("Path", "/usr/local/share/games/eduke32", true);
 		SetValueForKey ("Path", "/usr/share/games/nblood", true);
-		SetValueForKey ("Path", "/usr/local/share/games/nblood", true);
 		SetValueForKey("Path", "/usr/share/games/jfsw", true);
-		SetValueForKey("Path", "/usr/local/share/games/jfsw", true);
 		SetValueForKey("Path", "/usr/share/games/voidsw", true);
-		SetValueForKey("Path", "/usr/local/share/games/voidsw", true);
 
 #endif
 		SetValueForKey ("Path", "$STEAM", true); // also covers GOG.
@@ -130,11 +125,8 @@ FGameConfigFile::FGameConfigFile ()
 		SetValueForKey ("Path", "$HOME/" GAME_DIR, true);
 		SetValueForKey ("Path", SHARE_DIR, true);
 		SetValueForKey ("Path", "/usr/share/games/jfduke3d", true);
-		SetValueForKey ("Path", "/usr/local/share/games/jfduke3d", true);
 		SetValueForKey ("Path", "/usr/share/games/eduke32", true);
-		SetValueForKey ("Path", "/usr/local/share/games/eduke32", true);
 		SetValueForKey ("Path", "/usr/share/games/nblood", true);
-		SetValueForKey ("Path", "/usr/local/share/games/nblood", true);
 #endif
 	}
 
@@ -151,10 +143,7 @@ FGameConfigFile::FGameConfigFile ()
 		SetValueForKey("Path", "$PROGDIR/soundfonts", true);
 #else
 		SetValueForKey("Path", "$HOME/" GAME_DIR "/soundfonts", true);
-		SetValueForKey("Path", "/usr/local/share/" GAME_DIR "/soundfonts", true);
-		SetValueForKey("Path", "/usr/local/share/games/" GAME_DIR "/soundfonts", true);
-		SetValueForKey("Path", "/usr/share/" GAME_DIR "/soundfonts", true);
-		SetValueForKey("Path", "/usr/share/games/" GAME_DIR "/soundfonts", true);
+		SetValueForKey("Path", "/usr/share/" GAMENAMELOWERCASE "/soundfonts", true);
 #endif
 	}
 
diff --git a/source/core/gamecontrol.cpp b/source/core/gamecontrol.cpp
index 92b6c47ae..1d8bf338c 100644
--- a/source/core/gamecontrol.cpp
+++ b/source/core/gamecontrol.cpp
@@ -749,7 +749,7 @@ int RunGame()
 	FString logfile = Args->TakeValue("+logfile");
 
 	// As long as this engine is still in prerelease mode let's always write a log file.
-	if (logfile.IsEmpty()) logfile.Format("%s" GAMENAMELOWERCASE ".log", M_GetDocumentsPath().GetChars());
+	if (logfile.IsEmpty()) logfile.Format("%s/" GAMENAMELOWERCASE ".log", M_GetDocumentsPath().GetChars());
 
 	if (logfile.IsNotEmpty())
 	{
-- 
2.27.0

