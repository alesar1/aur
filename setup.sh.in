#!/bin/sh

set -e

bootstrap_install() {
    if [ -x "$(which wine)" ] ;then
	echo "Wine version $(wine --version) found."
    else
	echo "Wine not found. Please install Wine with your Package Manager."
	echo "WineHQ or Developer Version are recommended."
	printf "\nExiting.\n\n"
	exit 0
    fi
    if [ -x "$(which winetricks)" ] ;then
	echo "Winetricks version $(winetricks --version | cut -d' ' -f1) found."
    else
	echo "Winetricks not found. Winetricks are required."
	echo " Please install Winetricks with your Package Manager."
	printf "\nExiting.\n\n"
	exit 0
    fi
    install -dv "${target}/bin/"
    install -d "${prefix}/bin/"
    install -d "${prefix}/share/applications/"
    for cmd in evelauncher.sh evewine evewinetricks everegedit evewinecfg ;do
	if [ -f "./$cmd" ] ;then
	    install "./$cmd" "${target}/bin/"
	else
	    ln -sf evewine "${target}/bin/${cmd}"
	fi
	ln -s "${target}/bin/$cmd" "${prefix}/bin/$cmd"
	if [ ! "$cmd" = "evewine" ] ;then
#-- testing only
#-	oexec=$(grep Exec= ./${cmd%.*}.desktop)
#-	sed -i s,$oexec,Exec=$prefix/bin/$cmd, ./${cmd%.*}.desktop
#--
	    install -m 0644 "./${cmd%.*}.desktop" "${prefix}/share/applications/"
#-- testing only
#-	sed -i s,Exec=$prefix/bin/$cmd,$oexec, ./${cmd%.*}.desktop
#--
	fi
    done
    install -dv "${target}/lib/"
    for eta in $(ls ./eve-transl${qtver}-??.tar.gz) ;do
	install -m 0644 "$eta" "${target}/lib"
    done
    install -m 0644 "./evelauncher.shlib" "${target}/lib"
    install -m 0644 "./evelauncher-${elver}.tar.gz" "${target}/lib"
    for icons in $(find . -type f -name '*.png') ;do
	install -D -m 0644 "$icons" "${prefix}/share/${icons#*/}"
    done
    if [ -x $(which gtk-update-icon-cache) ] ;then
	gtk-update-icon-cache -t -f "${prefix}/share/icons/hicolor" 2>/dev/null
	[ -f "${prefix}/share/icons/hicolor/icon-theme.cache" ] && \
	    chmod 0644 "${prefix}/share/icons/hicolor/icon-theme.cache"
    fi
}

bootstrap_remove() {
    for icons in $(find . -type f -name '*.png') ;do
	rm -f "${prefix}/share/${icons#*/}"
    done
    if [ -x $(which gtk-update-icon-cache) ] ;then
	gtk-update-icon-cache -t -f "${prefix}/share/icons/hicolor" 2>/dev/null
	[ -f "${prefix}/share/icons/hicolor/icon-theme.cache" ] && \
	    chmod 0644 "${prefix}/share/icons/hicolor/icon-theme.cache"
    fi
    rm -rfv "${target}/lib/"
    for cmd in evelauncher.sh everegedit evewine evewinecfg evewinetricks ;do
	rm -fv "${prefix}/bin/$cmd"
	if [ ! "$cmd" = "evewine" ] ;then
	    rm -f "${prefix}/share/applications/${cmd%.*}.desktop"
	fi
    done
    rm -rfv "${target}"
}

target="/opt/evesetup"
prefix="/usr"
key=""
qtver="5.11"
elver="1456645"

if [ $(id -u) -ne 0 ] ;then
    printf "\nEVE Online Launcher Setup need root permissions."
    printf "\nExiting.\n\n"
    exit 0
fi

if [ -d "${target}/bin/" ] ;then
    printf "\n"
    read -p 'Remove EVE Online Launcher Setup? (Y/n) ' key
    [ ! "x$(echo $key | tr [:upper:] [:lower:])" = "xn" ] && \
	bootstrap_remove
else
#-- testing only
#-	otarget=$(grep ^SETUPDIR= ./evelauncher.sh)
#-	sed -i s,$otarget,SETUPDIR=\"$target\", ./evelauncher.sh
#--
    printf "\n"
    read -p 'Install EVE Online Launcher Setup? (Y/n) ' key
    [ ! "x$(echo $key | tr [:upper:] [:lower:])" = "xn" ] && \
	bootstrap_install && \
	printf "\nYou can now start EVE Online Launcher and his " && \
	echo "Tools from your Application menu."
#-- testing only
#-	sed -i s,SETUPDIR=\"$target\",$otarget, ./evelauncher.sh
#--
fi
printf "\nDone.\n\n"
