diff -rupN a/lib/SIL/Projection.cpp b/lib/SIL/Projection.cpp
--- a/lib/SIL/Projection.cpp	2017-09-19 09:15:54.852473005 -0700
+++ b/lib/SIL/Projection.cpp	2017-09-19 10:07:31.576737412 -0700
@@ -905,7 +905,7 @@ processUsersOfValue(ProjectionTree &Tree
     DEBUG(llvm::dbgs() << "        " << *User);
 
     // First try to create a Projection for User.
-    auto P = Projection::Projection(User);
+    auto P = typename Projection::Projection(User);
 
     // If we fail to create a projection, add User as a user to this node and
     // continue.
diff -rupN a/lib/SILOptimizer/Transforms/SpeculativeDevirtualizer.cpp b/lib/SILOptimizer/Transforms/SpeculativeDevirtualizer.cpp
--- a/lib/SILOptimizer/Transforms/SpeculativeDevirtualizer.cpp	2017-09-19 09:15:55.372478566 -0700
+++ b/lib/SILOptimizer/Transforms/SpeculativeDevirtualizer.cpp	2017-09-19 10:37:02.517214683 -0700
@@ -488,7 +488,7 @@ static bool tryToSpeculateTarget(FullApp
     if (auto EMT = SubType.getAs<AnyMetatypeType>()) {
       auto InstTy = ClassType.getSwiftRValueType();
       auto *MetaTy = MetatypeType::get(InstTy, EMT->getRepresentation());
-      auto CanMetaTy = CanMetatypeType::CanTypeWrapper(MetaTy);
+      auto CanMetaTy = typename CanMetatypeType::CanTypeWrapper(MetaTy);
       ClassOrMetatypeType = SILType::getPrimitiveObjectType(CanMetaTy);
     }
 
diff -rupN a/lib/SILOptimizer/Utils/Local.cpp b/lib/SILOptimizer/Utils/Local.cpp
--- a/lib/SILOptimizer/Utils/Local.cpp	2017-09-19 09:15:55.592480918 -0700
+++ b/lib/SILOptimizer/Utils/Local.cpp	2017-09-19 10:07:01.376380235 -0700
@@ -2248,7 +2248,7 @@ CastOptimizer::optimizeCheckedCastBranch
         auto EMT = dyn_cast<AnyMetatypeType>(EmiTy.getSwiftRValueType());
         auto *MetaTy = MetatypeType::get(LoweredConcreteTy.getSwiftRValueType(),
                                          EMT->getRepresentation());
-        auto CanMetaTy = CanMetatypeType::CanTypeWrapper(MetaTy);
+        auto CanMetaTy = typename CanMetatypeType::CanTypeWrapper(MetaTy);
         auto SILMetaTy = SILType::getPrimitiveObjectType(CanMetaTy);
         SILBuilderWithScope B(Inst);
         auto *MI = B.createMetatype(FoundIEI->getLoc(), SILMetaTy);
@@ -2303,7 +2303,7 @@ CastOptimizer::optimizeCheckedCastBranch
         // Get the SIL metatype of this type.
         auto EMT = dyn_cast<AnyMetatypeType>(EMI->getType().getSwiftRValueType());
         auto *MetaTy = MetatypeType::get(ConcreteTy, EMT->getRepresentation());
-        auto CanMetaTy = CanMetatypeType::CanTypeWrapper(MetaTy);
+        auto CanMetaTy = typename CanMetatypeType::CanTypeWrapper(MetaTy);
         auto SILMetaTy = SILType::getPrimitiveObjectType(CanMetaTy);
         SILBuilderWithScope B(Inst);
         auto *MI = B.createMetatype(FoundIERI->getLoc(), SILMetaTy);
