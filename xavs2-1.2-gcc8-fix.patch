[PATCH] Make AVX symbols to be strictly visible (fix build with gcc8)

Backport of upstream commit f018e1da10196c1f03ed8834d5db64ef67f3cc71

https://github.com/pkuvcl/xavs2/issues/17
https://github.com/pkuvcl/xavs2/commit/f018e1da10196c1f03ed8834d5db64ef67f3cc71

diff --git a/source/common/vec/intrinsic_cg_scan_avx.c b/source/common/vec/intrinsic_cg_scan_avx.c
index ec9a109..c8425a8 100644
--- a/source/common/vec/intrinsic_cg_scan_avx.c
+++ b/source/common/vec/intrinsic_cg_scan_avx.c
@@ -35,15 +35,15 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../common.h"
-#include "intrinsic.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
 
+#include "../common.h"
+#include "intrinsic.h"
+
 #if ARCH_X86_64
 /* ---------------------------------------------------------------------------
  */
diff --git a/source/common/vec/intrinsic_dct.c b/source/common/vec/intrinsic_dct.c
index 2251593..15cc90b 100644
--- a/source/common/vec/intrinsic_dct.c
+++ b/source/common/vec/intrinsic_dct.c
@@ -34,16 +34,15 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../basic_types.h"
-#include "../avs2_defs.h"
-#include "intrinsic.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
 
+#include "../basic_types.h"
+#include "../avs2_defs.h"
+#include "intrinsic.h"
 
 void *xavs2_fast_memzero_mmx(void *dst, size_t n);
 
diff --git a/source/common/vec/intrinsic_dct_avx.c b/source/common/vec/intrinsic_dct_avx.c
index 7332097..77381d9 100644
--- a/source/common/vec/intrinsic_dct_avx.c
+++ b/source/common/vec/intrinsic_dct_avx.c
@@ -36,15 +36,15 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../basic_types.h"
-#include "intrinsic.h"
-#include "../avs2_defs.h"
-
 #include <xmmintrin.h>  // SSE
 #include <pmmintrin.h>  // SSE3
 #include <tmmintrin.h>  // SSSE3
 #include <immintrin.h>  // AVX and AVX2
 
+#include "../basic_types.h"
+#include "intrinsic.h"
+#include "../avs2_defs.h"
+
 /* disable warnings */
 #ifdef _MSC_VER
 #pragma warning(disable:4127)  // warning C4127: 条件表达式是常量
diff --git a/source/common/vec/intrinsic_deblock_avx2.c b/source/common/vec/intrinsic_deblock_avx2.c
index fd39f98..6d29f75 100644
--- a/source/common/vec/intrinsic_deblock_avx2.c
+++ b/source/common/vec/intrinsic_deblock_avx2.c
@@ -34,16 +34,15 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-
-#include "../basic_types.h"
-#include "intrinsic.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
 
+#include "../basic_types.h"
+#include "intrinsic.h"
+
 void deblock_edge_ver_avx2(pel_t *SrcPtr, int stride, int Alpha, int Beta, uint8_t *flt_flag)
 {
     pel_t *pTmp = SrcPtr - 4;
diff --git a/source/common/vec/intrinsic_idct_avx2.c b/source/common/vec/intrinsic_idct_avx2.c
index 3b769d9..5e1473d 100644
--- a/source/common/vec/intrinsic_idct_avx2.c
+++ b/source/common/vec/intrinsic_idct_avx2.c
@@ -36,16 +36,16 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../basic_types.h"
-#include "../avs2_defs.h"
-#include "intrinsic.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
 
+#include "../basic_types.h"
+#include "../avs2_defs.h"
+#include "intrinsic.h"
+
 /* disable warnings */
 #pragma warning(disable:4127)  // warning C4127: 条件表达式是常量
 
diff --git a/source/common/vec/intrinsic_inter_pred.c b/source/common/vec/intrinsic_inter_pred.c
index 422f6a3..f786aad 100644
--- a/source/common/vec/intrinsic_inter_pred.c
+++ b/source/common/vec/intrinsic_inter_pred.c
@@ -34,16 +34,16 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../basic_types.h"
-#include "intrinsic.h"
-#include "avs2_defs.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
 
+#include "../basic_types.h"
+#include "intrinsic.h"
+#include "avs2_defs.h"
+
 /* ---------------------------------------------------------------------------
  */
 void intpl_chroma_block_hor_sse128(pel_t *dst, int i_dst, pel_t *src, int i_src, int width, int height, const int8_t *coeff)
diff --git a/source/common/vec/intrinsic_inter_pred_avx2.c b/source/common/vec/intrinsic_inter_pred_avx2.c
index eb159ef..7e62ad1 100644
--- a/source/common/vec/intrinsic_inter_pred_avx2.c
+++ b/source/common/vec/intrinsic_inter_pred_avx2.c
@@ -34,14 +34,15 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../basic_types.h"
-#include "intrinsic.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
+
+#include "../basic_types.h"
+#include "intrinsic.h"
+
 #pragma warning(disable:4127)  // warning C4127: 条件表达式是常量
 
 /* ---------------------------------------------------------------------------
diff --git a/source/common/vec/intrinsic_intra-pred_avx2.c b/source/common/vec/intrinsic_intra-pred_avx2.c
index 3542511..d1c9b24 100644
--- a/source/common/vec/intrinsic_intra-pred_avx2.c
+++ b/source/common/vec/intrinsic_intra-pred_avx2.c
@@ -34,16 +34,15 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../basic_types.h"
-#include "avs2_defs.h"
-#include "intrinsic.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
 
+#include "../basic_types.h"
+#include "avs2_defs.h"
+#include "intrinsic.h"
 
 #ifndef _MSC_VER
 #define __int64 int64_t
diff --git a/source/common/vec/intrinsic_pixel_avx.c b/source/common/vec/intrinsic_pixel_avx.c
index ab9ddb7..a88f6d6 100644
--- a/source/common/vec/intrinsic_pixel_avx.c
+++ b/source/common/vec/intrinsic_pixel_avx.c
@@ -34,10 +34,6 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../basic_types.h"
-#include "../avs2_defs.h"
-#include "intrinsic.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
@@ -45,6 +41,10 @@
 #include <immintrin.h>
 #include <string.h>
 
+#include "../basic_types.h"
+#include "../avs2_defs.h"
+#include "intrinsic.h"
+
 /* ---------------------------------------------------------------------------
  */
 void *xavs2_memzero_aligned_c_avx(void *dst, size_t n)
diff --git a/source/common/vec/intrinsic_quant_avx2.c b/source/common/vec/intrinsic_quant_avx2.c
index 263ead9..562b4e2 100644
--- a/source/common/vec/intrinsic_quant_avx2.c
+++ b/source/common/vec/intrinsic_quant_avx2.c
@@ -35,16 +35,15 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-
-#include "../basic_types.h"
-#include "intrinsic.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
 
+#include "../basic_types.h"
+#include "intrinsic.h"
+
 int quant_avx2(coeff_t *coef, const int i_coef, const int scale, const int shift, const int add)
 {
     __m256i mScale, mAdd;
diff --git a/source/common/vec/intrinsic_sao_avx2.c b/source/common/vec/intrinsic_sao_avx2.c
index 9b7f428..cab0b1a 100644
--- a/source/common/vec/intrinsic_sao_avx2.c
+++ b/source/common/vec/intrinsic_sao_avx2.c
@@ -34,16 +34,16 @@
  *    For more information, contact us at sswang @ pku.edu.cn.
  */
 
-#include "../common.h"
-#include "intrinsic.h"
-#include "../filter.h"
-
 #include <mmintrin.h>
 #include <emmintrin.h>
 #include <tmmintrin.h>
 #include <smmintrin.h>
 #include <immintrin.h>
 
+#include "../common.h"
+#include "intrinsic.h"
+#include "../filter.h"
+
 /* ---------------------------------------------------------------------------
  */
 void SAO_on_block_sse256(pel_t *p_dst, int i_dst, pel_t *p_src, int i_src, int i_block_w, int i_block_h, 
