Only in PyIDM: no_update.patch
diff --color --unified --recursive --text pyidm.old/pyidm/controller.py PyIDM/pyidm/controller.py
--- pyidm.old/pyidm/controller.py	2020-09-20 12:10:30.880454171 +0200
+++ PyIDM/pyidm/controller.py	2020-09-20 11:59:18.148427096 +0200
@@ -21,7 +21,6 @@
 from queue import Queue
 from datetime import date
 
-from . import update
 from .utils import *
 from . import setting
 from . import config
@@ -762,85 +761,6 @@
         except Exception as e:
             log('download_subtitle() error', e)
 
-    def _check_for_ytdl_update(self):
-        """check for new youtube-dl version"""
-
-        current_version = config.ytdl_VERSION
-        if current_version is None:
-            log('youtube-dl not loaded yet, try again', showpopup=True)
-            return
-
-        latest_version = config.ytdl_LATEST_VERSION or update.check_for_ytdl_update()
-        if latest_version:
-            config.ytdl_LATEST_VERSION = latest_version
-            note = f'Youtube-dl version: {config.ytdl_VERSION}, Latest version: {config.ytdl_LATEST_VERSION}'
-            log(note)
-
-            if latest_version != current_version:
-                # select log tab
-                # self.select_tab('Log')
-
-                response = self.get_user_response(
-                    'Found new version of youtube-dl on github \n'
-                    f'new version     =  {latest_version}\n'
-                    f'current version =  {current_version} \n'
-                    'Install new version? (check Log Tab for progress)',  options=['Ok', 'Cancel'])
-
-                if response == 'Ok':
-                    try:
-                        run_thread(update.update_youtube_dl, daemon=True)
-                    except Exception as e:
-                        log('failed to update youtube-dl module:', e)
-            else:
-                log(f'youtube_dl is up-to-date, current version = {current_version}', showpopup=True)
-
-    def _rollback_ytdl_update(self):
-        """delete last youtube-dl update and restore last one"""
-        response = self.get_user_response('Delete last youtube-dl update and restore previous version?',
-                                          options=['Ok', 'Cancel'])
-
-        if response == 'Ok':
-            try:
-                run_thread(update.rollback_ytdl_update, daemon=True)
-            except Exception as e:
-                log('failed to restore youtube-dl module:', e)
-
-    def _check_for_pyidm_update(self):
-        """
-        check for new app version or update patch and show update window,
-        this method is time consuming and should run from a thread
-        """
-
-        # check for new App. version
-        changelog = update.check_for_new_version()
-        if changelog:
-
-            response = self.get_user_response(f'New pyidm version available, full change log:\n{changelog}',
-                                              options=['Homepage', 'cancel'])
-            if response == 'Homepage':
-                update.open_update_link()
-
-        else:
-            log('No Update available', showpopup=True)
-
-    def _auto_check_for_update(self):
-        """auto check for pyidm update"""
-        if config.check_for_update:
-            today = date.today()
-            try:
-                last_check = date(*config.last_update_check)
-            except:
-                last_check = today
-
-            delta = today - last_check
-            if delta.days >= config.update_frequency:
-                res = self.get_user_response(f'Check for PyIDM update?\nLast check was {delta.days} days ago',
-                                             options=['Ok', 'Cancel'])
-                if res == 'Ok':
-                    self.check_for_pyidm_update()
-
-            config.last_update_check = (today.year, today.month, today.day)
-
     # public API for  a view / GUI (it shouldn't block to prevent gui freeze) ------------------------------------------
     def log_runtime_info(self):
         """Print useful information about the system"""
@@ -1218,18 +1138,6 @@
 
         return d
 
-    def auto_check_for_update(self):
-        run_thread(self._auto_check_for_update)
-
-    def check_for_pyidm_update(self):
-        run_thread(self._check_for_pyidm_update)
-
-    def check_for_ytdl_update(self):
-        run_thread(self._check_for_ytdl_update)
-
-    def rollback_ytdl_update(self):
-        run_thread(self._rollback_ytdl_update)
-
     def get_user_response(self, msg, options):
         """get user response from current view
 
diff --color --unified --recursive --text pyidm.old/pyidm/tkview.py PyIDM/pyidm/tkview.py
--- pyidm.old/pyidm/tkview.py	2020-09-20 12:10:30.880454171 +0200
+++ PyIDM/pyidm/tkview.py	2020-09-20 12:04:57.266440744 +0200
@@ -32,7 +32,6 @@
 from .controller import Controller, set_option, get_option
 from .utils import *
 from . import config
-from . import update
 from .iconsbase64 import *
 from .systray import SysTray
 from .about import about_notes
@@ -2352,36 +2351,6 @@
 
         separator()
 
-        # update -----------------------------------------------------------------------------------------------------
-        heading('Update:')
-        update_frame = tk.Frame(tab, bg=bg)
-
-        def lbl(var):
-            return tk.Label(update_frame, bg=bg, fg=fg, textvariable=var, padx=5)
-
-        CheckEntryOption(update_frame, 'Check for update every: ', entry_key='update_frequency', width=4, justify='center',
-                         check_key='check_for_update', get_text_validator=lambda x: int(x) if int(x) > 0 else 7)\
-            .grid(row=0, column=0, columnspan=2, sticky='w')
-        lbl('days').grid(row=0, column=2, sticky='w')
-
-        # PyIDM update
-        Button(update_frame, image=self.refresh_img, command=self.controller.check_for_pyidm_update).grid(row=1, column=0, sticky='e', pady=5, padx=(20, 5))
-        self.pyidm_update_note = tk.StringVar()
-        self.pyidm_update_note.set(f'PyIDM version: {config.APP_VERSION}')
-        lbl(self.pyidm_update_note).grid(row=1, column=1, columnspan=2, sticky='w')
-
-        Button(update_frame, text='About!', command=lambda: self.msgbox(about_notes)).grid(row=1, column=3, sticky='w', pady=5, padx=(20, 5))
-
-        # youtube-dl update
-        Button(update_frame, image=self.refresh_img, command=self.check_for_ytdl_update).grid(row=2, column=0, sticky='e', pady=5, padx=(20, 5))
-        self.youtube_dl_update_note = tk.StringVar()
-        self.youtube_dl_update_note.set(f'Youtube-dl version: {config.ytdl_VERSION}')
-        lbl(self.youtube_dl_update_note).grid(row=2, column=1, columnspan=2, sticky='w')
-
-        Button(update_frame, text='Rollback update', command=self.rollback_ytdl_update).grid(row=2, column=3, sticky='w', pady=5, padx=(20, 5))
-
-        update_frame.pack(anchor='w', fill='x', expand=True)
-
         # add padding
         for w in tab.pack_slaves():
             if not w.pack_info().get('pady'):
@@ -2745,24 +2714,6 @@
                     self.response_q.put(data)
                 time.sleep(0.01)
 
-    def update_youtube_dl_info(self):
-        """write youtube-dl version once it gets imported"""
-        current_version = config.ytdl_VERSION
-        if current_version:
-            self.youtube_dl_update_note.set(
-                f'Youtube-dl version: {config.ytdl_VERSION}')
-        else:
-            self.root.after(1000, self.update_youtube_dl_info)
-
-    def check_for_ytdl_update(self):
-        self.controller.check_for_ytdl_update()
-        self.select_tab('Log')
-
-    def rollback_ytdl_update(self):
-        """delete last youtube-dl update and restore last one"""
-        self.controller.rollback_ytdl_update()
-        self.select_tab('Log')
-
     def restart_gui(self):
         self.main_frame.destroy()
         self.d_items.clear()
@@ -2786,12 +2737,6 @@
         # run systray
         run_thread(self.systray.run, daemon=True)
 
-        # update youtube-dl version info once gets loaded
-        self.update_youtube_dl_info()
-
-        # auto check for update
-        self.controller.auto_check_for_update()
-
     def focus(self):
         """focus main window and bring it to front"""
 
Only in pyidm.old/pyidm: update.py
