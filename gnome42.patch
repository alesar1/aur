--- a/data/gnome-shell/pamac-updates@manjaro.org/extension.js
+++ b/data/gnome-shell/pamac-updates@manjaro.org/extension.js
@@ -61,18 +61,17 @@ let UPDATES_LIST       = [];
 function init() {
 }
 
-const PamacUpdateIndicator = new Lang.Class({
-	Name: 'PamacUpdateIndicator',
-	Extends: PanelMenu.Button,
-
-	_TimeoutId: null,
-	_FirstTimeoutId: null,
-	_updateList: [],
-	_updatesChecker: null,
-	//_icon_theme: null,
-
-	_init: function() {
-		this.parent(0.0, "PamacUpdateIndicator");
+const PamacUpdateIndicator = GObject.registerClass(
+class PamacUpdateIndicator extends PanelMenu.Button {
+	_init() {
+		super._init(0.0, "PamacUpdateIndicator");
+
+		this._TimeoutId = null;
+		this._FirstTimeoutId = null;
+		this._updateList = [];
+		this._updatesChecker = null;
+		// this._icon_theme = null;
+
 		// Set icon theme
 		//let that = this;
 		//this._icon_theme = Gtk.IconTheme.get_default();
@@ -131,17 +130,17 @@ const PamacUpdateIndicator = new Lang.Class({
 			this._updateList = UPDATES_LIST;
 			this._updateStatus(UPDATES_PENDING);
 		}
-	},
+	}
 
-	_openManager: function () {
+	_openManager() {
 		if (UPDATES_PENDING > 0) {
 			Util.spawnCommandLine(UPDATER_CMD);
 		} else {
 			Util.spawnCommandLine(MANAGER_CMD);
 		}
-	},
+	}
 
-	_applyConfig: function() {
+	_applyConfig() {
 		HIDE_NO_UPDATE = this._updatesChecker.no_update_hide_icon;
 		this._checkShowHide();
 		let that = this;
@@ -153,14 +152,14 @@ const PamacUpdateIndicator = new Lang.Class({
 				return true;
 			});
 		}
-	},
+	}
 
-	destroy: function() {
+	destroy() {
 		if (this._notifSource) {
 			// Delete the notification source, which lay still have a notification shown
 			this._notifSource.destroy();
 			this._notifSource = null;
-		};
+		}
 		if (this._FirstTimeoutId) {
 			GLib.source_remove(this._FirstTimeoutId);
 			this._FirstTimeoutId = null;
@@ -169,25 +168,25 @@ const PamacUpdateIndicator = new Lang.Class({
 			GLib.source_remove(this._TimeoutId);
 			this._TimeoutId = null;
 		}
-		this.parent();
-	},
+		this.emit('destroy');
+	}
 
-	_checkShowHide: function() {
+	_checkShowHide() {
 		if (HIDE_NO_UPDATE && UPDATES_PENDING < 1) {
 			this.visible = false;
 		} else {
 			this.visible = true;
 		}
 		this.label.visible = SHOW_COUNT && UPDATES_PENDING > 0;
-	},
+	}
 
-	_onMenuOpened: function() {
+	_onMenuOpened() {
 		// This event is fired when menu is shown or hidden
 		// Close the submenu
 		this.menuExpander.setSubmenuShown(false);
-	},
+	}
 
-	_updateStatus: function(updatesCount) {
+	_updateStatus(updatesCount) {
 		updatesCount = typeof updatesCount === 'number' ? updatesCount : UPDATES_PENDING;
 		if (updatesCount > 0) {
 			// Updates pending
@@ -212,9 +211,9 @@ const PamacUpdateIndicator = new Lang.Class({
 		}
 		UPDATES_PENDING = updatesCount;
 		this._checkShowHide();
-	},
+	}
 
-	_updateMenuExpander: function(enabled, label) {
+	_updateMenuExpander(enabled, label) {
 		if (label == "") {
 			// No text, hide the menuitem
 			this.menuExpander.visible = false;
@@ -225,18 +224,18 @@ const PamacUpdateIndicator = new Lang.Class({
 			this.menuExpander.label.set_text(label);
 			this.menuExpander.visible = true;
 		}
-	},
+	}
 
-	_checkUpdates: function() {
+	_checkUpdates() {
 		this._updatesChecker.check_updates();
-	},
+	}
 
-	_onUpdatesAvailable: function(obj, updatesCount) {
+	_onUpdatesAvailable(obj, updatesCount) {
 		this._updateList = this._updatesChecker.updates_list;
 		this._updateStatus(updatesCount);
-	},
+	}
 
-	_showNotification: function(message) {
+	_showNotification(message) {
 		if (this._notifSource == null) {
 			// We have to prepare this only once
 			this._notifSource = new MessageTray.SystemNotificationSource();
@@ -259,12 +258,10 @@ const PamacUpdateIndicator = new Lang.Class({
 		}
 		notification.setTransient(TRANSIENT);
 		this._notifSource.showNotification(notification);
-	},
-
-
+	}
 });
 
-let pamacupdateindicator;
+let pamacupdateindicator = null;
 
 function enable() {
 	pamacupdateindicator = new PamacUpdateIndicator();
@@ -272,5 +269,6 @@ function enable() {
 }
 
 function disable() {
-	pamacupdateindicator.destroy();
+	pamacupdateindicator?.destroy();
+	pamacupdateindicator = null;
 }

