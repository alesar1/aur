diff --git a/build/makefile_base.mak b/build/makefile_base.mak
index 8d2554b..08b6336 100644
--- a/build/makefile_base.mak
+++ b/build/makefile_base.mak
@@ -68,7 +68,7 @@ endif
 
 CC32 := gcc -m32 -mstackrealign
 CXX32 := g++ -m32 -mstackrealign
-PKG_CONFIG32 := i686-linux-gnu-pkg-config
+PKG_CONFIG32 := i686-pc-linux-gnu-pkg-config
 
 cc-option = $(shell if test -z "`echo 'void*p=1;' | \
               $(1) $(2) -S -o /dev/null -xc - 2>&1 | grep -- $(2) -`"; \
@@ -108,8 +108,8 @@ SELECT_DOCKER_IMAGE :=
 # controllable by SUBMAKE_JOBS.  Not ideal.
 ifneq ($(CONTAINER_SHELL32)$(CONTAINER_SHELL64),)
 	SUBMAKE_JOBS ?= 36
-	MAKE := make -j$(SUBMAKE_JOBS)
 endif
+MAKE := make -j$(SUBMAKE_JOBS)
 
 # Use default shell if no STEAMRT_ variables setup a container to invoke.  Commands will just run natively.
 ifndef CONTAINER_SHELL64
@@ -171,7 +171,8 @@ else
     MESON_STRIP_ARG := --strip
 endif
 
-OPTIMIZE_FLAGS := -O2 -march=nocona $(call cc-option,$(CC),-mtune=core-avx2,) -mfpmath=sse
+CFLAGS ?= -O2 -march=nocona $(call cc-option,$(CC),-mtune=core-avx2,)
+OPTIMIZE_FLAGS := $(CFLAGS) -mfpmath=sse
 SANITY_FLAGS   := -fwrapv -fno-strict-aliasing
 COMMON_FLAGS   := $(OPTIMIZE_FLAGS) $(SANITY_FLAGS)
 CARGO_BUILD_ARG := --release
@@ -263,9 +264,11 @@ WINE_OUT_SERVER := $(DST_DIR)/bin/wineserver
 WINE_OUT := $(WINE_OUT_BIN) $(WINE_OUT_SERVER)
 # Tool-only build outputs needed for other projects
 WINEGCC32 := $(TOOLS_DIR32)/bin/winegcc
+WINEGXX32 := $(TOOLS_DIR32)/bin/wineg++
 WINEBUILD32 := $(TOOLS_DIR32)/bin/winebuild
 WINE_BUILDTOOLS32 := $(WINEGCC32) $(WINEBUILD32)
 WINEGCC64 := $(TOOLS_DIR64)/bin/winegcc
+WINEGXX64 := $(TOOLS_DIR64)/bin/wineg++
 WINEBUILD64 := $(TOOLS_DIR64)/bin/winebuild
 WINE_BUILDTOOLS64 := $(WINEGCC64) $(WINEBUILD64)
 
@@ -346,7 +349,7 @@ downloads: $(SHARED_GECKO64_TARBALL) $(SHARED_GECKO32_TARBALL) $(SHARED_MONO_TAR
 $(DST_DIR):
 	mkdir -p $@
 
-STEAM_DIR := $(HOME)/.steam/root
+STEAM_DIR ?= $(HOME)/.steam/root
 
 FILELOCK_TARGET := $(addprefix $(DST_BASE)/,filelock.py)
 $(FILELOCK_TARGET): $(addprefix $(SRCDIR)/,filelock.py)
@@ -381,9 +384,17 @@ DIST_WINEOPENXR_JSON64 := $(DIST_PREFIX)/drive_c/openxr/wineopenxr64.json
 DIST_WINEOPENXR64 := $(DIST_PREFIX)/drive_c/windows/system32/wineopenxr.dll
 
 DIST_TARGETS := $(DIST_COPY_TARGETS) $(DIST_OVR32) $(DIST_OVR64) \
-                $(DIST_GECKO32) $(DIST_GECKO64) $(DIST_WINEMONO) \
                 $(DIST_COMPAT_MANIFEST) $(DIST_LICENSE) $(DIST_TOOLMANIFEST) $(DIST_OFL_LICENSE) $(DIST_FONTS)
 
+ifneq ($(SYSTEM_GECKO),1) # May be disabled by configure
+	DIST_TARGETS += $(DIST_GECKO32)
+	DIST_TARGETS += $(DIST_GECKO64)
+endif # SYSTEM_GECKO
+
+ifneq ($(SYSTEM_MONO),1) # May be disabled by configure
+	DIST_TARGETS += $(DIST_WINEMONO)
+endif # SYSTEM_MONO
+
 DEPLOY_COPY_TARGETS := $(DIST_COPY_TARGETS) $(DIST_VERSION) $(DIST_LICENSE) $(DIST_TOOLMANIFEST) $(DIST_OFL_LICENSE)
 REDIST_COPY_TARGETS := $(DEPLOY_COPY_TARGETS) $(DIST_COMPAT_MANIFEST)
 
@@ -471,8 +482,8 @@ ALL_TARGETS += dist
 GOAL_TARGETS += dist
 
 dist_prefix: wine gst_good
-	find $(DST_DIR)/lib/wine -type f -execdir chmod a-w '{}' '+'
-	find $(DST_DIR)/lib64/wine -type f -execdir chmod a-w '{}' '+'
+	find $(DST_DIR)/lib/wine -type f -execdir chmod go-w '{}' '+'
+	find $(DST_DIR)/lib64/wine -type f -execdir chmod go-w '{}' '+'
 	rm -rf $(abspath $(DIST_PREFIX))
 	python3 $(SRCDIR)/default_pfx.py $(abspath $(DIST_PREFIX)) $(abspath $(DST_DIR)) $(STEAM_RUNTIME_RUNSH)
 
@@ -514,6 +525,8 @@ module64:
 module: module32 module64
 
 GST_COMMON_MESON_ARGS := \
+	-Db_lto=true \
+	-Db_pie=true \
 	-Dexamples=disabled \
 	-Dtests=disabled \
 	-Dgtk_doc=disabled \
@@ -581,14 +594,14 @@ gst_orc64: SHELL = $(CONTAINER_SHELL64)
 gst_orc64: $(GST_ORC_CONFIGURE_FILES64)
 	PATH="$(abspath $(TOOLS_DIR64))/bin:$(PATH)" \
 	LD_LIBRARY_PATH="$(abspath $(TOOLS_DIR64))/lib:$(LD_LIBRARY_PATH)" \
-	ninja -C "$(GST_ORC_OBJ64)" install
+	ninja -v -C "$(GST_ORC_OBJ64)" install
 	cp -a $(TOOLS_DIR64)/lib/liborc* $(DST_DIR)/lib64/
 
 gst_orc32: SHELL = $(CONTAINER_SHELL32)
 gst_orc32: $(GST_ORC_CONFIGURE_FILES32)
 	PATH="$(abspath $(TOOLS_DIR32))/bin:$(PATH)" \
 	LD_LIBRARY_PATH="$(abspath $(TOOLS_DIR32))/lib:$(LD_LIBRARY_PATH)" \
-	ninja -C "$(GST_ORC_OBJ32)" install
+	ninja -v -C "$(GST_ORC_OBJ32)" install
 	cp -a $(TOOLS_DIR32)/lib/liborc* $(DST_DIR)/lib/
 
 ##
@@ -600,6 +613,9 @@ GSTREAMER_MESON_ARGS := \
 	-Dbenchmarks=disabled \
 	-Dtools=disabled \
 	-Dbash-completion=disabled \
+	-Dptp-helper-permissions=capabilities \
+	-Ddbghelp=disabled \
+	-Dpackage-name="GStreamer (Proton)" \
 	$(GST_COMMON_MESON_ARGS)
 
 GSTREAMER_CONFIGURE_FILES32 := $(GSTREAMER_OBJ32)/build.ninja
@@ -650,7 +666,7 @@ gstreamer64: SHELL = $(CONTAINER_SHELL64)
 gstreamer64: $(GSTREAMER_CONFIGURE_FILES64)
 	PATH="$(abspath $(TOOLS_DIR64))/bin:$(PATH)" \
 	LD_LIBRARY_PATH="$(abspath $(TOOLS_DIR64))/lib:$(LD_LIBRARY_PATH)" \
-	ninja -C "$(GSTREAMER_OBJ64)" install
+	ninja -v -C "$(GSTREAMER_OBJ64)" install
 	cp -a $(TOOLS_DIR64)/lib/libgst* $(DST_DIR)/lib64/ && \
 	cp -a $(TOOLS_DIR64)/lib/gstreamer-1.0 $(DST_DIR)/lib64/
 
@@ -658,7 +674,7 @@ gstreamer32: SHELL = $(CONTAINER_SHELL32)
 gstreamer32: $(GSTREAMER_CONFIGURE_FILES32)
 	PATH="$(abspath $(TOOLS_DIR32))/bin:$(PATH)" \
 	LD_LIBRARY_PATH="$(abspath $(TOOLS_DIR32))/lib:$(LD_LIBRARY_PATH)" \
-	ninja -C "$(GSTREAMER_OBJ32)" install
+	ninja -v -C "$(GSTREAMER_OBJ32)" install
 	cp -a $(TOOLS_DIR32)/lib/libgst* $(DST_DIR)/lib/ && \
 	cp -a $(TOOLS_DIR32)/lib/gstreamer-1.0 $(DST_DIR)/lib/
 
@@ -692,6 +708,7 @@ GST_BASE_MESON_ARGS := \
 	-Dxshm=disabled \
 	-Dxvideo=disabled \
 	-Dtools=disabled \
+	-Dpackage-name="GStreamer Base Plugins (Proton)" \
 	$(GST_COMMON_MESON_ARGS)
 
 GST_BASE_CONFIGURE_FILES32 := $(GST_BASE_OBJ32)/build.ninja
@@ -742,7 +759,7 @@ gst_base64: SHELL = $(CONTAINER_SHELL64)
 gst_base64: $(GST_BASE_CONFIGURE_FILES64)
 	PATH="$(abspath $(TOOLS_DIR64))/bin:$(PATH)" \
 	LD_LIBRARY_PATH="$(abspath $(TOOLS_DIR64))/lib:$(LD_LIBRARY_PATH)" \
-	ninja -C "$(GST_BASE_OBJ64)" install
+	ninja -v -C "$(GST_BASE_OBJ64)" install
 	cp -a $(TOOLS_DIR64)/lib/libgst* $(DST_DIR)/lib64/ && \
 	cp -a $(TOOLS_DIR64)/lib/gstreamer-1.0 $(DST_DIR)/lib64/
 
@@ -750,7 +767,7 @@ gst_base32: SHELL = $(CONTAINER_SHELL32)
 gst_base32: $(GST_BASE_CONFIGURE_FILES32)
 	PATH="$(abspath $(TOOLS_DIR32))/bin:$(PATH)" \
 	LD_LIBRARY_PATH="$(abspath $(TOOLS_DIR32))/lib:$(LD_LIBRARY_PATH)" \
-	ninja -C "$(GST_BASE_OBJ32)" install
+	ninja -v -C "$(GST_BASE_OBJ32)" install
 	cp -a $(TOOLS_DIR32)/lib/libgst* $(DST_DIR)/lib/ && \
 	cp -a $(TOOLS_DIR32)/lib/gstreamer-1.0 $(DST_DIR)/lib/
 
@@ -808,6 +825,7 @@ GST_GOOD_MESON_ARGS := \
 	-Dximagesrc=disabled \
 	-Dy4m=disabled \
 	-Dtools=disabled \
+	-Dpackage-name="GStreamer Good Plugins (Proton)" \
 	$(GST_COMMON_MESON_ARGS)
 
 GST_GOOD_CONFIGURE_FILES32 := $(GST_GOOD_OBJ32)/build.ninja
@@ -858,7 +876,7 @@ gst_good64: SHELL = $(CONTAINER_SHELL64)
 gst_good64: $(GST_GOOD_CONFIGURE_FILES64)
 	PATH="$(abspath $(TOOLS_DIR64))/bin:$(PATH)" \
 	LD_LIBRARY_PATH="$(abspath $(TOOLS_DIR64))/lib:$(LD_LIBRARY_PATH)" \
-	ninja -C "$(GST_GOOD_OBJ64)" install
+	ninja -v -C "$(GST_GOOD_OBJ64)" install
 	cp -a $(TOOLS_DIR64)/lib/libgst* $(DST_DIR)/lib64/ && \
 	cp -a $(TOOLS_DIR64)/lib/gstreamer-1.0 $(DST_DIR)/lib64/
 
@@ -866,7 +884,7 @@ gst_good32: SHELL = $(CONTAINER_SHELL32)
 gst_good32: $(GST_GOOD_CONFIGURE_FILES32)
 	PATH="$(abspath $(TOOLS_DIR32))/bin:$(PATH)" \
 	LD_LIBRARY_PATH="$(abspath $(TOOLS_DIR32))/lib:$(LD_LIBRARY_PATH)" \
-	ninja -C "$(GST_GOOD_OBJ32)" install
+	ninja -v -C "$(GST_GOOD_OBJ32)" install
 	cp -a $(TOOLS_DIR32)/lib/libgst* $(DST_DIR)/lib/ && \
 	cp -a $(TOOLS_DIR32)/lib/gstreamer-1.0 $(DST_DIR)/lib/
 
@@ -896,6 +914,7 @@ $(FAUDIO_CONFIGURE_FILES32): $(FAUDIO)/CMakeLists.txt $(MAKEFILE_DEP) gst_base32
 		CC="$(CC32)" \
 		CXX="$(CXX32)" \
 		PKG_CONFIG="$(PKG_CONFIG32)" \
+		CFLAGS="$(OPTIMIZE_FLAGS)" \
 		cmake $(abspath $(FAUDIO)) \
 			-DCMAKE_INSTALL_PREFIX="$(abspath $(TOOLS_DIR32))" \
 			$(FAUDIO_CMAKE_FLAGS)
@@ -1255,7 +1274,13 @@ $(WINE_CONFIGURE_FILES64): SHELL = $(CONTAINER_SHELL64)
 $(WINE_CONFIGURE_FILES64): $(MAKEFILE_DEP) | faudio64 jxrlib64 gst_base64 $(WINE_OBJ64)
 	cd $(dir $@) && \
 		../$(WINE)/configure \
+			--with-x \
+			--with-gstreamer \
+			--with-faudio \
 			--without-curses \
+			--without-vkd3d \
+			--without-oss \
+			--disable-win16 \
 			--enable-win64 \
 			--disable-tests \
 			--prefix=$(abspath $(DST_DIR)) \
@@ -1275,7 +1300,13 @@ $(WINE_CONFIGURE_FILES32): SHELL = $(CONTAINER_SHELL32)
 $(WINE_CONFIGURE_FILES32): $(MAKEFILE_DEP) | faudio32 jxrlib32 gst_base32 $(WINE_OBJ32)
 	cd $(dir $@) && \
 		../$(WINE)/configure \
+			--with-x \
+			--with-gstreamer \
+			--with-faudio \
 			--without-curses \
+			--without-vkd3d \
+			--without-oss \
+			--disable-win16 \
 			--disable-tests \
 			--prefix=$(abspath $(WINE_DST32)) \
 			LD_LIBRARY_PATH=$(abspath $(TOOLS_DIR32))/lib \
@@ -1479,7 +1510,7 @@ dxvk_configure32: $(DXVK_CONFIGURE_FILES32)
 dxvk: dxvk32 dxvk64
 
 dxvk64: $(DXVK_CONFIGURE_FILES64)
-	env PATH="$(abspath $(SRCDIR))/glslang/bin/:$(PATH)" ninja -C "$(DXVK_OBJ64)" install
+	env PATH="$(abspath $(SRCDIR))/glslang/bin/:$(PATH)" ninja -v -C "$(DXVK_OBJ64)" install
 	mkdir -p "$(DST_DIR)/lib64/wine/dxvk"
 	cp -f "$(DXVK_OBJ64)"/bin/dxgi.dll "$(DST_DIR)"/lib64/wine/dxvk
 	cp -f "$(DXVK_OBJ64)"/bin/d3d11.dll "$(DST_DIR)"/lib64/wine/dxvk
@@ -1492,7 +1523,7 @@ dxvk64: $(DXVK_CONFIGURE_FILES64)
 
 
 dxvk32: $(DXVK_CONFIGURE_FILES32)
-	env PATH="$(abspath $(SRCDIR))/glslang/bin/:$(PATH)" ninja -C "$(DXVK_OBJ32)" install
+	env PATH="$(abspath $(SRCDIR))/glslang/bin/:$(PATH)" ninja -v -C "$(DXVK_OBJ32)" install
 	mkdir -p "$(DST_DIR)"/lib/wine/dxvk
 	cp -f "$(DXVK_OBJ32)"/bin/dxgi.dll "$(DST_DIR)"/lib/wine/dxvk/
 	cp -f "$(DXVK_OBJ32)"/bin/d3d11.dll "$(DST_DIR)"/lib/wine/dxvk/
@@ -1517,12 +1548,12 @@ $(VKD3D_CONFIGURE_FILES32): $(VKD3D)/meson.build $(VKD3D)/build-win32.txt | $(VK
 			meson --prefix="$(abspath $(VKD3D_OBJ32))" \
 				--cross-file "$(abspath $(VKD3D))/build-win32.txt" \
 				$(MESON_STRIP_ARG) \
-				--buildtype=release -Denable_standalone_d3d12=true \
+				--buildtype=release -Denable_d3d12=true \
 				"$(abspath $(VKD3D))"
 
 vkd3d32: SHELL = $(CONTAINER_SHELL32)
 vkd3d32: $(VKD3D_CONFIGURE_FILES32)
-	ninja -C "$(VKD3D_OBJ32)" install
+	ninja -v -C "$(VKD3D_OBJ32)" install
 	mkdir -p "$(DST_DIR)"/lib/wine/vkd3d-proton
 	cp -af "$(VKD3D_OBJ32)/bin/d3d12.dll" "$(DST_DIR)"/lib/wine/vkd3d-proton/
 	rm -f "$(DST_DIR)"/lib/wine/vkd3d-proton/version && if test -e $(SRCDIR)/.git; then ( cd $(SRCDIR) && git submodule status -- vkd3d-proton ) > "$(DST_DIR)"/lib/wine/vkd3d-proton/version; fi
@@ -1534,12 +1565,12 @@ $(VKD3D_CONFIGURE_FILES64): $(VKD3D)/meson.build $(VKD3D)/build-win64.txt | $(VK
 			meson --prefix="$(abspath $(VKD3D_OBJ64))" \
 				--cross-file "$(abspath $(VKD3D))/build-win64.txt" \
 				$(MESON_STRIP_ARG) \
-				--buildtype=release -Denable_standalone_d3d12=true \
+				--buildtype=release -Denable_d3d12=true \
 				"$(abspath $(VKD3D))"
 
 vkd3d64: SHELL = $(CONTAINER_SHELL64)
 vkd3d64: $(VKD3D_CONFIGURE_FILES64)
-	ninja -C "$(VKD3D_OBJ64)" install
+	ninja -v -C "$(VKD3D_OBJ64)" install
 	mkdir -p "$(DST_DIR)"/lib64/wine/vkd3d-proton
 	cp -af "$(VKD3D_OBJ64)/bin/d3d12.dll" "$(DST_DIR)"/lib64/wine/vkd3d-proton/
 	rm -f "$(DST_DIR)"/lib64/wine/vkd3d-proton/version && if test -e $(SRCDIR)/.git; then ( cd $(SRCDIR) && git submodule status -- vkd3d-proton ) > "$(DST_DIR)"/lib64/wine/vkd3d-proton/version; fi
