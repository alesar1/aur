--- a/README.rst	2019-08-14 09:29:42.000000000 +0800
+++ b/README.rst	2019-08-14 14:12:09.437040500 +0800
@@ -105,12 +105,14 @@
 What is the orientation?
 ^^^^^^^^^^^^^^^^^^^^^^^^
 
+.. currentmodule:: spherical_geometry.polygon
+
 The correctness of several of the algorithms using polygons depends on
 a consistent orientation of the points defining it. That is, the points
 should have a clockwise order. When creating a new spherical polygon,
 the order of the points defining a polygon will be reversed if they are
 not in clockwise order. The method `SphericalPolygon.is_clockwise` is
-used to est if the points are in clockwise order. It takes two
+used to test if the points are in clockwise order. It takes two
 successive sides and computes the normal vector to the sides. If the
 normal vector points inward towards the center of the sphere, the two
 sides are counter clockwise. If the normal vector points outward, the
@@ -183,7 +185,7 @@
     `~SphericalPolygon.multi_intersection`: Return a new polygon that
     is the intersection of two or more polygons.
 
-  - `~SphericalPolygon.overlap`: Determine how much a given polygon
+  - `~SingleSphericalPolygon.overlap`: Determine how much a given polygon
     overlaps another.
 
   - `~SphericalPolygon.to_radec`: Convert (*x*, *y*, *z*) points in the
