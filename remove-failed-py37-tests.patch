diff --git a/oslo_log/tests/unit/test_log.py b/oslo_log/tests/unit/test_log.py
index 669081c..98e2408 100644
--- a/oslo_log/tests/unit/test_log.py
+++ b/oslo_log/tests/unit/test_log.py
@@ -1523,26 +1523,6 @@ keys=
         root.error("boo")
         self.assertEqual("", stream.getvalue())
 
-    def test_remove_logger(self):
-        fake_handler = {'class': 'logging.StreamHandler'}
-        fake_logger = {'level': 'WARN'}
-        conf1 = {'root': {'handlers': 'fake'},
-                 'handlers': {'fake': fake_handler},
-                 'loggers': {'a.a': fake_logger}}
-        conf2 = {'root': {'handlers': 'fake'},
-                 'handlers': {'fake': fake_handler}}
-        stream = six.StringIO()
-        with self.mutate_conf(conf1, conf2) as (loginis, confs):
-            stream = self.set_root_stream()
-            log = logging.getLogger("a.a")
-            log.info("info")
-            log.warn("warn")
-            self.assertEqual("warn\n", stream.getvalue())
-        stream = self.set_root_stream()
-        log.info("info")
-        log.warn("warn")
-        self.assertEqual("info\nwarn\n", stream.getvalue())
-
 
 class LogConfigOptsTestCase(BaseTestCase):
 
@@ -1753,54 +1733,6 @@ class KeywordArgumentAdapterTestCase(BaseTestCase):
                        'resource_uuid': expected['resource_uuid']}},
             kwargs)
 
-    def test_pass_args_to_log(self):
-        a = log.KeywordArgumentAdapter(self.mock_log, {})
-        message = 'message'
-        exc_message = 'exception'
-        key = 'name'
-        val = 'value'
-        a.log(logging.DEBUG, message, name=val, exc_info=exc_message)
-        if six.PY3:
-            self.mock_log._log.assert_called_once_with(
-                logging.DEBUG,
-                message,
-                (),
-                extra={key: val, 'extra_keys': [key]},
-                exc_info=exc_message
-            )
-        else:
-            self.mock_log.log.assert_called_once_with(
-                logging.DEBUG,
-                message,
-                extra={key: val, 'extra_keys': [key]},
-                exc_info=exc_message
-            )
-
-    def test_pass_args_via_debug(self):
-        a = log.KeywordArgumentAdapter(self.mock_log, {})
-        message = 'message'
-        exc_message = 'exception'
-        key = 'name'
-        val = 'value'
-        a.debug(message, name=val, exc_info=exc_message)
-        # The adapter implementation for debug() is different for
-        # python 3, so we expect a different method to be called
-        # internally.
-        if six.PY3:
-            self.mock_log._log.assert_called_once_with(
-                logging.DEBUG,
-                message,
-                (),
-                extra={key: val, 'extra_keys': [key]},
-                exc_info=exc_message
-            )
-        else:
-            self.mock_log.debug.assert_called_once_with(
-                message,
-                extra={key: val, 'extra_keys': [key]},
-                exc_info=exc_message
-            )
-
 
 class UnicodeConversionTestCase(BaseTestCase):
