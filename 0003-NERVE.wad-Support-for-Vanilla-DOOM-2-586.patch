From fc08e1089a5d04c21266a67fc46e4e30d3333685 Mon Sep 17 00:00:00 2001
From: Fabian Greffrath <fabian@greffrath.com>
Date: Fri, 17 Apr 2020 13:12:33 +0200
Subject: [PATCH 3/5] NERVE.wad Support for Vanilla DOOM 2 (#586)

Fixes #582, thanks @hkight
---
 src/doom/d_main.c |  23 +++++-----
 src/doom/m_menu.c | 111 ++++++++++++++++++++++------------------------
 2 files changed, 65 insertions(+), 69 deletions(-)

diff --git a/src/doom/d_main.c b/src/doom/d_main.c
index f3cbd9610..681d52311 100644
--- a/src/doom/d_main.c
+++ b/src/doom/d_main.c
@@ -1486,7 +1486,7 @@ static void LoadSigilWad(void)
 // [crispy] support loading NERVE.WAD alongside DOOM2.WAD
 static void LoadNerveWad(void)
 {
-    int i, j, k;
+    int i, j;
 
     if (gamemission != doom2)
         return;
@@ -1500,16 +1500,6 @@ static void LoadNerveWad(void)
 	DEH_AddStringReplacement ("TITLEPIC", "INTERPIC");
     }
     else
-    // [crispy] The "New Game -> Which Expansion" menu is only shown if the
-    // menu graphics lumps are available and (a) if they are from the IWAD
-    // and that is the BFG Edition DOOM2.WAD or (b) if they are from a PWAD.
-    if ((i = W_CheckNumForName("M_EPI1")) != -1 &&
-        (j = W_CheckNumForName("M_EPI2")) != -1 &&
-        (k = W_CheckNumForName("M_EPISOD")) != -1 &&
-        (gamevariant == bfgedition ||
-        (!W_IsIWADLump(lumpinfo[i]) &&
-         !W_IsIWADLump(lumpinfo[j]) &&
-         !W_IsIWADLump(lumpinfo[k]))))
     {
         if (strrchr(iwadfile, DIR_SEPARATOR) != NULL)
         {
@@ -1546,6 +1536,17 @@ static void LoadNerveWad(void)
             lumpinfo[W_GetNumForName(lumpname)]->name[0] = 'N';
         }
 
+        // [crispy] The "New Game -> Which Expansion" menu is only shown if the
+        // menu graphics lumps are available and (a) if they are from the IWAD
+        // and that is the BFG Edition DOOM2.WAD or (b) if they are from a PWAD.
+        if (gamevariant != bfgedition)
+        {
+            if ((i = W_CheckNumForName("M_EPI1")) != -1 && W_IsIWADLump(lumpinfo[i]))
+                lumpinfo[i]->name[0] = 'X';
+            if ((i = W_CheckNumForName("M_EPI2")) != -1 && W_IsIWADLump(lumpinfo[i]))
+                lumpinfo[i]->name[0] = 'X';
+        }
+
         // [crispy] regenerate the hashtable
         W_GenerateHashTable();
     }
diff --git a/src/doom/m_menu.c b/src/doom/m_menu.c
index 281536e8a..9847a1553 100644
--- a/src/doom/m_menu.c
+++ b/src/doom/m_menu.c
@@ -160,7 +160,7 @@ typedef struct
     
     // hotkey in menu
     char	alphaKey;			
-    char	*alttext; // [crispy] alternative text for the Options menu
+    char	*alttext; // [crispy] alternative text for menu items
 } menuitem_t;
 
 
@@ -174,6 +174,7 @@ typedef struct menu_s
     short		x;
     short		y;		// x,y of menu
     short		lastOn;		// last item user was on in menu
+    short		lumps_missing;	// [crispy] indicate missing menu graphics lumps
 } menu_t;
 
 short		itemOn;			// menu item skull is on
@@ -192,7 +193,6 @@ menu_t*	currentMenu;
 //
 static void M_NewGame(int choice);
 static void M_Episode(int choice);
-static void M_Expansion(int choice); // [crispy] NRFTL
 static void M_ChooseSkill(int choice);
 static void M_LoadGame(int choice);
 static void M_SaveGame(int choice);
@@ -320,32 +320,6 @@ menu_t  EpiDef =
     ep1			// lastOn
 };
 
-//
-// EXPANSION SELECT
-//
-enum
-{
-    ex1,
-    ex2,
-    ex_end
-} expansions_e;
-
-static menuitem_t ExpansionMenu[]=
-{
-    {1,"M_EPI1", M_Expansion,'h'},
-    {1,"M_EPI2", M_Expansion,'n'},
-};
-
-static menu_t  ExpDef =
-{
-    ex_end,		// # of menu items
-    &MainDef,		// previous menu
-    ExpansionMenu,	// menuitem_t ->
-    M_DrawEpisode,	// drawing routine ->
-    48,63,              // x,y
-    ex1			// lastOn
-};
-
 //
 // NEW GAME
 //
@@ -1290,10 +1264,7 @@ void M_NewGame(int choice)
 	
     // Chex Quest disabled the episode select screen, as did Doom II.
 
-    if (nervewadfile)
-	M_SetupNextMenu(&ExpDef);
-    else
-    if (gamemode == commercial || gameversion == exe_chex)
+    if ((gamemode == commercial && !nervewadfile) || gameversion == exe_chex) // [crispy] NRFTL
 	M_SetupNextMenu(&NewDef);
     else
 	M_SetupNextMenu(&EpiDef);
@@ -1345,47 +1316,52 @@ void M_Episode(int choice)
     M_SetupNextMenu(&NewDef);
 }
 
-static void M_Expansion(int choice)
-{
-    epi = choice;
-    M_SetupNextMenu(&NewDef);
-}
 
 
 //
 // M_Options
 //
-// [crispy] no patches are drawn in the Options menu anymore
-/*
 static const char *detailNames[2] = {"M_GDHIGH","M_GDLOW"};
 static const char *msgNames[2] = {"M_MSGOFF","M_MSGON"};
-*/
 
 void M_DrawOptions(void)
 {
     V_DrawPatchDirect(108, 15, W_CacheLumpName(DEH_String("M_OPTTTL"),
                                                PU_CACHE));
 	
-// [crispy] no patches are drawn in the Options menu anymore
-/*
+    if (OptionsDef.lumps_missing == -1)
+    {
     V_DrawPatchDirect(OptionsDef.x + 175, OptionsDef.y + LINEHEIGHT * detail,
 		      W_CacheLumpName(DEH_String(detailNames[detailLevel]),
 			              PU_CACHE));
-*/
-
+    }
+    else
+    if (OptionsDef.lumps_missing > 0)
+    {
     M_WriteText(OptionsDef.x + M_StringWidth("Graphic Detail: "),
                 OptionsDef.y + LINEHEIGHT * detail + 8 - (M_StringHeight("HighLow")/2),
                 detailLevel ? "Low" : "High");
+    }
 
-// [crispy] no patches are drawn in the Options menu anymore
-/*
+    if (OptionsDef.lumps_missing == -1)
+    {
     V_DrawPatchDirect(OptionsDef.x + 120, OptionsDef.y + LINEHEIGHT * messages,
                       W_CacheLumpName(DEH_String(msgNames[showMessages]),
                                       PU_CACHE));
-*/
+    }
+    else
+    if (OptionsDef.lumps_missing > 0)
+    {
     M_WriteText(OptionsDef.x + M_StringWidth("Messages: "),
                 OptionsDef.y + LINEHEIGHT * messages + 8 - (M_StringHeight("OnOff")/2),
                 showMessages ? "On" : "Off");
+    }
+
+// [crispy] mouse sensitivity menu
+/*
+    M_DrawThermo(OptionsDef.x, OptionsDef.y + LINEHEIGHT * (mousesens + 1),
+		 10, mouseSensitivity);
+*/
 
     M_DrawThermo(OptionsDef.x,OptionsDef.y+LINEHEIGHT*(scrnsize+1),
 		 9 + (crispy->widescreen ? 6 : 3),screenSize); // [crispy] Crispy HUD
@@ -1765,7 +1741,6 @@ void M_QuitResponse(int key)
 
     if (key != key_menu_confirm)
 	return;
-
     // [crispy] play quit sound only if the ENDOOM screen is also shown
     if (!netgame && show_endoom)
     {
@@ -2980,11 +2955,25 @@ void M_Drawer (void)
     y = currentMenu->y;
     max = currentMenu->numitems;
 
+    // [crispy] check current menu for missing menu graphics lumps - only once
+    if (currentMenu->lumps_missing == 0)
+    {
+        for (i = 0; i < max; i++)
+            if (currentMenu->menuitems[i].name[0])
+                if (W_CheckNumForName(currentMenu->menuitems[i].name) < 0)
+                    currentMenu->lumps_missing++;
+
+        // [crispy] no lump missing, no need to check again
+        if (currentMenu->lumps_missing == 0)
+            currentMenu->lumps_missing = -1;
+    }
+
     for (i=0;i<max;i++)
     {
+        char *alttext = currentMenu->menuitems[i].alttext;
         name = DEH_String(currentMenu->menuitems[i].name);
 
-	if (name[0]) // && W_CheckNumForName(name) > 0) // [crispy] moved...
+	if (name[0] && (W_CheckNumForName(name) > 0 || alttext))
 	{
 	    // [crispy] shade unavailable menu items
 	    if ((currentMenu == &MainDef && i == savegame && (!usergame || gamestate != GS_LEVEL)) ||
@@ -2993,15 +2982,10 @@ void M_Drawer (void)
 	        (currentMenu == &MainDef && i == newgame && (demorecording || (netgame && !demoplayback))))
 	        dp_translation = cr[CR_DARK];
 
-	    if (currentMenu == &OptionsDef)
-	    {
-		char *alttext = currentMenu->menuitems[i].alttext;
-
-		if (alttext)
-		    M_WriteText(x, y+8-(M_StringHeight(alttext)/2), alttext);
-	    }
-	    else if (W_CheckNumForName(name) > 0) // [crispy] ...here
+	    if (W_CheckNumForName(name) > 0 && currentMenu->lumps_missing == -1)
 	    V_DrawPatchDirect (x, y, W_CacheLumpName(name, PU_CACHE));
+	    else if (alttext)
+		M_WriteText(x, y+8-(M_StringHeight(alttext)/2), alttext);
 
 	    dp_translation = NULL;
 	}
@@ -3104,7 +3088,7 @@ void M_Init (void)
         MainMenu[readthis] = MainMenu[quitdoom];
         MainDef.numitems--;
         MainDef.y += 8;
-        NewDef.prevMenu = nervewadfile ? &ExpDef : &MainDef;
+        NewDef.prevMenu = &MainDef;
         ReadDef1.routine = M_DrawReadThisCommercial;
         ReadDef1.x = 330;
         ReadDef1.y = 165;
@@ -3133,6 +3117,17 @@ void M_Init (void)
         NewDef.prevMenu = &MainDef;
     }
 
+    // [crispy] NRFTL
+    if (nervewadfile)
+    {
+        NewDef.prevMenu = &EpiDef;
+        EpiDef.numitems = 2;
+        EpisodeMenu[0].alphaKey = 'h';
+        EpisodeMenu[0].alttext = "Hell on Earth";
+        EpisodeMenu[1].alphaKey = 'n';
+        EpisodeMenu[1].alttext = "No Rest for the Living";
+    }
+
     // [crispy] rearrange Load Game and Save Game menus
     {
 	const patch_t *patchl, *patchs, *patchm;
-- 
2.26.2

