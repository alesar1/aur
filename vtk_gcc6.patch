--- build_visit2_10_3	2016-07-13 10:21:46.960665498 +0200
+++ build_visit2_10_3.new	2016-07-13 13:15:57.205848552 +0200
@@ -18575,6 +18575,50 @@
     return 0;
 }
 
+function apply_vtk_gcc6_patch
+{
+   patch -p1 << \EOF
+--- a/CMake/vtkCompilerExtras.cmake	2014-01-22 16:55:41.000000000 +0100
++++ b/CMake/vtkCompilerExtras.cmake.new	2016-07-11 21:28:48.107362104 +0200
+@@ -27,10 +27,10 @@
+     OUTPUT_VARIABLE _gcc_version_info
+     ERROR_VARIABLE _gcc_version_info)
+ 
+-  string (REGEX MATCH "[345]\\.[0-9]\\.[0-9]"
++  string (REGEX MATCH "[0-9]\\.[0-9]\\.[0-9]"
+     _gcc_version "${_gcc_version_info}")
+   if(NOT _gcc_version)
+-    string (REGEX REPLACE ".*\\(GCC\\).* ([34]\\.[0-9]) .*" "\\1.0"
++    string (REGEX REPLACE ".*\\(GCC\\).* ([0-9]\\.[0-9]) .*" "\\1.0"
+       _gcc_version "${_gcc_version_info}")
+   endif()
+ 
+--- a/CMake/GenerateExportHeader.cmake	2014-01-22 16:55:41.000000000 +0100
++++ b/CMake/GenerateExportHeader.cmake.new	2016-07-11 21:28:47.977361853 +0200
+@@ -166,12 +166,12 @@
+     execute_process(COMMAND ${CMAKE_C_COMPILER} --version
+       OUTPUT_VARIABLE _gcc_version_info
+       ERROR_VARIABLE _gcc_version_info)
+-    string(REGEX MATCH "[345]\\.[0-9]\\.[0-9]"
++    string(REGEX MATCH "[0-9]\\.[0-9]\\.[0-9]"
+       _gcc_version "${_gcc_version_info}")
+     # gcc on mac just reports: "gcc (GCC) 3.3 20030304 ..." without the
+     # patch level, handle this here:
+     if(NOT _gcc_version)
+-      string(REGEX REPLACE ".*\\(GCC\\).* ([34]\\.[0-9]) .*" "\\1.0"
++      string(REGEX REPLACE ".*\\(GCC\\).* ([0-9]\\.[0-9]) .*" "\\1.0"
+         _gcc_version "${_gcc_version_info}")
+     endif()
+
+EOF
+    if [[ $? != 0 ]] ; then
+      warn "vtk_gcc6 patch failed."
+      return 1
+    fi
+
+    return 0;
+}
+
 function apply_vtk_610_patch_2
 {
    patch -p0 << \EOF
@@ -18795,6 +18839,7 @@
     if [[ ${VTK_VERSION} == 6.1.0 ]] ; then
         apply_vtk_600_patch
         apply_vtk_610_patch_2
+        apply_vtk_gcc6_patch
         if [[ "$OPSYS" == "Linux" ]] ; then
 	   apply_vtk_610_patch
         fi
