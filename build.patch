--- a/Makefile	2020-10-07 11:09:28.000000000 +0300
+++ b/Makefile	2020-10-13 23:41:15.595535201 +0300
@@ -60,17 +60,17 @@
 
 # Compile with debug flags if requested.
 ifeq ($(DEBUG_JUJU), 1)
-    COMPILE_FLAGS = -gcflags "all=-N -l"
-    LINK_FLAGS = -ldflags "-X $(PROJECT)/version.GitCommit=$(GIT_COMMIT) -X $(PROJECT)/version.GitTreeState=$(GIT_TREE_STATE) -X $(PROJECT)/version.build=$(JUJU_BUILD_NUMBER)"
+    COMPILE_FLAGS = -gcflags "all=-N -l" -trimpath -gccgoflags "$(CFLAGS)"
+    LINK_FLAGS = -ldflags "-X $(PROJECT)/version.GitCommit=$(GIT_COMMIT) -X $(PROJECT)/version.GitTreeState=$(GIT_TREE_STATE) -X $(PROJECT)/version.build=$(JUJU_BUILD_NUMBER) -extldflags '$(LDFLAGS)'"
 else
 ifeq ($(shell echo "${GOARCH}" | sed -E 's/.*(ppc64le|ppc64).*/golang/'), golang)
 	# disable optimizations on ppc64le due to https://golang.org/issue/39049
 	# go 1.15 should include the fix for this issue.
-	COMPILE_FLAGS = -gcflags "all=-N"
+	COMPILE_FLAGS = -gcflags "all=-N" -trimpath -gccgoflags "$(CFLAGS)"
 else
-	COMPILE_FLAGS =
+	COMPILE_FLAGS = -trimpath -gccgoflags "$(CFLAGS)"
 endif
-    LINK_FLAGS = -ldflags "-s -w -extldflags '-static' -X $(PROJECT)/version.GitCommit=$(GIT_COMMIT) -X $(PROJECT)/version.GitTreeState=$(GIT_TREE_STATE) -X $(PROJECT)/version.build=$(JUJU_BUILD_NUMBER)"
+    LINK_FLAGS = -ldflags "-s -w -X $(PROJECT)/version.GitCommit=$(GIT_COMMIT) -X $(PROJECT)/version.GitTreeState=$(GIT_TREE_STATE) -X $(PROJECT)/version.build=$(JUJU_BUILD_NUMBER) -extldflags '-static $(LDFLAGS)'"
 endif
 
 define DEPENDENCIES
