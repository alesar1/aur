From 1a82d7c95dda6efefeb1f3af57fbb20063b5339e Mon Sep 17 00:00:00 2001
From: DJ Delorie <dj at redhat dot com>
Date: Mon, 27 Aug 2018 02:39:05 -0400
Subject: [PATCH] test-in-container: fix Arch Linux build-programs bug?

Turns out Arch Linux uses the build-programs variable to build
different parts of glibc with different flags; but setting
build-programs to "no" also disables the default rules for programs,
leading to makefile-related errors elsewhere.

Since the "others:" target already depends on $(others) (or not) depending
on build-programs - see :

ifeq ($(build-programs),yes)
others: $(addprefix $(objpfx),$(others) $(sysdep-others) $(extra-objs))
else
others: $(addprefix $(objpfx),$(extra-objs))
endif

Setting $(others) is sufficient, and dependencies on others: are
redundant - or in this case, problematic.

Is my understanding and description accurate?

Tested via plain builds/tests with and without build-programs=no, plus
build-many-glibcs for targets x86_64-linux-gnu, i686-gnu, and
ia64-linux-gnu.

Ok to install?

	* support/Makefile (others): Don't list programs explicitly as
	a dependency of "others".
---
 support/Makefile | 10 ----------
 1 file changed, 10 deletions(-)

diff --git a/support/Makefile b/support/Makefile
index 0ed00212cb..b528f538a6 100644
--- a/support/Makefile
+++ b/support/Makefile
@@ -168,16 +168,6 @@ LINKS_DSO_PROGRAM = links-dso-program
 LDLIBS-links-dso-program = -lstdc++ -lgcc -lgcc_s $(libunwind)
 endif
 
-others: \
-	$(objpfx)test-container \
-	$(objpfx)shell-container \
-	$(objpfx)echo-container \
-	$(objpfx)true-container \
-	$(objpfx)$(LINKS_DSO_PROGRAM)
-
-ifeq ($(build-programs),yes)
-endif
-
 LDLIBS-test-container = $(libsupport)
 
 others += test-container
-- 
2.18.0

