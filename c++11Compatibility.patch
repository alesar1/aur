diff -rupN mstflint-4.4.0/flint/subcommands.cpp mstflint-4.4.0_c++11Compatibility/flint/subcommands.cpp
--- mstflint-4.4.0/flint/subcommands.cpp	2016-05-24 08:52:16.000000000 -0400
+++ mstflint-4.4.0_c++11Compatibility/flint/subcommands.cpp	2016-06-10 00:49:33.701992754 -0400
@@ -834,7 +834,7 @@ bool SubCommand::printGuidLine(guid_t* n
 
 bool SubCommand::printMacLine(guid_t* new_guids, guid_t* old_guids, int mac_index)
 {
-    printf("    "MAC_FORMAT MAC_SPACES, new_guids[mac_index].h, new_guids[mac_index].l);
+    printf("    " MAC_FORMAT MAC_SPACES, new_guids[mac_index].h, new_guids[mac_index].l);
     if (old_guids != NULL) {
         printf(MAC_FORMAT, old_guids[mac_index].h, old_guids[mac_index].l);
     } else {
@@ -1097,8 +1097,8 @@ BurnSubCommand:: BurnSubCommand()
     _flagShort = "b";
     _param = "";
     _paramExp = "None";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" -i image1.bin burn\n"
-              INDENTEX FLINT_NAME" -d "MST_DEV_EXAMPLE2" -guid 0x2c9000100d050 -i image1.bin b";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " -i image1.bin burn\n"
+              INDENTEX FLINT_NAME " -d " MST_DEV_EXAMPLE2 " -guid 0x2c9000100d050 -i image1.bin b";
     _v = Wtv_Dev_And_Img;
     _maxCmdParamNum = 0;
     _cmdType = SC_Burn;
@@ -1688,7 +1688,7 @@ bool QuerySubCommand::displayFs2Uids(con
 
 #define BASE_STR "Base"
 #define PRINT_FS3_UID(uid1, str, printStep) \
-    printf("%-16s     %016"U64H_FMT_GEN"        %d", str, uid1.uid, uid1.num_allocated);\
+    printf("%-16s     %016" U64H_FMT_GEN "        %d", str, uid1.uid, uid1.num_allocated);\
     if (printStep) {\
         printf("          %d", uid1.step);\
     }\
@@ -1873,7 +1873,7 @@ QuerySubCommand:: QuerySubCommand()
     _flagShort = "q";
     _param = "[full]";
     _paramExp = "None";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" query";
+    _example = FLINT_NAME" -d " MST_DEV_EXAMPLE1 " query";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 1;
     _cmdType = SC_Query;
@@ -1922,7 +1922,7 @@ VerifySubCommand:: VerifySubCommand()
     _flagShort = "v";
     _param = "[showitoc]";
     _paramExp = "None";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" v";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " v";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 1;
     _cmdType = SC_Verify;
@@ -2043,7 +2043,7 @@ BromSubCommand:: BromSubCommand()
     _flagShort = "";
     _param = "<ROM-file>";
     _paramExp = "file: The exp-ROM file.";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" brom exp-rom.rom";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " brom exp-rom.rom";
     _v = Wtv_Dev_Or_Img;
     _cmdType = SC_Brom;
     _maxCmdParamNum = 1;
@@ -2149,7 +2149,7 @@ DromSubCommand:: DromSubCommand()
     _flagShort = "";
     _param = "";
     _paramExp = "None";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" drom";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " drom";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 0;
     _cmdType = SC_Drom;
@@ -2198,7 +2198,7 @@ RromSubCommand:: RromSubCommand()
     _flagShort = "";
     _param = "<out-file>";
     _paramExp = "file: filename to write the exp-ROM to.";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" rrom exp-rom.rom";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " rrom exp-rom.rom";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 1;
     _minCmdParamNum = 1;
@@ -2258,7 +2258,7 @@ BbSubCommand:: BbSubCommand()
     _flagShort = "";
     _param = "";
     _paramExp = "None";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" -i image1.bin bb";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " -i image1.bin bb";
     _v = Wtv_Dev_And_Img;
     _maxCmdParamNum = 0;
     _cmdType = SC_Bb;
@@ -2331,8 +2331,8 @@ SgSubCommand:: SgSubCommand()
                 INDENTEX"guids_num: (optional) number of GUIDs to be allocated per physical port (FS3 Only)\n"
                 INDENTEX"step_size: (optional) step size between GUIDs (FS3 Only)\n"
                 INDENTEX"Note: guids_num/step_size values can be specified per port or for both ports";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" -guid 0x0002c9000100d050 sg"
-  "\n"INDENTEX FLINT_NAME" -d "MST_DEV_EXAMPLE4" -guid 0x0002c9000100d050 -mac 0x0002c900d050 sg";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " -guid 0x0002c9000100d050 sg"
+  "\n" INDENTEX FLINT_NAME " -d " MST_DEV_EXAMPLE4 " -guid 0x0002c9000100d050 -mac 0x0002c900d050 sg";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 2;
     _cmdType = SC_Sg;
@@ -2558,9 +2558,9 @@ SmgSubCommand:: SmgSubCommand()
                 INDENTEX"Note: guids_num/step_size values can be specified per port or for both ports";
     _example = FLINT_NAME" -i fw_image.bin -uid 0x0002c9000100d050 smg"
 #ifndef __WIN__
-    		"\n"INDENTEX FLINT_NAME" -d "MST_DEV_EXAMPLE3" -uid 0x0002c9000100d050 smg (should be used when device is idle)"
+    		"\n" INDENTEX FLINT_NAME " -d " MST_DEV_EXAMPLE3 " -uid 0x0002c9000100d050 smg (should be used when device is idle)"
 #endif
-    		"\n"INDENTEX FLINT_NAME" -d "MST_DEV_EXAMPLE4" -guid 0x0002c9000100d050 -mac 0x0002c900d050 smg (should be used when device is idle)";
+    		"\n" INDENTEX FLINT_NAME " -d " MST_DEV_EXAMPLE4 " -guid 0x0002c9000100d050 -mac 0x0002c900d050 smg (should be used when device is idle)";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 2;
     _cmdType = SC_Smg;
@@ -2671,7 +2671,7 @@ SetVpdSubCommand:: SetVpdSubCommand()
     _paramExp = "vpd file: bin file containing the vpd data";
     _example = FLINT_NAME" -i fw_image.bin set_vpd vpd.bin"
 #ifndef __WIN__
-    			"\n"INDENTEX FLINT_NAME" -d "MST_DEV_EXAMPLE3" -override_cache_replacement set_vpd vpd.bin (should be used when device is idle)"
+    			"\n" INDENTEX FLINT_NAME " -d " MST_DEV_EXAMPLE3 " -override_cache_replacement set_vpd vpd.bin (should be used when device is idle)"
 #endif
     			;
     _v = Wtv_Dev_Or_Img;
@@ -2711,9 +2711,9 @@ SvSubCommand:: SvSubCommand()
     _flagShort = "";
     _param = "";
     _paramExp = "None";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" -vsd VSD_STRING sv"
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " -vsd VSD_STRING sv"
 #ifndef __WIN__
-    		"\n"INDENTEX FLINT_NAME" -d "MST_DEV_EXAMPLE3" -vsd VSD_STRING -override_cache_replacement sv (should be used when device is idle)\n"
+    		"\n" INDENTEX FLINT_NAME " -d " MST_DEV_EXAMPLE3 " -vsd VSD_STRING -override_cache_replacement sv (should be used when device is idle)\n"
 #endif
     		;
     _v = Wtv_Dev_Or_Img;
@@ -2769,7 +2769,7 @@ RiSubCommand:: RiSubCommand()
     _flagShort = "";
     _param = "<out-file>";
     _paramExp = "file: filename to write the image to (raw binary).";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" ri file.bin";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " ri file.bin";
     _v = Wtv_Dev;
     _maxCmdParamNum = 1;
     _minCmdParamNum = 1;
@@ -2841,7 +2841,7 @@ DcSubCommand:: DcSubCommand() {
     _param = "[out-file]";
     _paramExp = "file: (optional) filename to write the dumped configuration to. If not given, the data\n"
                 INDENTEX"is printed to screen";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" dc";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " dc";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 1;
     _cmdType = SC_Dc;
@@ -2892,7 +2892,7 @@ DhSubCommand:: DhSubCommand()
     _param = "[out-file]";
     _paramExp = "file - (optional) filename to write the dumped tracer hash file to. If not given, the data\n"
                 INDENTEX"is printed to screen";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" dh hash.csv";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " dh hash.csv";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 1;
     _cmdType = SC_Dh;
@@ -2945,7 +2945,7 @@ SetKeySubCommand:: SetKeySubCommand()
     _flagShort = "";
     _param = "[key]";
     _paramExp = "key: (optional) The new key you intend to set (in hex).";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" set_key 1234deaf5678";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " set_key 1234deaf5678";
     _v = Wtv_Dev;
     _maxCmdParamNum = 1;
     _cmdType = SC_Set_Key;
@@ -3039,7 +3039,7 @@ HwAccessSubCommand:: HwAccessSubCommand(
                 INDENTEX"                   You will be asked to type a key when you try to enable HW access.\n"
                 INDENTEX"key:               (optional) The key you intend to use for enabling the HW access.\n"
     			INDENTEX"                   Key format consists of at most 16 Hexadecimal digits.";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" hw_access enable";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " hw_access enable";
     _v = Wtv_Dev;
     _maxCmdParamNum = 2;
     _cmdType = SC_Hw_Access;
@@ -3151,7 +3151,7 @@ HwSubCommand:: HwSubCommand()
     _flagShort = "";
     _param = "query";
     _paramExp = "query";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" hw query";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " hw query";
 #endif
     _v = Wtv_Dev;
     _maxCmdParamNum = 2;
@@ -3213,15 +3213,15 @@ FlintStatus HwSubCommand::printAttr(cons
     if (attr.quad_en_support) {
         switch (attr.mf_get_quad_en_rc) {
             case MFE_OK:
-                printf("  "QUAD_EN_PARAM"                %d\n", attr.quad_en);
+                printf("  " QUAD_EN_PARAM "                %d\n", attr.quad_en);
                 break;
             case MFE_MISMATCH_PARAM:
-                printf("-E- There is a mismatch in the "QUAD_EN_PARAM" attribute between the flashes attached to the device\n");
+                printf("-E- There is a mismatch in the " QUAD_EN_PARAM " attribute between the flashes attached to the device\n");
                 break;
             case MFE_NOT_SUPPORTED_OPERATION:
                 break;
             default:
-                printf("Failed to get "QUAD_EN_PARAM" attribute: %s (%s)",\
+                printf("Failed to get " QUAD_EN_PARAM " attribute: %s (%s)",\
                         errno == 0 ? "" : strerror(errno), mf_err2str(attr.mf_get_quad_en_rc));
                 return FLINT_FAILED;
         }
@@ -3230,15 +3230,15 @@ FlintStatus HwSubCommand::printAttr(cons
     if (attr.dummy_cycles_support) {
         switch (attr.mf_get_dummy_cycles_rc) {
             case MFE_OK:
-                printf("  "DUMMY_CYCLES_PARAM"           %d\n", attr.dummy_cycles);
+                printf("  " DUMMY_CYCLES_PARAM "           %d\n", attr.dummy_cycles);
                 break;
             case MFE_MISMATCH_PARAM:
-                printf("-E- There is a mismatch in the "DUMMY_CYCLES_PARAM" attribute between the flashes attached to the device\n");
+                printf("-E- There is a mismatch in the " DUMMY_CYCLES_PARAM " attribute between the flashes attached to the device\n");
                 break;
             case MFE_NOT_SUPPORTED_OPERATION:
                 break;
             default:
-                printf("Failed to get "DUMMY_CYCLES_PARAM" attribute: %s (%s)",\
+                printf("Failed to get " DUMMY_CYCLES_PARAM " attribute: %s (%s)",\
                         errno == 0 ? "" : strerror(errno), mf_err2str(attr.mf_get_dummy_cycles_rc));
                 return FLINT_FAILED;
         }
@@ -3251,7 +3251,7 @@ FlintStatus HwSubCommand::printAttr(cons
             write_protect_info_t protect_info = attr.protect_info_array[bank];
             rc = attr.mf_get_write_protect_rc_array[bank];
             if (rc == MFE_OK) {
-                printf("  "FLASH_NAME"%d."WRITE_PROTECT"   ", bank);
+                printf("  " FLASH_NAME "%d." WRITE_PROTECT "   ", bank);
                 if (protect_info.sectors_num != 0) {
                     printf("%s,", (protect_info.is_bottom ? WP_BOTTOM_STR : WP_TOP_STR));
                     printf("%d-", protect_info.sectors_num);
@@ -3330,7 +3330,7 @@ EraseSubCommand:: EraseSubCommand()
     _flagShort = "e";
     _param = "<addr>";
     _paramExp = "addr - address of word in sector that you want to erase.";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" erase 0x10000";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " erase 0x10000";
     _v = Wtv_Dev;
     _maxCmdParamNum = 1;
     _minCmdParamNum = 1;
@@ -3376,7 +3376,7 @@ RwSubCommand:: RwSubCommand() {
     _flagShort = "";
     _param = "<addr>";
     _paramExp = "addr - address of word to read";
-    _example = "flint -d "MST_DEV_EXAMPLE1" rw 0x20";
+    _example = "flint -d " MST_DEV_EXAMPLE1 " rw 0x20";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 1;
     _minCmdParamNum = 1;
@@ -3427,7 +3427,7 @@ WwSubCommand:: WwSubCommand()
     _param = "<addr> <data>";
     _paramExp = "addr - address of word\n"
                 INDENTEX"data - value of word";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" ww 0x10008 0x5a445a44";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " ww 0x10008 0x5a445a44";
     _v = Wtv_Dev;
     _maxCmdParamNum = 2;
     _minCmdParamNum = 2;
@@ -3489,7 +3489,7 @@ WwneSubCommand:: WwneSubCommand()
     _param = "<addr> <data>";
     _paramExp = "addr - address of word\n"
                 INDENTEX"data - value of word";
-    _example = "flint -d "MST_DEV_EXAMPLE1" wwne 0x10008 0x5a445a44";
+    _example = "flint -d " MST_DEV_EXAMPLE1 " wwne 0x10008 0x5a445a44";
     _v = Wtv_Dev;
     _maxCmdParamNum = 2;
     _minCmdParamNum = 2;
@@ -3548,7 +3548,7 @@ WbSubCommand:: WbSubCommand() {
     _paramExp = "data-file - file that contains the data to be written\n"
                 INDENTEX"addr - address to write the block to\n";
 
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" wb myData.bin 0x0";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " wb myData.bin 0x0";
     _v = Wtv_Dev;
     _maxCmdParamNum = 2;
     _minCmdParamNum = 2;
@@ -3614,7 +3614,7 @@ WbneSubCommand:: WbneSubCommand() {
     _paramExp = "addr - address of block\n"
                 INDENTEX"size - size of data to write in bytes\n"
                 INDENTEX"data - data to write - space seperated dwords";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" wbne 0x10000 12 0x30000 0x76800 0x5a445a44";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " wbne 0x10000 12 0x30000 0x76800 0x5a445a44";
     _v = Wtv_Dev;
     _minCmdParamNum = 3;
     _cmdType = SC_Wbne;
@@ -3701,7 +3701,7 @@ RbSubCommand:: RbSubCommand()
                 INDENTEX"size - size of data to read in bytes\n"
                 INDENTEX"file - filename to write the block (raw binary). If not given, the data\n"
                 INDENTEX"is printed to screen";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" rb 0x10000 100 file.bin";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " rb 0x10000 100 file.bin";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 3;
     _minCmdParamNum = 2;
@@ -3792,7 +3792,7 @@ ClearSemSubCommand:: ClearSemSubCommand(
     _flagShort = "";
     _param = "";
     _paramExp = "";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" -clear_semaphore";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " -clear_semaphore";
     _v = Wtv_Dev;
     _maxCmdParamNum = 0;
     _cmdType = SC_Clear_Sem;
@@ -3863,7 +3863,7 @@ ResetCfgSubCommand:: ResetCfgSubCommand(
     _flagShort = "r";
     _param = "";
     _paramExp = "";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" reset_cfg";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " reset_cfg";
     _v = Wtv_Dev;
     _maxCmdParamNum = 0;
     _cmdType = SC_ResetCfg;
@@ -3912,7 +3912,7 @@ FiSubCommand:: FiSubCommand()
     _flagShort = "";
     _param = "";
     _paramExp = "";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" fi";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " fi";
     _v = Wtv_Dev;
     _maxCmdParamNum = 0;
     _cmdType = SC_Fix_Img;
@@ -3955,7 +3955,7 @@ CheckSumSubCommand:: CheckSumSubCommand(
     _flagShort = "cs";
     _param = "";
     _paramExp = "";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" checksum";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " checksum";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 0;
     _cmdType = SC_Check_Sum;
@@ -4046,10 +4046,10 @@ TimeStampSubCommand:: TimeStampSubComman
         INDENTEX"                               timestamp should comply with ISO 8601 format and provided with UTC timezone: YYYY-MM-DDThh:mm:ssZ\n"
                 INDENTEX"query : query device/image to view the timestamp\n"
                 INDENTEX"reset : reset the timestamp, remove the timestamp from device/image.\n";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE4" ts set 2015-12-24T14:52:33Z 14.12.1100\n"
-      INDENTEX FLINT_NAME" -d "MST_DEV_EXAMPLE4" ts reset\n"
-      INDENTEX FLINT_NAME" -i ./fw4115.bin ts set\n"
-      INDENTEX FLINT_NAME" -i ./fw4115.bin ts query";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE4 " ts set 2015-12-24T14:52:33Z 14.12.1100\n"
+      INDENTEX FLINT_NAME " -d " MST_DEV_EXAMPLE4" ts reset\n"
+      INDENTEX FLINT_NAME " -i ./fw4115.bin ts set\n"
+      INDENTEX FLINT_NAME " -i ./fw4115.bin ts query";
     _v = Wtv_Dev_Or_Img;
     _maxCmdParamNum = 3;
     _minCmdParamNum = 1;
@@ -4321,7 +4321,7 @@ CacheImageSubCommand:: CacheImageSubComm
     _flagShort = "ci";
     _param = "";
     _paramExp = "";
-    _example = FLINT_NAME" -d "MST_DEV_EXAMPLE1" cache_image";
+    _example = FLINT_NAME " -d " MST_DEV_EXAMPLE1 " cache_image";
     _v = Wtv_Dev;
     _maxCmdParamNum = 0;
     _minCmdParamNum = 0;
diff -rupN mstflint-4.4.0/mlxconfig/mlxcfg_parser.cpp mstflint-4.4.0_c++11Compatibility/mlxconfig/mlxcfg_parser.cpp
--- mstflint-4.4.0/mlxconfig/mlxcfg_parser.cpp	2016-05-24 08:52:17.000000000 -0400
+++ mstflint-4.4.0_c++11Compatibility/mlxconfig/mlxcfg_parser.cpp	2016-06-10 00:35:02.972529223 -0400
@@ -106,10 +106,10 @@ void MlxCfg::printHelp()
     // print usage examples
     printf("\n");
     printf(IDENT"Examples:\n");
-    printf(IDENT2"%-35s: %s\n", "To query current configuration", MLXCFG_NAME" -d "MST_DEV_EXAMPLE" query");
-    printf(IDENT2"%-35s: %s\n", "To set configuration", MLXCFG_NAME" -d "MST_DEV_EXAMPLE" set SRIOV_EN=1 NUM_OF_VFS=16 WOL_MAGIC_EN_P1=1");
-    printf(IDENT2"%-35s: %s\n", "To set raw configuration", MLXCFG_NAME" -d "MST_DEV_EXAMPLE2" -f conf_file set_raw");
-    printf(IDENT2"%-35s: %s\n", "To reset configuration", MLXCFG_NAME" -d "MST_DEV_EXAMPLE" reset");
+    printf(IDENT2"%-35s: %s\n", "To query current configuration", MLXCFG_NAME " -d " MST_DEV_EXAMPLE " query");
+    printf(IDENT2"%-35s: %s\n", "To set configuration", MLXCFG_NAME " -d " MST_DEV_EXAMPLE " set SRIOV_EN=1 NUM_OF_VFS=16 WOL_MAGIC_EN_P1=1");
+    printf(IDENT2"%-35s: %s\n", "To set raw configuration", MLXCFG_NAME " -d " MST_DEV_EXAMPLE2 " -f conf_file set_raw");
+    printf(IDENT2"%-35s: %s\n", "To reset configuration", MLXCFG_NAME " -d " MST_DEV_EXAMPLE " reset");
     printf("\n");
     printf(IDENT"Supported devices:\n");
     printf(IDENT2"4th Generation devices: ConnectX3, ConnectX3-Pro (FW 2.31.5000 and above).\n");
@@ -125,7 +125,7 @@ void MlxCfg::printVersion()
 }
 
 void MlxCfg::printUsage() {
-    printf("\n"IDENT"Usage:\n"
+    printf("\n" IDENT "Usage:\n"
            IDENT2    MLXCFG_NAME " [-d <%s> ] [-y|-e] <s[et] <parameters to set>|q[uery]|r[eset]|[ -f <filename> backup|set_raw]>\n\n", DEVICE_NAME);
 }
 
@@ -273,11 +273,11 @@ mlxCfgStatus MlxCfg::parseArgs(int argc,
     }
     i++;
     if (_mlxParams.cmd == Mc_UnknownCmd) {
-        return err(true, "No command found. For more information please run "MLXCFG_NAME" -h|--help.");
+        return err(true, "No command found. For more information please run " MLXCFG_NAME " -h|--help.");
     }
     // we parsed input until the set/query/reset cmd
     if (i == argc && _mlxParams.cmd == Mc_Set) {
-        return err(true, "missing configuration arguments. For more information please run "MLXCFG_NAME" -h|--help.");
+        return err(true, "missing configuration arguments. For more information please run " MLXCFG_NAME " -h|--help.");
     }
     if (i != argc && (_mlxParams.cmd == Mc_Reset || _mlxParams.cmd == Mc_Query)) {
         return err(true, "%s command expects no argument but %d argument recieved", (_mlxParams.cmd == Mc_Reset) ? "reset" : "query", argc -i);
@@ -491,8 +491,8 @@ MlxCfgInfo MlxCfgAllInfo::createPciSetti
     params[Mcp_PF_Log_Bar_Size] = MlxCfgParamParser(Mcp_PF_Log_Bar_Size, "PF_LOG_BAR_SIZE", "example: for 8Mb bar size set PF_LOG_BAR_SIZE=3 (only "  FIFTH_GENERATION_LIST ")", "base_2_log_in_mb");
     params[Mcp_VF_Log_Bar_Size] = MlxCfgParamParser(Mcp_VF_Log_Bar_Size, "VF_LOG_BAR_SIZE", "example: for 8Mb bar size set VF_LOG_BAR_SIZE=3 (only "  FIFTH_GENERATION_LIST ")", "base_2_log_in_mb");
     params[Mcp_Num_Of_Vfs] = MlxCfgParamParser(Mcp_Num_Of_Vfs, "NUM_OF_VFS", "desired amount of virtual functions", "NUM");
-    params[Mcp_Num_Pf_Msix] = MlxCfgParamParser(Mcp_Num_Pf_Msix, "NUM_PF_MSIX", "Number of MSI-X vectors and EQs per PF (only "FIFTH_GENERATION_LIST")", "NUM");
-    params[Mcp_Num_Vf_Msix] = MlxCfgParamParser(Mcp_Num_Vf_Msix, "NUM_VF_MSIX", "Number of MSI-X vectors and EQs per VF (only "FIFTH_GENERATION_LIST")", "NUM");
+    params[Mcp_Num_Pf_Msix] = MlxCfgParamParser(Mcp_Num_Pf_Msix, "NUM_PF_MSIX", "Number of MSI-X vectors and EQs per PF (only " FIFTH_GENERATION_LIST ")", "NUM");
+    params[Mcp_Num_Vf_Msix] = MlxCfgParamParser(Mcp_Num_Vf_Msix, "NUM_VF_MSIX", "Number of MSI-X vectors and EQs per VF (only " FIFTH_GENERATION_LIST ")", "NUM");
     return MlxCfgInfo("PCI Settings", "", params);
 }
 
diff -rupN mstflint-4.4.0/mlxfwops/lib/flint_io.cpp mstflint-4.4.0_c++11Compatibility/mlxfwops/lib/flint_io.cpp
--- mstflint-4.4.0/mlxfwops/lib/flint_io.cpp	2016-05-24 08:52:17.000000000 -0400
+++ mstflint-4.4.0_c++11Compatibility/mlxfwops/lib/flint_io.cpp	2016-06-10 00:40:55.472506579 -0400
@@ -751,7 +751,7 @@ const char* Flash::getFlashType() {
     } else if (!strcmp(param_in, second_op)) {\
         out = 0;\
     } else {\
-        return errmsg("bad argument (%s) it can be "first_op" or " second_op"", param_in);\
+        return errmsg("bad argument (%s) it can be " first_op " or " second_op "", param_in);\
     }\
 }
 bool  Flash::set_attr(char *param_name, char *param_val_str)
@@ -763,11 +763,11 @@ bool  Flash::set_attr(char *param_name,
         u_int8_t quad_en_val;
         quad_en_val = strtoul(param_val_str, &endp, 0);
         if (*endp != '\0' || quad_en_val > 1) {
-            return errmsg("Bad "QUAD_EN_PARAM" value (%s), it can be 0 or 1\n", param_val_str);
+            return errmsg("Bad " QUAD_EN_PARAM " value (%s), it can be 0 or 1\n", param_val_str);
         }
         rc = mf_set_quad_en(_mfl, quad_en_val);
         if (rc != MFE_OK) {
-            return errmsg("Setting "QUAD_EN_PARAM" failed: (%s)", mf_err2str(rc));
+            return errmsg("Setting " QUAD_EN_PARAM " failed: (%s)", mf_err2str(rc));
         }
     } else if (!strcmp(param_name, DUMMY_CYCLES_PARAM)) {
         char* endp;
@@ -775,11 +775,11 @@ bool  Flash::set_attr(char *param_name,
         dummy_cycles_val = strtoul(param_val_str, &endp, 0);
         if (*endp != '\0' || dummy_cycles_val < 1 || dummy_cycles_val > 15) {
         	// value is actually [0.15] but val=0 and val=15 indicate default state (thus they are the same so no need for both values to be accepted)
-            return errmsg("Bad "DUMMY_CYCLES_PARAM" value (%s), it can be [1..15]\n", param_val_str);
+            return errmsg("Bad " DUMMY_CYCLES_PARAM " value (%s), it can be [1..15]\n", param_val_str);
         }
         rc = mf_set_dummy_cycles(_mfl, dummy_cycles_val);
         if (rc != MFE_OK) {
-            return errmsg("Setting "DUMMY_CYCLES_PARAM" failed: (%s)", mf_err2str(rc));
+            return errmsg("Setting " DUMMY_CYCLES_PARAM " failed: (%s)", mf_err2str(rc));
         }
     } else if (strstr(param_name, FLASH_NAME) == param_name) {
         char *flash_param, *param_str, *endp, *bank_num_str;
@@ -801,7 +801,7 @@ bool  Flash::set_attr(char *param_name,
                 num_str = strtok((char*)NULL, "-");
                 sec = strtok((char*)NULL, "");
                 if (tb == NULL || num_str == NULL || sec == NULL) {
-                    return errmsg("missing parameters for setting the "WRITE_PROTECT" attribute, see help for more info.");
+                    return errmsg("missing parameters for setting the " WRITE_PROTECT " attribute, see help for more info.");
                 }
                 GET_IN_PARAM(tb, protect_info.is_bottom, WP_BOTTOM_STR, WP_TOP_STR);
                 GET_IN_PARAM(sec, protect_info.is_subsector, WP_SUBSEC_STR, WP_SEC_STR);
@@ -813,7 +813,7 @@ bool  Flash::set_attr(char *param_name,
            }
             rc = mf_set_write_protect(_mfl, bank_num, &protect_info);
             if (rc != MFE_OK) {
-                return errmsg("Setting "WRITE_PROTECT" failed: (%s)", mf_err2str(rc));
+                return errmsg("Setting " WRITE_PROTECT " failed: (%s)", mf_err2str(rc));
             }
         } else {
             return errmsg("Unknown attribute %s.%s", flash_param, param_str);
diff -rupN mstflint-4.4.0/mlxfwops/lib/fs3_ops.cpp mstflint-4.4.0_c++11Compatibility/mlxfwops/lib/fs3_ops.cpp
--- mstflint-4.4.0/mlxfwops/lib/fs3_ops.cpp	2016-05-24 08:52:17.000000000 -0400
+++ mstflint-4.4.0_c++11Compatibility/mlxfwops/lib/fs3_ops.cpp	2016-06-10 00:37:16.961145131 -0400
@@ -482,7 +482,7 @@ bool Fs3Operations::VerifyTOC(u_int32_t
 
     if (!mfg_exists) {
         _badDevDataSections = true;
-        return errmsg(MLXFW_NO_MFG_ERR, "No \""MFG_INFO"\" info section.");
+        return errmsg(MLXFW_NO_MFG_ERR, "No \"" MFG_INFO "\" info section.");
     }
     return ret_val;
 }
