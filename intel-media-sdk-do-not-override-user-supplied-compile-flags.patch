From 1c6187307a0ac20f3f10295f3b770a56208e3b88 Mon Sep 17 00:00:00 2001
From: Dmitry Rogozhkin <dmitry.v.rogozhkin@intel.com>
Date: Thu, 29 Mar 2018 04:42:24 -0700
Subject: [PATCH] Do not override user-supplied compile flags

This change removes overriding of user-supplied compiler flags.
MediaSDK default Release/Debug flags moved to the build_mfx.pl script.
If user wants some customization he should invoke cmake directly like:
  mkdir build && cd build
  cmake -DCMAKE_C_FLAGS_RELEASE:STRING="-O2 -fstack-protector-strong" ..

Issue: #94

Signed-off-by: Dmitry Rogozhkin <dmitry.v.rogozhkin@intel.com>
---
 api/opensource/mfx_dispatch/CMakeLists.txt     |  6 +++---
 builder/FindGlobals.cmake                      | 14 ++++++++------
 contrib/SafeStringStaticLibrary/CMakeLists.txt |  6 +++---
 tools/builder/build_mfx.pl                     | 10 ++++++++++
 4 files changed, 24 insertions(+), 12 deletions(-)

diff --git a/api/opensource/mfx_dispatch/CMakeLists.txt b/api/opensource/mfx_dispatch/CMakeLists.txt
index 0cad961..17d23e5 100644
--- a/api/opensource/mfx_dispatch/CMakeLists.txt
+++ b/api/opensource/mfx_dispatch/CMakeLists.txt
@@ -85,10 +85,10 @@ else( )
   endif( )
 
   set(no_warnings "-Wno-unknown-pragmas -Wno-unused")
+  set(warnings "-Wall -Wformat -Wformat-security")
 
-  set(CMAKE_CXX_FLAGS "-pipe -fPIC -std=c++11")
-  set(CMAKE_CXX_FLAGS_DEBUG   "-O0 -Wall ${no_warnings} -Wformat -Wformat-security -g -D_DEBUG")
-  set(CMAKE_CXX_FLAGS_RELEASE "-O2 -D_FORTIFY_SOURCE=2 -fstack-protector -Wall ${no_warnings} -Wformat -Wformat-security  -DNDEBUG")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pipe -fPIC -std=c++11 ${warnings} ${no_warnings}")
+  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG")
 
   if (DEFINED CMAKE_FIND_ROOT_PATH)
     append("--sysroot=${CMAKE_FIND_ROOT_PATH} " LINK_FLAGS)
diff --git a/builder/FindGlobals.cmake b/builder/FindGlobals.cmake
index 9a86edd..05f190e 100644
--- a/builder/FindGlobals.cmake
+++ b/builder/FindGlobals.cmake
@@ -93,15 +93,17 @@ if( Linux OR Darwin )
 
   set(warnings "-Wall -Wformat -Wformat-security -Wnon-virtual-dtor")
 
-  set(CMAKE_C_FLAGS   "-pipe -fPIC ${warnings} ${no_warnings}")
-  set(CMAKE_CXX_FLAGS "-pipe -fPIC ${warnings} ${no_warnings}")
+  set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -pipe -fPIC ${warnings} ${no_warnings}")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pipe -fPIC ${warnings} ${no_warnings}")
   append("-fPIE -pie" CMAKE_EXEC_LINKER_FLAGS)
 
   # CACHE + FORCE should be used only here to make sure that this parameters applied globally
-  set(CMAKE_C_FLAGS_DEBUG     "-O0 -g -D_DEBUG" CACHE STRING "" FORCE)
-  set(CMAKE_C_FLAGS_RELEASE   "-O2 -D_FORTIFY_SOURCE=2 -fstack-protector -DNDEBUG"    CACHE STRING "" FORCE)
-  set(CMAKE_CXX_FLAGS_DEBUG   "-O0 -g -D_DEBUG" CACHE STRING "" FORCE)
-  set(CMAKE_CXX_FLAGS_RELEASE "-O2 -D_FORTIFY_SOURCE=2 -fstack-protector -DNDEBUG"    CACHE STRING "" FORCE)
+  # End user is responsible to adjust configuration parameters further if needed. Here
+  # we se only minimal parameters which are really required for the proper configuration build.
+  set(CMAKE_C_FLAGS_DEBUG     "${CMAKE_C_FLAGS_DEBUG} -D_DEBUG"   CACHE STRING "" FORCE)
+  set(CMAKE_C_FLAGS_RELEASE   "${CMAKE_C_FLAGS_RELEASE}"          CACHE STRING "" FORCE)
+  set(CMAKE_CXX_FLAGS_DEBUG   "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG" CACHE STRING "" FORCE)
+  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}"        CACHE STRING "" FORCE)
 
   if ( Darwin )
     if (CMAKE_C_COMPILER MATCHES clang)
diff --git a/contrib/SafeStringStaticLibrary/CMakeLists.txt b/contrib/SafeStringStaticLibrary/CMakeLists.txt
index 622ece8..a1967c5 100644
--- a/contrib/SafeStringStaticLibrary/CMakeLists.txt
+++ b/contrib/SafeStringStaticLibrary/CMakeLists.txt
@@ -31,10 +31,10 @@ else( )
   endif( )
 
   set(no_warnings "-Wno-unknown-pragmas -Wno-unused")
+  set(warnings "-Wall -Wformat -Wformat-security")
   
-  set(CMAKE_CXX_FLAGS "-pipe -fPIC -std=c++11")
-  set(CMAKE_CXX_FLAGS_DEBUG   "-O0 -Wall ${no_warnings} -Wformat -Wformat-security -g -D_DEBUG")
-  set(CMAKE_CXX_FLAGS_RELEASE "-O2 -D_FORTIFY_SOURCE=2 -fstack-protector -Wall ${no_warnings} -Wformat -Wformat-security -DNDEBUG")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pipe -fPIC -std=c++11 ${warnings} ${no_warnings}")
+  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG")
 
   if (DEFINED CMAKE_FIND_ROOT_PATH)
     append("--sysroot=${CMAKE_FIND_ROOT_PATH} " LINK_FLAGS)
diff --git a/tools/builder/build_mfx.pl b/tools/builder/build_mfx.pl
index 73bca78..0caa869 100644
--- a/tools/builder/build_mfx.pl
+++ b/tools/builder/build_mfx.pl
@@ -139,6 +139,16 @@ sub get_cmake_gen_cmd {
 
     push @cmake_cmd_gen, '-DWARNING_FLAGS="-Wall -Werror"' if not $no_warn_as_error;
 
+    if (lc($config{'config'}) eq "release") {
+        my $compile_flags = "-O2 -D_FORTIFY_SOURCE=2 -fstack-protector";
+        push @cmake_cmd_gen, "-DCMAKE_C_FLAGS_RELEASE=\"$compile_flags\"";
+        push @cmake_cmd_gen, "-DCMAKE_CXX_FLAGS_RELEASE=\"$compile_flags\"";
+    } else {
+        my $compile_flags = "-O0 -g";
+        push @cmake_cmd_gen, "-DCMAKE_C_FLAGS_DEBUG=\"$compile_flags\"";
+        push @cmake_cmd_gen, "-DCMAKE_CXX_FLAGS_DEBUG=\"$compile_flags\"";
+    }
+
     # This is the main different between "make" and "eclipse"" generators.
     # In case of "Eclipse" out-of-source build you have to point cmake
     # (1): on the current $MFX_HOME (source folder with main CMakeLists.txt)
