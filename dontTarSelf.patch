--- viewer_manifest.py	2019-07-21 07:52:52.967686159 +0200
+++ viewer_manifest.py.new	2019-07-21 08:17:50.159560674 +0200
@@ -2107,26 +2107,6 @@
             self.run_command(['find', self.get_dst_prefix(),
                               '-type', 'f', '-perm', old,
                               '-exec', 'chmod', new, '{}', ';'])
-        self.package_file = installer_name + '.tar.xz'
-
-        # temporarily move directory tree so that it has the right
-        # name in the tarfile
-        realname = self.get_dst_prefix()
-        tempname = self.build_path_of(installer_name)
-        self.run_command(["mv", realname, tempname])
-        try:
-            # only create tarball if it's a release build.
-            if self.args['buildtype'].lower() == 'release':
-                # --numeric-owner hides the username of the builder for
-                # security etc.
-                self.run_command(['tar', '-C', self.get_build_prefix(),
-                                  '--numeric-owner', self.fs_linux_tar_excludes(), '-caf',
-                                 tempname + '.tar.xz', installer_name])
-            else:
-                print "Skipping %s.tar.xz for non-Release build (%s)" % \
-                      (installer_name, self.args['buildtype'])
-        finally:
-            self.run_command(["mv", tempname, realname])
 
     def strip_binaries(self):
         if self.args['buildtype'].lower() == 'release' and self.is_packaging_viewer():
