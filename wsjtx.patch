diff -ur /CMakeLists.txt /CMakeLists.txt
--- /CMakeLists.txt	2018-05-31 02:29:47.000000000 +0200
+++ /CMakeLists.txt	2018-06-03 09:34:15.109877528 +0200
@@ -1343,7 +1343,8 @@
       )
   endif ()
 endif ()
-qt5_use_modules (wsjtx SerialPort) # not sure why the interface link library syntax above doesn't work
+find_package (Qt5SerialPort)
+target_link_libraries (wsjtx Qt5::SerialPort)
 
 # make a library for WSJT-X UDP servers
 # add_library (wsjtx_udp SHARED ${UDP_library_CXXSRCS})
@@ -1364,7 +1365,8 @@
   )
 target_compile_definitions (wsjtx_udp-static PUBLIC UDP_STATIC_DEFINE)
 #qt5_use_modules (wsjtx_udp Network)
-qt5_use_modules (wsjtx_udp-static Network Gui)
+target_link_libraries (wsjtx_udp-static Qt5::Network Qt5::Gui)
+
 generate_export_header (wsjtx_udp-static BASE_NAME udp)
 
 add_executable (udp_daemon UDPExamples/UDPDaemon.cpp UDPExamples/udp_daemon.rc ${WSJTX_ICON_FILE})

--- a/qt_helpers.hpp    2019-11-26 09:22:32.000000000 -0500
+++ b/qt_helpers.hpp    2020-02-03 11:30:07.488214336 -0500
@@ -83,6 +83,7 @@
   // std::hash<> specialization for QString based on the dbj2
   // algorithm <http://www.cse.yorku.ca/~oz/hash.html> because qHash()
   // is poor on 64-bit platforms due to being a 32-bit hash value
+  #if QT_VERSION < QT_VERSION_CHECK(5, 14, 0)
   template<>
   struct hash<QString>
   {
@@ -96,6 +97,7 @@
       return hash;
     }
   };
+#endif
 }

 // Register some useful Qt types with QMetaType
