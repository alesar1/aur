--- src/bin/sage-env.orig	2015-01-06 10:46:04.469687605 +0100
+++ src/bin/sage-env	2015-01-06 10:49:59.547762019 +0100
@@ -163,35 +163,9 @@
 export SAGE_ENV_SOURCED=$SAGE_ENV_VERSION
 
 export SAGE_ROOT="$NEW_SAGE_ROOT"
+export SAGE_LOCAL='/usr'
+export SAGE_SCRIPTS_DIR='/usr/bin'
 
-
-# sage-env must know where the Sage's script files are.
-# Note that SAGE_SCRIPTS_DIR is only used here, so it does not need to
-# be exported.
-if [ -z "$SAGE_SCRIPTS_DIR" ]; then
-    if [ -f "$SAGE_ROOT/src/bin/sage-env-config" ]; then
-        # Prefer src/bin/sage-env-config because that's directly
-        # generated by configure (see Trac #27422)
-        SAGE_SCRIPTS_DIR="$SAGE_ROOT/src/bin"
-    elif [ -n "$SAGE_LOCAL" ] && [ -f "$SAGE_LOCAL/bin/sage-env-config" ]; then
-        SAGE_SCRIPTS_DIR="$SAGE_LOCAL/bin"
-    else
-        echo >&2 "Error: You must set either the SAGE_LOCAL or SAGE_SCRIPTS_DIR environment variable to run this"
-        return 1
-    fi
-elif [ ! -f "$SAGE_SCRIPTS_DIR/sage-env-config" ]; then
-    echo >&2 "Error: SAGE_SCRIPTS_DIR is set to a bad value:"
-    echo >&2 "SAGE_SCRIPTS_DIR=$SAGE_SCRIPTS_DIR"
-    echo >&2 "You must correct it or erase it and rerun this script"
-    return 1
-fi
-
-# Set environment variables (like SAGE_LOCAL) depending on ./configure
-. "$SAGE_SCRIPTS_DIR/sage-env-config"
-if [ $? -ne 0 ]; then
-    echo >&2 "Error: failed to source $SAGE_SCRIPTS_DIR/sage-env-config"
-    return 1
-fi
 
 # The compilers are set in order of priority by
 # 1) environment variables
@@ -287,8 +287,8 @@
 export SAGE_SPKG_INST="$SAGE_LOCAL/var/lib/sage/installed"
 export SAGE_SPKG_SCRIPTS="$SAGE_LOCAL/var/lib/sage/scripts"
 export SAGE_LOGS="$SAGE_ROOT/logs/pkgs"
-export SAGE_SRC="$SAGE_ROOT/src"
-export SAGE_DOC_SRC="$SAGE_SRC/doc"
+export SAGE_SRC="$SAGE_LOCAL/lib/python2.7/site-packages"
+export SAGE_DOC_SRC="$SAGE_SHARE/doc/sage"
 export SAGE_DOC="$SAGE_SHARE/doc/sage"
 
 if [ -z "${SAGE_ORIG_PATH_SET}" ]; then
@@ -400,28 +400,8 @@
     export SAGE_STARTUP_FILE
 fi
 
+export LIBMTX="$DOT_SAGE/meataxe"
+[[ -d $LIBMTX ]] || mkdir -p $LIBMTX # Create meataxe data dir
-if [ "$PYTHON_EGG_CACHE" = "" ]; then
-    PYTHON_EGG_CACHE="$DOT_SAGE/.python-eggs"
-    export PYTHON_EGG_CACHE
-fi
-
-# Set PYTHONUSERBASE to avoid picking up non-Sage versions of
-# Matplotlib, numpy, etc. See http://trac.sagemath.org/ticket/19612.
-#
-# For more history (it used to be PYTHONNOUSERSITE=yes which killed
-# the ability to do "sage -pip install PACKAGE --user"), see
-# http://trac.sagemath.org/ticket/14243 and
-# http://trac.sagemath.org/ticket/18955.
-
-if [ "$PYTHONUSERBASE" = "" ]; then
-    PYTHONUSERBASE="$DOT_SAGE/local"
-    export PYTHONUSERBASE
-fi
-
-if [ -n "$PYTHONHOME" ]; then
-    >&2 echo "Warning: PYTHONHOME must not be set when running Sage, clearing env..."
-    unset PYTHONHOME
-fi
 
 LDFLAGS="-L$SAGE_LOCAL/lib -Wl,-rpath,$SAGE_LOCAL/lib $LDFLAGS"
 export LDFLAGS
@@ -486,8 +486,6 @@
     fi
 fi

-export MAXIMA_PREFIX="$SAGE_LOCAL"
-export MAXIMA_USERDIR="$DOT_SAGE/maxima"
 
 PERL5LIB="$SAGE_LOCAL/lib/perl5:$PERL5LIB" && export PERL5LIB
 
@@ -598,9 +598,6 @@
     LD_LIBRARY_PATH="$SAGE_LOCAL/bin:$LD_LIBRARY_PATH" && export LD_LIBRARY_PATH
 fi
 
-# See trac 7186 -- this is needed if ecl is moved
-ECLDIR="$SAGE_LOCAL/lib/ecl/" && export ECLDIR
-
 # Handle parallel building/testing/...
 # See Trac Ticket #12016
 # First, figure out the right values for SAGE_NUM_THREADS (default
