Updates default.jhbuildrc with newer version in Git repos, allowing 3.24
as default value.

Age	Commit message (Expand)	Author	Files	Lines
2016-05-31	Default to builddir != srcdir	Emmanuele Bassi	1	-1/+1
2016-05-04	defaults: switch to 3.22	Frédéric Péters	1	-1/+1
2016-02-10	Make exception raising/handling Python3-compatible	Boris Egorov	1	-1/+1
2015-11-10	install-check: Drop as no longer useful and potentially dangerous	Emanuele Aina	1	-7/+2
2015-10-21	default: switch to build 3.20	Frédéric Péters	1	-1/+1
2015-07-14	Add --exit-on-error option	Michael Catanzaro	1	-0/+1
2015-05-27	jhbuild: Set default tarballdir to ~/.cache/jhbuild/downloads	Philip Withnall	1	-1/+4
2015-04-19	add 3.18	Frédéric Péters	1	-1/+1

--- a/jhbuild/defaults.jhbuildrc	2015-03-18 18:09:40.000000000 -0300
+++ a/jhbuild/defaults.jhbuildrc	2016-06-27 19:33:29.610052623 -0300
@@ -11,7 +11,7 @@
 modulesets_dir = os.path.join(SRCDIR, 'modulesets')
 
 # what modules to build?
-moduleset = 'gnome-apps-3.16'
+moduleset = 'gnome-apps-3.24'
 modules = [ 'meta-gnome-core' ]
 
 # policy for modules to build, options are:
@@ -49,9 +49,12 @@
 else:
     checkoutroot = '~/jhbuild/checkout/'
 
-tarballdir = '~/jhbuild/downloads/'
+xdg_cache_home = os.environ.get('XDG_CACHE_HOME',
+                                os.path.join(os.path.expanduser('~'),
+                                             '.cache'))
+tarballdir = os.path.join(xdg_cache_home, 'jhbuild', 'downloads')
 
-buildroot = None     # if set, packages will be built with srcdir!=builddir
+buildroot = os.path.join(xdg_cache_home, 'jhbuild', 'build')
 
 # When using srcdir!=builddir builds, this key allows you to use a
 # different builddir name.  Some people like this because it reduces
@@ -65,7 +68,7 @@
 try:
     import multiprocessing
     jobs = multiprocessing.cpu_count() + 1
-except ImportError, _e:
+except ImportError as _e:
     try:
         jobs = os.sysconf('SC_NPROCESSORS_ONLN') + 1
     except (OSError, AttributeError, ValueError):
@@ -77,13 +80,8 @@
 makeargs = ''
 cflags = ''
 
-# a alternative install program to use; the included install-check
-# program won't update timestamps if the header hasn't changed
-installprog = os.path.join(os.environ['HOME'], '.local/bin', 'install-check')
-if not os.path.exists(installprog):
-    installprog = '/usr/bin/install-check'
-if not os.path.exists(installprog):
-    installprog = None
+# a alternative install program to use
+installprog = None
 
 # override cvs roots, branch tags, etc
 repos = {}
@@ -116,6 +114,7 @@
 makecheck_advisory = False # whether to pass over 'make check' failures
 
 interact      = True   # whether to interact with the user.
+exit_on_error = False  # whether to immediately exit when a build fails, most useful for noninteractive mode
 quiet_mode    = False  # whether to display running commands output
 progress_bar  = True   # whether to display a progress bar when running in quiet mode
 
