--- a/src/amd/llvm/ac_llvm_helper.cpp
+++ b/src/amd/llvm/ac_llvm_helper.cpp
@@ -60,7 +60,7 @@
    llvm::Argument *A = llvm::unwrap<llvm::Argument>(arg);
    llvm::AttributeList AS = A->getParent()->getAttributes();
    unsigned ArgNo = A->getArgNo();
-   return AS.hasAttribute(ArgNo + 1, llvm::Attribute::InReg);
+   return AS.hasParamAttr(ArgNo, llvm::Attribute::InReg);
 }


--- a/src/gallium/frontends/clover/llvm/codegen/common.cpp
+++ b/src/gallium/frontends/clover/llvm/codegen/common.cpp
@@ -233,8 +233,8 @@ namespace {
                }

             } else {
-               const bool needs_sign_ext = f.getAttributes().hasAttribute(
-                  arg.getArgNo() + 1, ::llvm::Attribute::SExt);
+               const bool needs_sign_ext = f.getAttributes().hasParamAttr(
+                  arg.getArgNo(), ::llvm::Attribute::SExt);

                args.emplace_back(module::argument::scalar, arg_api_size,
                                  target_size, target_align,
