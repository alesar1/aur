#!/usr/bin/env bash
set -euo pipefail

#TODO: Comment and document!

#Use settings from the configuration file first.
source '/etc/update-pacman-mirrorlist' || true

help='Usage: update-pacman-mirrorlist [OPTIONS]

Updates the pacman mirrorlist.

Options:
-b | --backup FILE	Back up old mirrorlist to FILE.
-l | --local FILE	Download new mirrorlist to FILE.
-r | --remote URL	Download new mirrorlist from URL.

Configuration files:
/etc/update-pacman-mirrorlist'

set +u
	#Prefer settings from the command line arguments.
	set +e
		options=$(getopt -o 'b:hl:r:' -l 'backup:,help,local:,remote:' -n 'update-pacman-mirrorlist' -- "$@")
		if [ "$?" != 0 ]; then
			echo "$help"
			exit 1
		fi
	set -e
	eval set -- "$options"
	while true; do
		case "$1" in
		-b | --backup ) backup_mirrorlist="$2"; shift 2 ;;
		-h | --help ) echo "$help"; exit ;;
		-l | --local ) local_mirrorlist="$2"; shift 2 ;;
		-r | --remote ) remote_mirrorlist="$2"; shift 2 ;;
		-- ) shift; break ;;
		* ) break ;;
		esac
	done

	#Fall back to defaults if the settings are not defined in the configuration file or command line arguments.
	if [ -z "$backup_mirrorlist" ]; then
		backup_mirrorlist='/etc/pacman.d/mirrorlist.backup'
	fi
	if [ -z "$local_mirrorlist" ]; then
		local_mirrorlist='/etc/pacman.d/mirrorlist'
	fi
	if [ -z "$remote_mirrorlist" ]; then
		remote_mirrorlist='https://www.archlinux.org/mirrorlist/?use_mirror_status=on&protocol=https'
	fi
set -u

temp_local_mirrorlist="$(mktemp)"
trap 'rm -f "$temp_local_mirrorlist"' EXIT

echo "Downloading new mirrorlist from $remote_mirrorlist to $local_mirrorlist."
curl -fLC - --retry 3 --retry-delay 3 "$remote_mirrorlist" -o "$temp_local_mirrorlist"

if grep -Eqv '^(#|\s+#|$|Server = )' "$temp_local_mirrorlist"; then
	echo 'The downloaded mirrorlist file contains an uncommented non-Server directive, so it might be invalid.' >&2
	exit 1
fi

if ! grep -q '^Server = ' "$temp_local_mirrorlist"; then
	if ! grep -q '^#Server = ' "$temp_local_mirrorlist"; then
		echo 'The downloaded mirrorlist file does not appear to contain any mirrors, so it might be invalid.' >&2
		exit 1
	fi
	sed '/^#Server = / s|#||' -i "$temp_local_mirrorlist"
fi

#TODO: These last commands are the only ones that need to run as root; privileges should be dropped until now.
if [ -e "$local_mirrorlist" ]; then
	echo "Backing up old mirrorlist from $local_mirrorlist to $backup_mirrorlist."
	cat "$local_mirrorlist" > "$backup_mirrorlist"
fi
cat "$temp_local_mirrorlist" > "$local_mirrorlist"
