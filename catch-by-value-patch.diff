diff --git a/libethereum/BlockChain.cpp b/libethereum/BlockChain.cpp
index 5c926b3f1..a652443ac 100644
--- a/libethereum/BlockChain.cpp
+++ b/libethereum/BlockChain.cpp
@@ -460,20 +460,20 @@ tuple<ImportRoute, bool, unsigned> BlockChain::sync(BlockQueue& _bq, OverlayDB c
                 cwarn << "ODD: Import queue contains already imported block";
                 continue;
             }
-            catch (dev::eth::UnknownParent)
+            catch (dev::eth::UnknownParent const&)
             {
                 cwarn << "ODD: Import queue contains block with unknown parent.";// << LogTag::Error << boost::current_exception_diagnostic_information();
                 // NOTE: don't reimport since the queue should guarantee everything in the right order.
                 // Can't continue - chain bad.
                 badBlocks.push_back(block.verified.info.hash());
             }
-            catch (dev::eth::FutureTime)
+            catch (dev::eth::FutureTime const&)
             {
                 cwarn << "ODD: Import queue contains a block with future time.";
                 this_thread::sleep_for(chrono::seconds(1));
                 continue;
             }
-            catch (dev::eth::TransientError)
+            catch (dev::eth::TransientError const&)
             {
                 this_thread::sleep_for(chrono::milliseconds(100));
                 continue;
diff --git a/test/tools/libtesteth/BlockChainHelper.cpp b/test/tools/libtesteth/BlockChainHelper.cpp
index 7e47a5c41..00c4bfb52 100644
--- a/test/tools/libtesteth/BlockChainHelper.cpp
+++ b/test/tools/libtesteth/BlockChainHelper.cpp
@@ -514,7 +514,7 @@ bool TestBlockChain::addBlock(TestBlock const& _block)
             m_blockChain.get()->import(_block.bytes(), m_genesisBlock.state().db());
             break;
         }
-        catch (FutureTime)
+        catch (FutureTime const&)
         {
             std::this_thread::sleep_for(std::chrono::milliseconds(100));
             break;
diff --git a/test/tools/libtesteth/ImportTest.cpp b/test/tools/libtesteth/ImportTest.cpp
index 5aad31020..ec668d077 100644
--- a/test/tools/libtesteth/ImportTest.cpp
+++ b/test/tools/libtesteth/ImportTest.cpp
@@ -430,7 +430,7 @@ void ImportTest::importTransaction (json_spirit::mObject const& _o, eth::Transac
 		{
 			o_tr = Transaction(transactionRLP.data(), CheckTransaction::Everything);
 		}
-		catch (InvalidSignature)
+		catch (InvalidSignature const&)
 		{
 			// create unsigned transaction
 			o_tr = _o.at("to").get_str().empty() ?
