caffe2-cpu-0.8.1
[PATCH] Fix compilation with GCC 7 in cpu-only builds

Backport of:
https://github.com/caffe2/caffe2/commit/8df7325be4075ba035a510850abd36c4cc155df7

Related topics:
https://github.com/caffe2/caffe2/issues/805
https://github.com/caffe2/caffe2/pull/1602

diff -Naurp a/caffe2/operators/recurrent_network_op.cc b/caffe2/operators/recurrent_network_op.cc
--- a/caffe2/operators/recurrent_network_op.cc	2017-08-08 17:57:43.000000000 +0000
+++ b/caffe2/operators/recurrent_network_op.cc	2018-04-21 14:59:44.153303284 +0000
@@ -1,6 +1,10 @@
-#include "recurrent_network_op.h"
+#include "caffe2/operators/recurrent_network_op.h"
 #include "caffe2/core/workspace.h"
 
+#ifndef CAFFE2_RNN_NO_TEXT_FORMAT
+#include <google/protobuf/text_format.h>
+#endif
+
 namespace caffe2 {
 CAFFE_KNOWN_TYPE(detail::ScratchWorkspaces);
 
diff -Naurp a/caffe2/operators/recurrent_network_op.h b/caffe2/operators/recurrent_network_op.h
--- a/caffe2/operators/recurrent_network_op.h	2017-08-08 17:57:43.000000000 +0000
+++ b/caffe2/operators/recurrent_network_op.h	2018-04-21 15:11:39.124669284 +0000
@@ -762,8 +762,8 @@ class AccumulateInputGradientOp : public
   USE_OPERATOR_CONTEXT_FUNCTIONS;
 
   bool RunOnDevice() override {
-    const auto t =
-        OperatorBase::Input<Tensor<CPUContext>>(0).template data<int32_t>()[0];
+    const auto& t0 = OperatorBase::Input<Tensor<CPUContext>>(0);
+    const auto t = t0.template data<int32_t>()[0];
     auto& og = Input(1);
     auto* g = Output(0);
 
diff -Naurp a/caffe2/queue/queue_ops.h b/caffe2/queue/queue_ops.h
--- a/caffe2/queue/queue_ops.h	2017-08-08 17:57:43.000000000 +0000
+++ b/caffe2/queue/queue_ops.h	2018-04-21 15:30:58.800800115 +0000
@@ -17,13 +17,10 @@ class CreateBlobsQueueOp final : public
         name(operator_def.output().Get(0)) {}
 
   bool RunOnDevice() override {
-    const auto capacity =
-        OperatorBase::template GetSingleArgument<int>("capacity", 1);
-    const auto numBlobs =
-        OperatorBase::template GetSingleArgument<int>("num_blobs", 1);
+    const auto capacity = GetSingleArgument("capacity", 1);
+    const auto numBlobs = GetSingleArgument("num_blobs", 1);
     const auto enforceUniqueName =
-        OperatorBase::template GetSingleArgument<int>(
-            "enforce_unique_name", false);
+        GetSingleArgument("enforce_unique_name", false);
     const auto fieldNames =
         OperatorBase::template GetRepeatedArgument<std::string>("field_names");
     CAFFE_ENFORCE_EQ(this->OutputSize(), 1);
