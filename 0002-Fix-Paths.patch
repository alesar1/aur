--- a/handlers/play.go
+++ b/handlers/play.go
@@ -20,6 +20,7 @@ const resultCookiePrefix = "earthwalker_lastResult_"
 type Play struct {
 	ChallengeStore       domain.ChallengeStore
 	ChallengeResultStore domain.ChallengeResultStore
+	Config               domain.Config
 }
 
 func (handler Play) ServeHTTP(w http.ResponseWriter, r *http.Request) {
@@ -67,7 +68,7 @@ func (handler Play) ServeHTTP(w http.ResponseWriter, r *http.Request) {
 	log.Println(challenge.Places[len(result.Guesses)].Location)
 	// TODO: FIXME: this fails catastrophically if the player has already
 	//              completed the challenge and tries to navigate back to /play
-	ServeLocation(challenge.Places[len(result.Guesses)].Location, w, r)
+	handler.ServeLocation(challenge.Places[len(result.Guesses)].Location, w, r)
 }
 
 func getChallengeID(r *http.Request) (string, error) {
@@ -92,7 +93,7 @@ func getResultID(r *http.Request, challengeID string) (string, error) {
 	return resultCookie.Value, nil
 }
 
-func modifyMainPage(target string, w http.ResponseWriter, r *http.Request) {
+func (handler Play) modifyMainPage(target string, w http.ResponseWriter, r *http.Request) {
 	res, err := http.Get(target)
 	if err != nil {
 		http.Error(w, err.Error(), http.StatusForbidden)
@@ -107,7 +108,7 @@ func modifyMainPage(target string, w http.ResponseWriter, r *http.Request) {
 	bodyAsString := string(body)
 
 	// TODO: FIXME: use config static path
-	insertBody, err := ioutil.ReadFile("public/modify_frontend/modify.html")
+	insertBody, err := ioutil.ReadFile(handler.Config.StaticPath + "/public/modify_frontend/modify.html")
 	if err != nil {
 		log.Fatal(err)
 	}
@@ -169,9 +170,9 @@ func buildURL(location domain.Coords) string {
 }
 
 // ServeLocation serves a specific location to the user.
-func ServeLocation(l domain.Coords, w http.ResponseWriter, r *http.Request) {
+func (handler Play) ServeLocation(l domain.Coords, w http.ResponseWriter, r *http.Request) {
 	mapsURL := buildURL(l)
-	modifyMainPage(mapsURL, w, r)
+	handler.modifyMainPage(mapsURL, w, r)
 }
 
 // ServeMaps is a proxy to google maps
diff --git a/main.go b/main.go
index 1fb231a..8bbabbf 100644
--- a/main.go
+++ b/main.go
@@ -104,10 +104,11 @@ func main() {
 	http.Handle("/play/", handlers.Play{
 		ChallengeStore:       challengeStore,
 		ChallengeResultStore: challengeResultStore,
+		Config:               conf,
 	})
 	http.HandleFunc("/maps/", handlers.ServeMaps)
 	// Otherwise, just serve index.html and let the frontend deal with the consequences
-	http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) { http.ServeFile(w, r, "public/index.html") })
+	http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) { http.ServeFile(w, r, conf.StaticPath+"/public/index.html") })
 
 	// == ENGAGE ========
 	log.Println("earthwalker is running on ", port)
