diff --git a/CMakeLists.txt b/CMakeLists.txt
index 374b67a..e2b7795 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -97,9 +97,9 @@ else()
     #set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/msquic/lib")
     endif("${isSystemDir}" STREQUAL "-1")
 
-    set(msquic_dest msquic)
-    set(main_lib_dest msquic/lib)
-    set(include_dest msquic/include)
+    set(msquic_dest ${CMAKE_INSTALL_PREFIX})
+    set(main_lib_dest lib)
+    set(include_dest include)
 endif()
 
 set(FILENAME_DEP_REPLACE "get_filename_component(SELF_DIR \"$\{CMAKE_CURRENT_LIST_FILE\}\" PATH)")
@@ -336,11 +336,11 @@ else()
     set(CMAKE_C_FLAGS_DEBUG "-Og -ggdb3")
     set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG")
     set(CMAKE_C_FLAGS_RELWITHDEBINFO "-Ofast ${MARCH} -ggdb3 -DNDEBUG")
-    set(CMAKE_C_FLAGS_RELEASE "-Ofast ${MARCH} -DNDEBUG")
+    #set(CMAKE_C_FLAGS_RELEASE "-Ofast ${MARCH} -DNDEBUG")
     set(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
     set(CMAKE_CXX_FLAGS_MINSIZEREL ${CMAKE_C_FLAGS_MINSIZEREL})
     set(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO})
-    set(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
+    #set(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
 
     list(APPEND QUIC_COMMON_FLAGS -fms-extensions -fPIC)
     if (CX_PLATFORM STREQUAL "darwin")
@@ -501,7 +501,7 @@ if(QUIC_TLS STREQUAL "openssl")
             list(APPEND OPENSSL_CONFIG_FLAGS -latomic)
         else()
             set(OPENSSL_CONFIG_CMD ${CMAKE_CURRENT_SOURCE_DIR}/submodules/openssl/config
-                CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER})
+                CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CFLAGS=${CMAKE_C_FLAGS} CXXFLAGS=${CMAKE_CXX_FLAGS} LDFLAGS=${CMAKE_SHARED_LINKER_FLAGS})
         endif()
         add_custom_target(mkdir_openssl_build
             COMMAND mkdir -p ${QUIC_BUILD_DIR}/submodules/openssl)
diff --git a/src/bin/CMakeLists.txt b/src/bin/CMakeLists.txt
index a59bb9e..bae4408 100644
--- a/src/bin/CMakeLists.txt
+++ b/src/bin/CMakeLists.txt
@@ -2,9 +2,9 @@
 # Licensed under the MIT License.
 
 if(WIN32)
-    set(SOURCES winuser/dllmain.c winuser/msquic.rc $<TARGET_OBJECTS:MsQuicEtw_Resource>)
+  set(SOURCES winuser/dllmain.c winuser/msquic.rc $<TARGET_OBJECTS:MsQuicEtw_Resource>)
 else()
-    set(SOURCES linux/init.c)
+  set(SOURCES linux/init.c)
 endif()
 
 add_library(msquic SHARED ${SOURCES})
@@ -14,31 +14,39 @@ set_property(TARGET msquic PROPERTY FOLDER "libraries")
 target_link_libraries(msquic PRIVATE core platform inc warnings logging)
 
 if(WIN32)
-    if(QUIC_UWP_BUILD)
-        target_link_libraries(msquic PUBLIC OneCoreUAP)
-    endif()
-    SET_TARGET_PROPERTIES(msquic
-        PROPERTIES LINK_FLAGS "/DEF:\"${CMAKE_CURRENT_SOURCE_DIR}/winuser/msquic.def\"")
+  if(QUIC_UWP_BUILD)
+    target_link_libraries(msquic PUBLIC OneCoreUAP)
+  endif()
+  set_target_properties(
+    msquic
+    PROPERTIES LINK_FLAGS "/DEF:\"${CMAKE_CURRENT_SOURCE_DIR}/winuser/msquic.def\""
+  )
 else()
-    SET_TARGET_PROPERTIES(msquic
-        PROPERTIES LINK_FLAGS "-Wl,--version-script=\"${CMAKE_CURRENT_SOURCE_DIR}/linux/exports.txt\"")
+  set_target_properties(
+    msquic
+    PROPERTIES LINK_FLAGS "-Wl,--version-script=\"${CMAKE_CURRENT_SOURCE_DIR}/linux/exports.txt\""
+  )
 endif()
 
-target_include_directories(msquic PUBLIC
-    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../inc>
-    $<INSTALL_INTERFACE:${include_dest}>)
+target_include_directories(
+  msquic PUBLIC
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../inc>
+  $<INSTALL_INTERFACE:${include_dest}>
+)
 
-set(PUBLIC_HEADERS
-    ../inc/msquic.h
-    ../inc/msquic_winuser.h
-    ../inc/msquic_linux.h
-    ../inc/quic_sal_stub.h)
+set(
+  PUBLIC_HEADERS
+  ../inc/msquic.h
+  ../inc/msquic_winuser.h
+  ../inc/msquic_linux.h
+  ../inc/quic_sal_stub.h
+)
 
 install(TARGETS msquic EXPORT msquic DESTINATION "${main_lib_dest}")
 install(FILES ${PUBLIC_HEADERS} DESTINATION "${include_dest}")
 
-configure_file(msquic-config.cmake.in ${CMAKE_BINARY_DIR}/msquic-config.cmake)
+#configure_file(msquic-config.cmake.in ${CMAKE_BINARY_DIR}/msquic-config.cmake)
 
-install(FILES ${CMAKE_BINARY_DIR}/msquic-config.cmake DESTINATION ${msquic_dest})
+#install(FILES ${CMAKE_BINARY_DIR}/msquic-config.cmake DESTINATION ${msquic_dest})
 
-install(EXPORT msquic DESTINATION ${msquic_dest})
+#install(EXPORT msquic DESTINATION ${msquic_dest})
