_opt_AutoStart=0

post_install() {
  #systemctl daemon-reload
  if [ "${_opt_AutoStart}" -eq 0 ]; then
    if ! systemctl -q is-active 'teamviewerd.service'; then
      echo "The Teamviewer daemon must be running for Teamviewer to work."
      echo "Execute 'sudo systemctl enable --now teamviewerd' in a terminal."
    fi
  else
    systemctl enable --now 'teamviewerd.service'
  fi
}

post_upgrade() {
  post_install
}

pre_remove() {
  if [ "${_opt_AutoStart}" -ne 0 ]; then
    systemctl disable --now 'teamviewerd.service'
  fi
  rm -f '/etc/teamviewer/global.conf' # line to be removed
}

pre_upgrade() {
  pre_remove
}

post_remove() {
  rm -rf /opt/teamviewer
  rm -rf "/var/log/teamviewer${1%%.*}/"
  set -u
  shopt -s nullglob
  local _homedirs
  readarray -t _homedirs < <(getent passwd | awk -F':' '{if ($3>=1000 && length($6)>1) {print $6;}}')
  local _teamdirs=()
  local _d
  for _d in "${_homedirs[@]}"; do
    _teamdirs+=("${_d}"/.local/share/teamviewer*/)
    _teamdirs+=("${_d}"/.cache/TeamViewer/)
  done
  if [ "${#_teamdirs[@]}" -ne 0 ]; then
    echo 'Teamviewer may be cleanly removed by removing the following user folders'
    printf '  %s\n' "${_teamdirs[@]}"
  fi
  if [ -s '/etc/machine-id' ]; then
    echo 'Additional Teamviewer problems may be solved by removing the following non TeamViewer file and reboot to regenerate.'
    echo '  /etc/machine-id'
  fi
  shopt -u nullglob
  #systemctl daemon-reload
  set +u
}
#post_remove "14.0"

# vim: ts=2 sw=2 et:
