diff -Naur mil-std-1553-linux-bsp-14.1.2.orig/src/drivers/pci/src/aim_apxe_device.c mil-std-1553-linux-bsp-14.1.2/src/drivers/pci/src/aim_apxe_device.c
--- mil-std-1553-linux-bsp-14.1.2.orig/src/drivers/pci/src/aim_apxe_device.c	2022-09-01 10:19:04.044875317 +0200
+++ mil-std-1553-linux-bsp-14.1.2/src/drivers/pci/src/aim_apxe_device.c	2022-09-01 10:19:08.691691960 +0200
@@ -221,7 +221,7 @@
 static int aim_apxe_dma_init(struct aim_pci_device* aimDevice)
 {
     aim_dev_debug(aimDevice, "Using 64-Bit DMA Mask for APXE platform\n");
-    return pci_set_dma_mask(aimDevice->pciDevice, DMA_BIT_MASK(64));
+    return dma_set_mask(&aimDevice->pciDevice->dev, DMA_BIT_MASK(64));
 }
 
 
diff -Naur mil-std-1553-linux-bsp-14.1.2.orig/src/drivers/pci/src/aim_aye_device.c mil-std-1553-linux-bsp-14.1.2/src/drivers/pci/src/aim_aye_device.c
--- mil-std-1553-linux-bsp-14.1.2.orig/src/drivers/pci/src/aim_aye_device.c	2022-09-01 10:19:04.044875317 +0200
+++ mil-std-1553-linux-bsp-14.1.2/src/drivers/pci/src/aim_aye_device.c	2022-09-01 10:19:15.461911711 +0200
@@ -76,7 +76,7 @@
     int ret = 0;
 
     aim_dev_debug(device, "Using %d-Bit DMA width for AYE platform\n", AYE_DMA_WIDTH);
-    ret = pci_set_dma_mask(device->pciDevice, DMA_BIT_MASK(AYE_DMA_WIDTH));
+    ret = dma_set_mask(&device->pciDevice->dev, DMA_BIT_MASK(AYE_DMA_WIDTH));
     if(ret)
     {
         aim_dev_error(device, "Failed to set DMA mask to %d bit", AYE_DMA_WIDTH);
diff -Naur mil-std-1553-linux-bsp-14.1.2.orig/src/drivers/pci/src/aim_ays_device.c mil-std-1553-linux-bsp-14.1.2/src/drivers/pci/src/aim_ays_device.c
--- mil-std-1553-linux-bsp-14.1.2.orig/src/drivers/pci/src/aim_ays_device.c	2022-09-01 10:19:04.044875317 +0200
+++ mil-std-1553-linux-bsp-14.1.2/src/drivers/pci/src/aim_ays_device.c	2022-09-01 10:19:12.335143375 +0200
@@ -461,7 +461,7 @@
 static int __inline__ aim_ays_dma_init(struct aim_pci_device* aimDevice)
 {
     aim_dev_debug(aimDevice, "Using %d-Bit DMA width for AYS platform\n", AYS_DMA_WIDTH);
-    return pci_set_dma_mask(aimDevice->pciDevice, DMA_BIT_MASK(AYS_DMA_WIDTH));
+    return dma_set_mask(&aimDevice->pciDevice->dev, DMA_BIT_MASK(AYS_DMA_WIDTH));
 }
 
 
