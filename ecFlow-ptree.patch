diff --git a/Viewer/src/VConfig.cpp b/Viewer/src/VConfig.cpp
index 0371ac1..c69e118 100644
--- a/Viewer/src/VConfig.cpp
+++ b/Viewer/src/VConfig.cpp
@@ -520,12 +520,13 @@ bool VConfig::readRcFile(const std::string& rcFile,boost::property_tree::ptree&
 				}
 				else if(par[0] == "suites")
 				{
-					boost::property_tree::ptree suites;
-					suites.push_back(std::make_pair("",par[1]));
+					using boost::property_tree::ptree;
+					ptree suites;
+					suites.push_back(std::make_pair("",ptree(par[1])));
 
 					for(unsigned int j=1; j < vec.size(); j++)
 					{
-						suites.push_back(std::make_pair("",vec.at(j)));
+						suites.push_back(std::make_pair("",ptree(vec.at(j))));
 					}
 
 					pt.put_child("suite_filter.suites",suites);
diff --git a/Viewer/src/VSettings.cpp b/Viewer/src/VSettings.cpp
index dca4ceb..9628703 100644
--- a/Viewer/src/VSettings.cpp
+++ b/Viewer/src/VSettings.cpp
@@ -140,22 +140,24 @@ void VSettings::put(const std::string& key,const std::string& val)
 
 void VSettings::put(const std::string& key,const std::vector<std::string>& val)
 {
-	boost::property_tree::ptree array;
+	using boost::property_tree::ptree;
+	ptree array;
 	for(std::vector<std::string>::const_iterator it=val.begin(); it != val.end(); ++it)
 	{
-		array.push_back(std::make_pair("",(*it)));
+		array.push_back(std::make_pair("",ptree(*it)));
 	}
 	pt_.put_child(path_.path(key),array);
 }
 
 void VSettings::put(const std::string& key,const std::vector<int>& val)
 {
+    using boost::property_tree::ptree;
     boost::property_tree::ptree array;
     for(std::vector<int>::const_iterator it=val.begin(); it != val.end(); ++it)
     {
         std::stringstream ss;
         ss << (*it);
-        array.push_back(std::make_pair("",ss.str()));
+        array.push_back(std::make_pair("",ptree(ss.str())));
     }
     pt_.put_child(path_.path(key),array);
 }
