From 3a2adddfb7e1c5c77b231d3d245a011ee35773cf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20La=C3=9F?= <bevan@bi-co.net>
Date: Thu, 13 May 2021 12:33:32 +0200
Subject: [PATCH 2/4] padHandler: verify data length

Make sure to never compute negative offsets for array accesses.
---
 src/backend/data/pad-handler.cpp | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/src/backend/data/pad-handler.cpp b/src/backend/data/pad-handler.cpp
index 19517ac..570bb2e 100755
--- a/src/backend/data/pad-handler.cpp
+++ b/src/backend/data/pad-handler.cpp
@@ -193,6 +193,12 @@ std::vector<uint8_t> data;		// for the local addition
 //	the size of the latest xpadfield that had a CI_flag != 0
 	if (CI_flag == 0) {
 	   if (mscGroupElement && (xpadLength > 0)) {
+
+	      if (last < xpadLength) {
+	         fprintf(stderr, "handle_variablePAD: last < xpadLength\n");
+	         return;
+	      }
+
 	      data. resize (xpadLength);
 	      for (j = 0; j < xpadLength; j ++)
 	         data [j] = b [last - j];
@@ -407,6 +413,11 @@ void	padHandler::build_MSC_segment (std::vector<uint8_t> data) {
 //	is
 int32_t	size	= data. size() < (uint32_t)dataGroupLength ? data. size() :
 	                                            dataGroupLength;
+
+if (size < 2) {
+	fprintf (stderr, "build_MSC_segment: data size < 2\n");
+	return;
+}
 	   
 uint8_t		groupType	=  data [0] & 0xF;
 //uint8_t	continuityIndex = (data [1] & 0xF0) >> 4;
-- 
2.31.1

