diff -Naur mate-menu.orig/lib/mate-menu.py mate-menu/lib/mate-menu.py
--- mate-menu.orig/lib/mate-menu.py	2015-11-07 02:12:28.507610662 +0100
+++ mate-menu/lib/mate-menu.py	2015-11-07 02:11:46.179765723 +0100
@@ -747,6 +747,7 @@
         x = c_int()
         y = c_int()
         # Get the dimensions/position of the widgetToAlignWith
+        gdk.gdk_window_get_origin.argtypes = [c_void_p, c_void_p, c_void_p]
         gdk.gdk_window_get_origin(hash(self.applet.window), byref(x), byref(y))
         entryX = x.value
         entryY = y.value
diff -Naur mate-menu.orig/mate_menu/easybuttons.py mate-menu/mate_menu/easybuttons.py
--- mate-menu.orig/mate_menu/easybuttons.py	2015-11-07 02:12:28.370940187 +0100
+++ mate-menu/mate_menu/easybuttons.py	2015-11-07 02:11:46.183099149 +0100
@@ -297,12 +297,14 @@
 
         array = TargetEntry * 2
         targets = array(( "text/plain", 0, 100 ), ( "text/uri-list", 0, 101 ))
+        gtk.gtk_drag_source_set.argtypes = [c_void_p, c_ushort, c_void_p, c_int, c_ushort]
         gtk.gtk_drag_source_set(hash(self), Gdk.ModifierType.BUTTON1_MASK, targets, 2, Gdk.DragAction.COPY)
 
         icon = self.getIcon( Gtk.IconSize.DND )
         if icon:
             iconName, s = icon.get_icon_name()
             c = c_char_p(iconName.decode('utf-8', 'ignore').encode('ascii', 'ignore'))
+            gtk.gtk_drag_source_set_icon_name.argtypes = [c_void_p, c_char_p]
             gtk.gtk_drag_source_set_icon_name( hash(self), c)
 
         self.connectSelf( "focus-in-event", self.onFocusIn )
@@ -414,6 +416,7 @@
         if icon:
             iconName, size = icon.get_icon_name()
             c = c_char_p(iconName.encode('ascii', 'ignore'))
+            gtk.gtk_drag_source_set_icon_name.argtypes = [c_void_p, c_char_p]
             gtk.gtk_drag_source_set_icon_name( hash(self), c)
 
     def startupFileChanged( self, *args ):
diff -Naur mate-menu.orig/mate_menu/keybinding.py mate-menu/mate_menu/keybinding.py
--- mate-menu.orig/mate_menu/keybinding.py	2015-11-07 02:12:28.370940187 +0100
+++ mate-menu/mate_menu/keybinding.py	2015-11-07 02:11:46.179765723 +0100
@@ -57,6 +57,7 @@
         threading.Thread.__init__ (self)
         self.setDaemon (True)
 
+        gdk.gdk_keymap_get_default.restype = c_void_p
         self.keymap = capi.get_widget (gdk.gdk_keymap_get_default())
         self.display = Display()
         self.screen = self.display.screen()
@@ -92,6 +93,7 @@
         count = c_int()
         array = (KeymapKey * 10)()
         keys = cast(array, POINTER(KeymapKey))
+        gdk.gdk_keymap_get_entries_for_keyval.argtypes = [c_void_p, c_uint, c_void_p, c_void_p]
         gdk.gdk_keymap_get_entries_for_keyval(hash(self.keymap), keyval, byref(keys), byref(count))
         return keys[0].keycode
 
@@ -135,6 +137,7 @@
         if window is None:
             self.window = self.screen.root
         else:
+            gdk.gdk_x11_drawable_get_xid.argtypes = [c_void_p]
             self.window = self.display.create_resource_object("window", gdk.gdk_x11_drawable_get_xid(hash(window)))
         self.grab(self.keytext)
 
diff -Naur mate-menu.orig/mate_menu/plugins/applications.py mate-menu/mate_menu/plugins/applications.py
--- mate-menu.orig/mate_menu/plugins/applications.py	2015-11-07 02:12:28.374273614 +0100
+++ mate-menu/mate_menu/plugins/applications.py	2015-11-07 02:11:53.753309742 +0100
@@ -279,6 +279,7 @@
 
         self.favoritesBox.connect( "drag-data-received", self.ReceiveCallback )
 
+        gtk.gtk_drag_dest_set.argtypes = [c_void_p, c_ushort, c_void_p, c_int, c_ushort]
         gtk.gtk_drag_dest_set ( hash(self.favoritesBox), Gtk.DestDefaults.MOTION | Gtk.DestDefaults.HIGHLIGHT | Gtk.DestDefaults.DROP,  self.toButton, 2, Gdk.DragAction.COPY )
         self.showFavoritesButton.connect( "drag-data-received", self.ReceiveCallback )
         gtk.gtk_drag_dest_set ( hash(self.showFavoritesButton), Gtk.DestDefaults.MOTION | Gtk.DestDefaults.HIGHLIGHT | Gtk.DestDefaults.DROP, self.toButton, 2, Gdk.DragAction.COPY )
@@ -583,6 +584,7 @@
         # of the existing text, that's the most likely candidate anyhow
         self.searchEntry.grab_focus()
         if self.rememberFilter or not clear:
+            gtk.gtk_editable_set_position.argtypes = [c_void_p, c_int]
             gtk.gtk_editable_set_position(hash(self.searchEntry), -1)
         else:
             self.searchEntry.set_text("")
@@ -738,6 +740,7 @@
     def keyPress( self, widget, event ):
         if event.string.strip() != "" or event.keyval == Gdk.KEY_BackSpace:
             self.searchEntry.grab_focus()
+            gtk.gtk_editable_set_position.argtypes = [c_void_p, c_int]
             gtk.gtk_editable_set_position(hash(self.searchEntry), -1)
             self.searchEntry.event( event )
             return True
@@ -802,6 +805,7 @@
 
                 mTree.show_all()
                 self.mateMenuWin.stopHiding()
+                gtk.gtk_menu_popup.argtypes = [c_void_p, c_void_p, c_void_p, c_void_p, c_void_p, c_uint, c_uint]
                 gtk.gtk_menu_popup(hash(mTree), None, None, None, None, ev.button, ev.time)
             else:
                 mTree = Gtk.Menu()
@@ -821,6 +825,7 @@
                 insertSpaceMenuItem.connect( "activate", self.onFavoritesInsertSpace, widget, insertBefore )
                 insertSeparatorMenuItem.connect( "activate", self.onFavoritesInsertSeparator, widget, insertBefore )
                 self.mateMenuWin.stopHiding()
+                gtk.gtk_menu_popup.argtypes = [c_void_p, c_void_p, c_void_p, c_void_p, c_void_p, c_uint, c_uint]
                 gtk.gtk_menu_popup(hash(mTree), None, None, None, None, ev.button, ev.time)
 
     def menuPopup( self, widget, event ):
@@ -879,6 +884,7 @@
                 startupMenuItem.connect( "toggled", self.onAddToStartup, widget )
 
             self.mateMenuWin.stopHiding()
+            gtk.gtk_menu_popup.argtypes = [c_void_p, c_void_p, c_void_p, c_void_p, c_void_p, c_uint, c_uint]
             gtk.gtk_menu_popup(hash(mTree), None, None, None, None, event.button, event.time)
 
     
@@ -919,6 +925,7 @@
         menu.show_all()
 
         self.mateMenuWin.stopHiding()
+        gtk.gtk_menu_popup.argtypes = [c_void_p, c_void_p, c_void_p, c_void_p, c_void_p, c_uint, c_uint]
         gtk.gtk_menu_popup(hash(menu), None, None, None, None, event.button, event.time)
 
         #menu.attach_to_widget(self.searchButton, None)
@@ -1207,8 +1214,10 @@
                     self.favorites.append( favButton )
                     self.favoritesPositionOnGrid( favButton )
                     favButton.connect( "drag-data-received", self.onFavButtonDragReorder )
+                    gtk.gtk_drag_dest_set.argtypes = [c_void_p, c_ushort, c_void_p, c_int, c_ushort]
                     gtk.gtk_drag_dest_set( hash(favButton), Gtk.DestDefaults.MOTION | Gtk.DestDefaults.HIGHLIGHT | Gtk.DestDefaults.DROP, self.fromFav, 2, Gdk.DragAction.COPY )
                     favButton.connect( "drag-data-get", self.onFavButtonDragReorderGet )
+                    gtk.gtk_drag_source_set.argtypes = [c_void_p, c_ushort, c_void_p, c_int, c_ushort]
                     gtk.gtk_drag_source_set( hash(favButton), Gdk.ModifierType.BUTTON1_MASK, self.toFav, 3, Gdk.DragAction.COPY )
                     position += 1
 
@@ -1287,8 +1296,10 @@
             self.favoritesPositionOnGrid( favButton )
 
             favButton.connect( "drag-data-received", self.onFavButtonDragReorder )
+            gtk.gtk_drag_dest_set.argtypes = [c_void_p, c_ushort, c_void_p, c_int, c_ushort]
             gtk.gtk_drag_dest_set( hash(favButton), Gtk.DestDefaults.MOTION | Gtk.DestDefaults.HIGHLIGHT | Gtk.DestDefaults.DROP, self.toFav, 3, Gdk.DragAction.COPY )
             favButton.connect( "drag-data-get", self.onFavButtonDragReorderGet )
+            gtk.gtk_drag_source_set.argtypes = [c_void_p, c_ushort, c_void_p, c_int, c_ushort]
             gtk.gtk_drag_source_set ( hash(favButton), Gdk.ModifierType.BUTTON1_MASK, self.toFav, 3, Gdk.DragAction.COPY )
 
             if position >= 0:
diff -Naur mate-menu.orig/mate_menu/plugins/places.py mate-menu/mate_menu/plugins/places.py
--- mate-menu.orig/mate_menu/plugins/places.py	2015-11-07 02:12:28.374273614 +0100
+++ mate-menu/mate_menu/plugins/places.py	2015-11-07 02:11:55.766699096 +0100
@@ -274,6 +274,7 @@
             trashMenu.show_all()
             emptyTrashMenuItem.connect ( "activate", self.emptyTrash, widget )
             self.mateMenuWin.stopHiding()
+            gtk.gtk_menu_popup.argtypes = [c_void_p, c_void_p, c_void_p, c_void_p, c_void_p, c_uint, c_uint]
             gtk.gtk_menu_popup(hash(trashMenu), None, None, None, None, 3, 0)
 
     def emptyTrash( self, menu, widget):
diff -Naur mate-menu.orig/mate_menu/pointerMonitor.py mate-menu/mate_menu/pointerMonitor.py
--- mate-menu.orig/mate_menu/pointerMonitor.py	2015-11-07 02:12:28.374273614 +0100
+++ mate-menu/mate_menu/pointerMonitor.py	2015-11-07 02:11:46.183099149 +0100
@@ -46,6 +46,7 @@
 
     # Receives GDK windows
     def addWindowToMonitor(self, window):
+        gdk.gdk_x11_drawable_get_xid.argtypes = [c_void_p]
         xWindow = self.display.create_resource_object("window", gdk.gdk_x11_drawable_get_xid(hash(window)))
         self.windows.append(xWindow)
 
