diff --git a/src/game_instance.cpp b/src/game_instance.cpp
index 18a9154..1b220b5 100644
--- a/src/game_instance.cpp
+++ b/src/game_instance.cpp
@@ -198,7 +198,7 @@ static std::uint32_t rgb_encode(GB_gameboy_t *, uint8_t r, uint8_t g, uint8_t b)
     return 0xFF000000 | (r << 16) | (g << 8) | (b << 0);
 }
 
-void GameInstance::on_vblank(GB_gameboy_s *gameboy) noexcept {
+void GameInstance::on_vblank(GB_gameboy_s *gameboy, GB_vblank_type_t) noexcept {
     auto *instance = resolve_instance(gameboy);
 
     // Lock this
diff --git a/src/game_instance.hpp b/src/game_instance.hpp
index 557c46f..2075256 100644
--- a/src/game_instance.hpp
+++ b/src/game_instance.hpp
@@ -831,7 +831,7 @@ private: // all private functions assume the mutex is locked by the caller
     void assign_work_buffer() noexcept;
     
     // Handle vblank
-    static void on_vblank(GB_gameboy_s *gameboy) noexcept;
+    static void on_vblank(GB_gameboy_s *gameboy, GB_vblank_type_t) noexcept;
     
     // Log
     static void on_log(GB_gameboy_s *gameboy, const char *text, GB_log_attributes attributes) noexcept;
