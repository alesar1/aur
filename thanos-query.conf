# Log filtering level.
LOG_LEVEL="--log.level=info"

# Log format to use.
LOG_FORMAT="--log.format=logfmt"

# GCP project to send Google Cloud Trace tracings to.
# If empty, tracing will be disabled.
#GCLOUDTRACE_PROJECT="--gcloudtrace.project=GCLOUDTRACE.PROJECT"

# How often we send traces (1/<sample-factor>).
# If 0 no trace will be sent periodically, unless forced
# by baggage item. See `pkg/tracing/tracing.go` for details.
#GCLOUDTRACE_SAMPLE="--gcloudtrace.sample-factor=1"

# Listen ip:port address for gRPC endpoints (StoreAPI).
# Make sure this address is routable from other components
# if you use gossip, 'grpc-advertise-address'
# is empty and you require cross-node connection.
#GRPC_ADDRESS="--grpc-address=0.0.0.0:10901"

# Explicit (external) host:port address to advertise
# for gRPC StoreAPI in gossip cluster. If empty, 'grpc-address' will be used.
#GRPC_ADVERTISE_ADDRESS="--grpc-advertise-address=GRPC-ADVERTISE-ADDRESS"

# TLS Certificate for gRPC server, leave blank to disable TLS
#GRPC_SERVER_TLS_CERT="--grpc-server-tls-cert="

# TLS Key for the gRPC server, leave blank to disable TLS
#GRPC_SERVER_TLS_KEY="--grpc-server-tls-key="

# TLS CA to verify clients against. If no client CA is specified,
# there is no client verification on server side. (tls.NoClientCert)
#GRPC_SERVER_TLS_CLIENT_CA="--grpc-server-tls-client-ca="

# Listen host:port for HTTP endpoints.
#HTTP_ADDRESS="--http-address=0.0.0.0:10902"

# Listen ip:port address for gossip cluster.
#CLUSTER_ADDRESS="--cluster.address=0.0.0.0:10900"  

# Explicit (external) ip:port address to advertise for gossip
# in gossip cluster. Used internally for membership only.
#CLUSTER_ADVERTISE_ADDRESS="--cluster.advertise-address="

# Initial peers to join the cluster. It can be either <ip:port>,
# or <domain:port>. A lookup resolution is done only at the startup.
#CLUSTER_PEERS="--cluster.peers="

# Interval between sending gossip messages.
# By lowering this value (more frequent) gossip messages are propagated
# across the cluster more quickly at the expense of increased bandwidth.
# Default is used from a specified network-type.
#CLUSTER_GOSSIP_INTERVAL="--cluster.gossip-interval="

# Interval for gossip state syncs. Setting this interval lower (more frequent)
# will increase convergence speeds across larger clusters at the expense of
# increased bandwidth usage. Default is used from a specified network-type.
#CLUSTER_PUSHPULL_INTERVAL="--cluster.pushpull-interval="

# Interval for membership to refresh cluster.peers state, 0 disables refresh.
#CLUSTER_REFRESH_INTERVAL="--cluster.refresh-interval=1m"

# Initial secret key to encrypt cluster gossip.
# Can be one of AES-128, AES-192, or AES-256 in hexadecimal format.
#CLUSTER_SECRET_KEY="--cluster.secret-key=CLUSTER.SECRET-KEY"

# Network type with predefined peers configurations.
# Sets of configurations accounting the latency differences between network types: local, lan, wan.
CLUSTER_NETWORK_TYPE="--cluster.network-type=lan"

# If true gossip will be disabled and no cluster related server will be started.
#CLUSTER_DISABLE="--cluster.disable"

# Explicit (external) host:port address to
# advertise for HTTP QueryAPI in gossip cluster.
# If empty, 'http-address' will be used.
#HTTP_ADVERTISE_ADDRESS="--http-advertise-address=HTTP-ADVERTISE-ADDRESS"

# Use TLS when talking to the gRPC server
#GRPC_CLIENT_TLS_SECURE="--grpc-client-tls-secure"

# TLS Certificates to use to identify this client
# to the server
#GRPC_CLIENT_TLS_CERT="--grpc-client-tls-cert="

# TLS Key for the client's certificate
#GRPC_CLIENT_TLS_KEY="--grpc-client-tls-key="

# TLS CA Certificates to use to verify gRPC
# servers
#GRPC_CLIENT_TLS_CA="--grpc-client-tls-ca="
                        
# Server name to verify the hostname on the
# returned gRPC certificates. See
# https://tools.ietf.org/html/rfc4366#section-3.1
#GRPC_CLIENT_SERVER_NAME="--grpc-client-server-name="

# Prefix for API and UI endpoints. This allows
# thanos UI to be served on a sub-path. This
# option is analogous to --web.route-prefix of
# Promethus.
#WEB_ROUTE_PREFIX="--web.route-prefix="
                    
# Static prefix for all HTML links and redirect
# URLs in the UI query web interface. Actual
# endpoints are still served on / or the
# web.route-prefix. This allows thanos UI to be   
# served behind a reverse proxy that strips a URL                     
# sub-path.                                                           
#WEB_EXTERNAL_PREFIX="--web.external-prefix="

# Name of HTTP request header used for dynamic
# prefixing of UI links and redirects. This
# option is ignored if web.external-prefix
# argument is set. Security risk: enable this
# option only if a reverse proxy in front of
# thanos is resetting the header. The
# --web.prefix-header=X-Forwarded-Prefix option
# can be useful, for example, if Thanos UI is
# served via Traefik reverse proxy with
# PathPrefixStrip option enabled, which sends the   
# stripped prefix value in X-Forwarded-Prefix                            
# header. This allows thanos UI to be served on a                        
# sub-path.                                                              
#WEB_PREFIX_HEADER="--web.prefix-header="
                     
# Maximum time to process query by query node.    
QUERY_TIMEOUT="--query.timeout=2m"

# Maximum number of queries processed
# concurrently by query node.
QUERY_MAX_CONCURRENT="--query.max-concurrent=20"
                         
# Label to treat as a replica indicator along
# which data is deduplicated. Still you will be
# able to query without deduplication using
# 'dedup=false' parameter.
#QUERY_REPLICA_LABEL="--query.replica-label=QUERY.REPLICA-LABEL"

# Query selector labels that will be exposed in
# info endpoint (repeated).
#SELECTOR_LABEL="--selector-label=<name>=<value>"

# Addresses of statically configured store API
# servers (repeatable). The scheme may be
# prefixed with 'dns+' or 'dnssrv+' to detect
# store API servers through respective DNS
# lookups.
#STORE="--store="
               
# Path to files that contain addresses of store
# API servers. The path can be a glob pattern
# (repeatable).
#STORE_SD_FILES="--store.sd-files=<path>"

# Refresh interval to re-read file SD files.
# It is used as a resync fallback.
#STORE_SD_INTERVAL="--store.sd-interval=5m"

# Interval between DNS resolutions.
#STORE_SD_DNS_INTERVAL="--store.sd-dns-interval=30s"

# Enable automatic adjustment (step / 5) to what
# source of data should be used in store gateways
# if no max_source_resolution param is specified.
QUERY_AUTO_DOWNSAMPLING="--query.auto-downsampling"

# Enable partial response for queries if no  
# partial_response param is specified. 
QUERY_PARTIAL_RESPONSE="--query.partial-response"

