# Maintainer: Andrew Shark <ashark linuxcomp.ru>

pkgname=supermicro-update-manager
pkgver=2.5.1
pkgrel=2
pkgdesc="manage the firmware and configuration for Supermicro motherboards"
arch=(x86_64)
url="https://www.supermicro.com/en/solutions/management-software/supermicro-update-manager"
license=('custom: EULA')
backup=(etc/sumrc)
_rel_date=20201112
source=("sum_${pkgver}_Linux_x86_64_${_rel_date}.tar.gz::https://www.supermicro.com/SwDownload/SwSelect_Free.aspx")
sha256sums=("7606a88c337f30bd155a8ea30a16c95e54989768f6c12852b8070dc2fe6dc100")

# To get this crazy value for curl, in Chromium go to the site, download software. Open web console -> Network tab -> filter method:POST you can see and copy it.
DLAGENTS=("https::/usr/bin/curl \
-d \
__EVENTTARGET=ctl00%24CPCenter%24MyGridView&__EVENTARGUMENT=Action%241&ctl00_TreeView_BackToSMCI_ExpandState=n&ctl00_TreeView_BackToSMCI_SelectedNode=&ctl00_TreeView_BackToSMCI_PopulateLog=&__VIEWSTATE=%2FwEPDwULLTE4ODkyNjU0NDcPFgIeDVNvcnRFeHByVmFsdWUFBnN3TmFtZRYCZg9kFgICAw9kFgwCBw9kFggCBw8PFgQeBVdpZHRoGwAAAAAAwIJAAQAAAB4EXyFTQgKAAmQWAgIDDw8WAh4EVGV4dAUDU1VNZGQCCQ88KwANAQAPFgQeC18hRGF0YUJvdW5kZx4LXyFJdGVtQ291bnQCBGQWAmYPZBYKAgEPZBYQZg8PFgIfAwU5U3VwZXJtaWNybyBVcGRhdGUgTWFuYWdlciAoU1VNIGZvciBMaW51eC9XaW5kb3dzL0ZyZWVCU0QpZGQCAQ8PFgIfAwUQQlNEIHg2NCwgQlNEIHg4NmRkAgIPDxYCHwMFBnRhci5nemRkAgMPDxYCHwMFCDExLTEyLTIwZGQCBA8PFgIfAwUFMi41LjFkZAIFDw8WAh8DBZ8CU3VwZXJtaWNybyYjMTc0OyBVcGRhdGUgTWFuYWdlciByZW1vdGVseSB1cGRhdGVzIHRoZSBCSU9TIGFuZCBCTUMvSVBNSSBmaXJtd2FyZSwgYXMgd2VsbCBhcywgc3lzdGVtIHNldHRpbmdzIG9mIFN1cGVybWljcm8gWDkgKFJvbWxleSksIFgxMCwgYW5kIFgxMSBnZW5lcmF0aW9uIGJhc2VkIG1hY2hpbmUgdGhyb3VnaCBpbi1iYW5kIGFuZCBPT0IgKE91dC1PZi1CYW5kKSBjb21tdW5pY2F0aW9uIGNoYW5uZWxzLCBpLmUuLCBjb21tdW5pY2F0aW9uIHRocm91Z2ggdGhlIEJNQy9JUE1JIGludGVyZmFjZS5kZAIGD2QWAmYPDxYCHwMFC0FjY2VwdCBFVUxBZGQCBw8PFgIfAwUDMzA5ZGQCAg9kFhBmDw8WAh8DBTlTdXBlcm1pY3JvIFVwZGF0ZSBNYW5hZ2VyIChTVU0gZm9yIExpbnV4L1dpbmRvd3MvRnJlZUJTRClkZAIBDw8WAh8DBRRMaW51eCB4NjQsIExpbnV4IHg4NmRkAgIPDxYCHwMFBnRhci5nemRkAgMPDxYCHwMFCDExLTEyLTIwZGQCBA8PFgIfAwUFMi41LjFkZAIFDw8WAh8DBZ8CU3VwZXJtaWNybyYjMTc0OyBVcGRhdGUgTWFuYWdlciByZW1vdGVseSB1cGRhdGVzIHRoZSBCSU9TIGFuZCBCTUMvSVBNSSBmaXJtd2FyZSwgYXMgd2VsbCBhcywgc3lzdGVtIHNldHRpbmdzIG9mIFN1cGVybWljcm8gWDkgKFJvbWxleSksIFgxMCwgYW5kIFgxMSBnZW5lcmF0aW9uIGJhc2VkIG1hY2hpbmUgdGhyb3VnaCBpbi1iYW5kIGFuZCBPT0IgKE91dC1PZi1CYW5kKSBjb21tdW5pY2F0aW9uIGNoYW5uZWxzLCBpLmUuLCBjb21tdW5pY2F0aW9uIHRocm91Z2ggdGhlIEJNQy9JUE1JIGludGVyZmFjZS5kZAIGD2QWAmYPDxYCHwMFIURvd25sb2FkIEZpbGUgcGVyIEVVTEEgYWNjZXB0YW5jZWRkAgcPDxYCHwMFAzMxMGRkAgMPZBYQZg8PFgIfAwU5U3VwZXJtaWNybyBVcGRhdGUgTWFuYWdlciAoU1VNIGZvciBMaW51eC9XaW5kb3dzL0ZyZWVCU0QpZGQCAQ8PFgIfAwUYV2luZG93cyB4NjQsIFdpbmRvd3MgeDg2ZGQCAg8PFgIfAwUDemlwZGQCAw8PFgIfAwUIMTEtMTItMjBkZAIEDw8WAh8DBQUyLjUuMWRkAgUPDxYCHwMFnwJTdXBlcm1pY3JvJiMxNzQ7IFVwZGF0ZSBNYW5hZ2VyIHJlbW90ZWx5IHVwZGF0ZXMgdGhlIEJJT1MgYW5kIEJNQy9JUE1JIGZpcm13YXJlLCBhcyB3ZWxsIGFzLCBzeXN0ZW0gc2V0dGluZ3Mgb2YgU3VwZXJtaWNybyBYOSAoUm9tbGV5KSwgWDEwLCBhbmQgWDExIGdlbmVyYXRpb24gYmFzZWQgbWFjaGluZSB0aHJvdWdoIGluLWJhbmQgYW5kIE9PQiAoT3V0LU9mLUJhbmQpIGNvbW11bmljYXRpb24gY2hhbm5lbHMsIGkuZS4sIGNvbW11bmljYXRpb24gdGhyb3VnaCB0aGUgQk1DL0lQTUkgaW50ZXJmYWNlLmRkAgYPZBYCZg8PFgIfAwULQWNjZXB0IEVVTEFkZAIHDw8WAh8DBQMzMTFkZAIED2QWEGYPDxYCHwMFKFN1cGVybWljcm8gVXBkYXRlIE1hbmFnZXIgKFNVTSBmb3IgVUVGSSlkZAIBDw8WAh8DBQYmbmJzcDtkZAICDw8WAh8DBQN6aXBkZAIDDw8WAh8DBQgxMi0wMi0yMGRkAgQPDxYCHwMFBTEuMS4wZGQCBQ8PFgIfAwXRAVRoZSBTdXBlcm1pY3JvIFVwZGF0ZSBNYW5hZ2VyIFVFRkkgdmVyc2lvbiAoU1VNIFVFRkkpIGlzIHVzZWQgdG8gbG9jYWxseSBtYW5hZ2UgdGhlIHN5c3RlbSBCSU9TL0JNQyBhbmQgdXBkYXRlIEJJT1MvQk1DIGZpcm13YXJlIGltYWdlIHVuZGVyIEVGSSBzaGVsbCBvbiBYMTIvSDEyIGFuZCBsYXRlciBwbGF0Zm9ybXMgZXhjZXB0IEgxMiBub24tUm9UIHN5c3RlbXMuZGQCBg9kFgJmDw8WAh8DBQtBY2NlcHQgRVVMQWRkAgcPDxYCHwMFAzMxMmRkAgUPDxYCHgdWaXNpYmxlaGRkAg0PDxYCHwNlZGQCDw9kFgICAQ8PFgYfARsAAAAAAMCCQAEAAAAfAwWAPjxiPjxmb250IGNvbG9yPSdicm93bic%2BRW5kIFVzZXIgTGljZW5zZSBBZ3JlZW1lbnQgKEVVTEEpPC9mb250PjwvYj48YnI%2BPGJyPklNUE9SVEFOVCAtIFJFQUQgQ0FSRUZVTExZIEJFRk9SRSBJTlNUQUxMSU5HOjxicj48YnI%2BVEhJUyBFTkQtVVNFUiBMSUNFTlNFIEFHUkVFTUVOVCBpcyBhIGxlZ2FsIGNvbnRyYWN0IGJldHdlZW4gU1VQRVIgTUlDUk8gQ09NUFVURVIsIElOQy4gKCJTVVBFUk1JQ1JPIikgYW5kIHRoZSBpbmRpdmlkdWFsIG9yIGVudGl0eSB3aGljaCBkb3dubG9hZHMsIGluc3RhbGxzIG9yIG90aGVyd2lzZSB1c2VzIHRoZSBhdHRhY2hlZCBTVVBFUk1JQ1JPIHNvZnR3YXJlIHByb2R1Y3QgKCJ0aGUgU29mdHdhcmUgIikuPGJyPjxicj5CWSBDTElDS0lORyBPTiBUSEUgIkFDQ0VQVCIgQlVUVE9OIEFUIFRIRSBFTkQgT0YgVEhJUyBBR1JFRU1FTlQsIFdISUNIIFdJTEwgSU5TVEFMTCBUSEUgQVRUQUNIRUQgU09GVFdBUkUsIE9SIEJZIE9USEVSV0lTRSBJTlNUQUxMSU5HIE9SIFVTSU5HIFRIRSBTT0ZUV0FSRSwgVEhFIElORElWSURVQUwgT1IgRU5USVRZIFdISUNIIElOU1RBTExTIE9SIFVTRVMgVEhFIFNPRlRXQVJFICgiTElDRU5TRUUiKSBBR1JFRVMgVE8gQkUgQk9VTkQgQlkgVEhFIFRFUk1TIE9GIFRISVMgQUdSRUVNRU5ULiAgSUYgWU9VIERPIE5PVCBBR1JFRSBUTyBBTEwgT0YgVEhFIFRFUk1TIE9GIFRISVMgQUdSRUVNRU5ULCBDTElDSyBUSEUgIkNBTkNFTCIgQlVUVE9OIEFORCBUSEUgSU5TVEFMTEFUSU9OIFBST0NFU1MgV0lMTCBOT1QgQ09OVElOVUUuPGJyPjxicj48Yj4xLjwvYj4gTGljZW5zZTogVGhpcyBBZ3JlZW1lbnQgZ3JhbnRzIHlvdSwgdGhlIExpY2Vuc2VlLCBhIGxpbWl0ZWQsIG5vbi1leGNsdXNpdmUsIGdsb2JhbCwgbm9uLXRyYW5zZmVyYWJsZSBsaWNlbnNlIHRvIGRvd25sb2FkIHRoZSBTb2Z0d2FyZSwgaW5zdGFsbCBvbiBTVVBFUk1JQ1JPJ3MgcHJvZHVjdHMsIGFuZCBkaXN0cmlidXRlIHRoZSBTb2Z0d2FyZSBpbiBjb21iaW5hdGlvbiB3aXRoIFNVUEVSTUlDUk8ncyBwcm9kdWN0cyAoIkxpY2Vuc2UiKS48YnI%2BPGJyPjxiPjIuPC9iPiBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlL0xlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlLiBDZXJ0YWluIGNvbXBvbmVudHMgb2YgdGhlIFNvZnR3YXJlIG1heSBiZSBzdWJqZWN0IHRvIHRoZSBHTlUgR1BMIG9yIExHUEwgdGVybXMgYW5kIGNvbmRpdGlvbnMgYXZhaWxhYmxlIGZvciB2aWV3aW5nIGF0IGh0dHA6Ly93d3cuZ251Lm9yZy9jb3B5bGVmdC9ncGwuaHRtbCBhbmQgaHR0cDovL3d3dy5nbnUub3JnL2NvcHlsZWZ0L2xlc3Nlci5odG1sIG9yIGFzIG90aGVyd2lzZSBkZXNpZ25hdGVkLiBUbyB0aGUgZXh0ZW50IHlvdSByZWNlaXZlIFNvZnR3YXJlIHVuZGVyIHRoaXMgTGljZW5zZSB3aGljaCBjb250YWlucyBjb21wb25lbnRzIHN1YmplY3QgdG8gdGhlIEdQTCBvciBMR1BMIHRlcm1zLCB5b3UgYWdyZWUgdG8gYmUgYm91bmQgYnkgYWxsIHRoZSB0ZXJtcyBhbmQgcmVzdHJpY3Rpb25zIHRoZXJlaW4gaW5jbHVkaW5nIGtlZXBpbmcgYWxsIGNvcHlyaWdodCBub3RpY2VzIGluIHRhY3QgZm9yIHRoZSBkdXJhdGlvbiBvZiB5b3VyIHVzZSBvZiB0aGUgU29mdHdhcmUgYW5kIG1vZGlmeWluZyBhbmQvb3IgcmVkaXN0cmlidXRpbmcgc3VjaCBjb21wb25lbnRzIG9ubHkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdQTCBvciBMR1BMIHRlcm1zLjxicj48YnI%2BPGI%2BMy48L2I%2BIFJlc3RyaWN0aW9uczogVGhlIExpY2Vuc2VlIG1heSBOT1Qgc3VibGljZW5zZSwgYXNzaWduLCByZXByb2R1Y2Ugb3IgZGlzdHJpYnV0ZSBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlIHRvIG90aGVycyBleGNlcHQgYXMgb3RoZXJ3aXNlIHByb3ZpZGVkIGhlcmVpbi4gVGhlIFNvZnR3YXJlIGNvbnRhaW5zIHRyYWRlIHNlY3JldHMuIFRoZSBMaWNlbnNlZSBtYXkgTk9UIGRlY29tcGlsZSwgcmV2ZXJzZSBlbmdpbmVlciwgZGlzYXNzZW1ibGUsIG9yIG90aGVyd2lzZSByZWR1Y2UgdGhlIFNvZnR3YXJlIHRvIGEgaHVtYW4gcmVhZGFibGUgZm9ybS4gVEhFIExJQ0VOU0VFIE1BWSBOT1QgTU9ESUZZLCBBREFQVCwgVFJBTlNMQVRFLCBSRU5ULCBMRUFTRSwgTE9BTiwgUkVTRUxMIEZPUiBQUk9GSVQsIERJU1RSSUJVVEUsIE9SIE9USEVSV0lTRSBBU1NJR04gT1IgVFJBTlNGRVIgVEhFIFNPRlRXQVJFLCBPUiBDUkVBVEUgREVSSVZBVElWRSBXT1JLUyBCQVNFRCBVUE9OIFRIRSBTT0ZUV0FSRSBPUiBBTlkgUEFSVCBUSEVSRU9GLCBFWENFUFQgQVMgRVhQUkVTU0xZIEFHUkVFRCBUTyBJTiBXUklUSU5HIEJZIFNVUEVSTUlDUk8uPGJyPjxicj48Yj40LjwvYj4gQ29weXJpZ2h0IFByb3RlY3Rpb246IEV4Y2VwdCB0byB0aGUgZXh0ZW50IHRoZSBTb2Z0d2FyZSB3YXMgbGljZW5zZWQgdG8gU1VQRVJNSUNSTyBieSBpdHMgbGljZW5zb3IsIHRoZSBTb2Z0d2FyZSBhbmQgYWxsIHJlbGF0ZWQgZG9jdW1lbnRhdGlvbiBhcmUgb3duZWQgYnkgU1VQRVJNSUNSTyBhbmQgYXJlIHByb3RlY3RlZCBieSBVbml0ZWQgU3RhdGVzJyBjb3B5cmlnaHQgbGF3cyBhbmQgaW50ZXJuYXRpb25hbCB0cmVhdHkgcHJvdmlzaW9ucy4gQW55IGNvcHlpbmcgb3IgcmVkaXN0cmlidXRpb24sIGV4Y2VwdCBhcyBleHByZXNzbHkgcGVybWl0dGVkIGJ5IHRoaXMgQWdyZWVtZW50IGlzIGEgdmlvbGF0aW9uIG9mIHRoZSBsYXcuIFlvdSBtYXkgbm90IHJlbW92ZSBvciBhbHRlciBhbnkgY29weXJpZ2h0LCB0cmFkZSBzZWNyZXQsIHBhdGVudCwgdHJhZGVtYXJrLCB0cmFkZSBuYW1lLCBsb2dvLCBwcm9kdWN0IGRlc2lnbmF0aW9uIG9yIG90aGVyIHByb3ByaWV0YXJ5IGFuZC9vciBvdGhlciBsZWdhbCBub3RpY2VzIGNvbnRhaW5lZCBpbiBvciBvbiB0aGUgU29mdHdhcmUuIFRoZXNlIGxlZ2FsIG5vdGljZXMgbXVzdCBiZSByZXRhaW5lZCBvbiBhbnkgY29waWVzIG9mIHRoZSBTb2Z0d2FyZS4gRXhjZXB0IGFzIG90aGVyd2lzZSBleHByZXNzbHkgcHJvdmlkZWQsIHRoaXMgTGljZW5zZSBncmFudHMgbm8gZXhwcmVzcyBvciBpbXBsaWVkIHJpZ2h0cyB1bmRlciB0aGUgcmVzcGVjdGl2ZSBwYXRlbnRzLCBjb3B5cmlnaHRzLCB0cmFkZW1hcmtzIG9yIG90aGVyIGludGVsbGVjdHVhbCBwcm9wZXJ0eSByaWdodHMgb2YgU1VQRVJNSUNSTyBvciBpdHMgbGljZW5zb3JzLjxicj48YnI%2BPGI%2BNS48L2I%2BIFRlcm1pbmF0aW9uOiBUaGlzIExpY2Vuc2UgaXMgZWZmZWN0aXZlIHVudGlsIHRlcm1pbmF0ZWQuIFRoaXMgTGljZW5zZSB3aWxsIHRlcm1pbmF0ZSBpbW1lZGlhdGVseSB3aXRob3V0IG5vdGljZSBmcm9tIFNVUEVSTUlDUk8gaWYgdGhlIExpY2Vuc2VlIGZhaWxzIHRvIGNvbXBseSB3aXRoIGFueSBvZiBpdHMgcHJvdmlzaW9ucy4gVXBvbiB0ZXJtaW5hdGlvbiB0aGUgTGljZW5zZWUgbXVzdCBkZXN0cm95IHRoZSBTb2Z0d2FyZSBhbmQgYWxsIGNvcGllcyB0aGVyZW9mLCBhbmQgdGhlIExpY2Vuc2VlIG1heSB0ZXJtaW5hdGUgdGhpcyBMaWNlbnNlIGF0IGFueSB0aW1lIGJ5IGRvaW5nIHNvLjxicj48YnI%2BPGI%2BNi48L2I%2BIE5vIFdhcnJhbnR5OiBUSEUgU09GVFdBUkUgSVMgREVMSVZFUkVEIFRPIExJQ0VOU0VFICJBUy1JUyIuIFNVUEVSTUlDUk8gQU5EIElUUyBTVVBQTElFUlMgQU5EIFJFU0VMTEVSUyBNQUtFIE5PIFdBUlJBTlRZIEFTIFRPIFRIRSBVU0UgT1IgUEVSRk9STUFOQ0UgT0YgVEhFIFNPRlRXQVJFIE9GIEFOWSBLSU5ELiBTVVBFUk1JQ1JPIEFORCBJVFMgU1VQUExJRVJTIEFORCBSRVNFTExFUlMgRE8gTk9UIFdBUlJBTlQgVEhBVCBUSEUgU09GVFdBUkUgSVMgRlJFRSBPRiBERUZFQ1RTLCBNRVJDSEFOVEFCTEUsIEZJVCBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgT1IgTk9OLUlORlJJTkdJTkcgT0YgVEhJUkQgUEFSVFkgUklHSFRTLCBBTkQgRElTQ0xBSU0gQU5EIEVYQ0xVREUgQUxMIFdBUlJBTlRJRVMsIEVYUFJFU1MgT1IgSU1QTElFRCwgV0lUSCBSRVNQRUNUIFRPIFRIRSBTT0ZUV0FSRSwgSVRTIFVTRSwgUEVSRk9STUFOQ0UgT1IgQVBQTElDQVRJT04sIFRIRSBESVNLRVRURSBPUiBPVEhFUiBUQU5HSUJMRSBNRURJQSBPTiBXSElDSCBUSEUgU09GVFdBUkUgSVMgREVMSVZFUkVELCBPUiBBTlkgSU5GT1JNQVRJT04gUFJPVklERUQgUkVHQVJESU5HIFRIRSBTT0ZUV0FSRS48YnI%2BPGJyPjxiPjcuPC9iPiBMaW1pdGF0aW9uIG9mIExpYWJpbGl0eTogSU4gTk8gRVZFTlQgV0lMTCBTVVBFUk1JQ1JPIE9SIElUUyBMSUNFTlNPUlMgQkUgTElBQkxFIFRPIExJQ0VOU0VFIEZPUiBBTlkgREFNQUdFUyBJTkNMVURJTkcgQU5ZIExPU1QgUFJPRklUUywgTE9TVCBTQVZJTkdTIE9SIE9USEVSIElOQ0lERU5UQUwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTLCBFVkVOIElGIFNVUEVSTUlDUk8gT1IgSVRTIExJQ0VOU09SUyBIQVMgQkVFTiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRVMsIE9SIEZPUiBBTlkgQ0xBSU0gQlkgQU5ZIE9USEVSIFBBUlRZLiBJTiBOTyBFVkVOVCBXSUxMIFRIRSBMSUFCSUxJVFkgT0YgU1VQRVJNSUNSTyBPUiBJVFMgTElDRU5TT1JTLCBXSEVUSEVSIElOIENPTlRSQUNULCBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSksIFNUUklDVCBMSUFCSUxJVFkgT1IgT1RIRVJXSVNFLCBFWENFRUQgVEhFIEFNT1VOVCBQQUlEIEJZIFlPVSBVTkRFUiBUSElTIExJQ0VOU0UuPGJyPjxicj48Yj44LjwvYj4gR2VuZXJhbDogQ2FsaWZvcm5pYSBsYXcsIGV4Y2VwdCBhcyB0byBjb3B5cmlnaHQgbWF0dGVycywgd2hpY2ggYXJlIGNvdmVyZWQgYnkgRmVkZXJhbCBsYXcsIGFuZCBpdHMgcHJpbmNpcGFscyBvZiBjb25mbGljdCBvZiBsYXdzLCBzaGFsbCBnb3Zlcm4gdGhpcyBBZ3JlZW1lbnQuIFRoaXMgQWdyZWVtZW50IHdpbGwgbm90IGJlIGdvdmVybmVkIGJ5IHRoZSBjb25mbGljdCBvZiBsYXcgcnVsZXMgb2YgYW55IGp1cmlzZGljdGlvbiBvciB0aGUgVW5pdGVkIE5hdGlvbnMgQ29udmVudGlvbiBvZiBDb250cmFjdHMgZm9yIHRoZSBTYWxlIG9mIEdvb2RzLiBUaGUgcGFydGllcyBoZXJlYnkgY29uc2VudCB0byB0aGUgZXhjbHVzaXZlIHBlcnNvbmFsIGp1cmlzZGljdGlvbiBvZiBhbmQgdmVudWUgaW4gYSBjb3VydCBvZiBjb21wZXRlbnQganVyaXNkaWN0aW9uIGxvY2F0ZWQgaW4gU2FudGEgQ2xhcmEgQ291bnR5IGlzIHRoZSBTdGF0ZSBvZiBDYWxpZm9ybmlhLiBBbnkgY2F1c2Ugb2YgYWN0aW9uIG9yIGNsYWltIHdpdGggcmVzcGVjdCB0byB0aGUgU29mdHdhcmUgcHJvdmlkZWQgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgbXVzdCBiZSBjb21tZW5jZWQgd2l0aGluIG9uZSAoMSkgeWVhciBhZnRlciB0aGUgY2xhaW0gb3IgY2F1c2Ugb2YgYWN0aW9uIGFyaXNlcyBvciBzdWNoIGNsYWltIG9yIGNhdXNlIG9mIGFjdGlvbiBpcyBiYXJyZWQuIFNob3VsZCBhbnkgcHJvdmlzaW9uIG9mIHRoaXMgQWdyZWVtZW50IGJlIGRlY2xhcmVkIHVuZW5mb3JjZWFibGUgYnkgYSBjb3VydCBvZiBjb21wZXRlbnQganVyaXNkaWN0aW9uLCB0aGVuIHN1Y2ggcHJvdmlzaW9uIHNoYWxsIGJlIGRlZW1lZCBzZXZlcmFibGUgZnJvbSB0aGlzIEFncmVlbWVudCBhbmQgY2hhbmdlZCBhbmQgaW50ZXJwcmV0ZWQgc28gYXMgdG8gYmVzdCBhY2NvbXBsaXNoIHRoZSBvYmplY3RpdmVzIG9mIHRoZSBvcmlnaW5hbCBwcm92aXNpb24gdG8gdGhlIGZ1bGxlc3QgZXh0ZW50IGFsbG93ZWQgYnkgbGF3LiBTdWNoIGFuIGV2ZW50IHNoYWxsIG5vdCBhZmZlY3QgdGhlIHJlbWFpbmRlciBoZXJlb2YgYW5kIHRoZSByZW1haW5pbmcgcHJvdmlzaW9ucyBzaGFsbCByZW1haW4gaW4gZnVsbCBmb3JjZSBhbmQgZWZmZWN0LiBTVVBFUk1JQ1JPIHJlc2VydmVzIGFsbCByaWdodHMgaW4gdGhlIFNvZnR3YXJlIG5vdCBzcGVjaWZpY2FsbHkgZ3JhbnRlZCBpbiB0aGlzIEFncmVlbWVudC4gVGhlIExpY2Vuc2VlIGFncmVlcyB0byBpbmRlbW5pZnksIGRlZmVuZCBhbmQgaG9sZCBTVVBFUk1JQ1JPIGhhcm1sZXNzIGZyb20gYW55IGFuZCBhbGwgZXhwZW5zZXMsIGp1ZGdtZW50cywgcGVuYWx0aWVzLCBvciBvdGhlciBsaWFiaWxpdGllcyBieSByZWFzb24gb2YgaXRzIGZhaWx1cmUgdG8gY29tcGx5IHdpdGggYW55IHByb3Zpc2lvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQuPGJyPjxicj48Yj45LjwvYj4gRXhwb3J0IFJlZ3VsYXRpb25zLiBBbGwgU29mdHdhcmUgYW5kIHRlY2huaWNhbCBkYXRhIGRlbGl2ZXJlZCB1bmRlciB0aGlzIExpY2Vuc2UgYXJlIHN1YmplY3QgdG8gVS5TLiBleHBvcnQgY29udHJvbCBsYXdzIGFuZCBtYXkgYmUgc3ViamVjdCB0byBleHBvcnQgb3IgaW1wb3J0IHJlZ3VsYXRpb25zIGluIG90aGVyIGNvdW50cmllcy4gWW91IG1heSBub3QgdXNlIG9yIG90aGVyd2lzZSBleHBvcnQgb3IgcmUtZXhwb3J0IHRoZSBTb2Z0d2FyZSBleGNlcHQgYXMgYXV0aG9yaXplZCBieSBVLlMuIGxhdyBhbmQgdGhlIGxhd3Mgb2YgdGhlIGp1cmlzZGljdGlvbiBpbiB3aGljaCB0aGUgU29mdHdhcmUgd2FzIG9idGFpbmVkLiBZb3UgYWdyZWUgdG8gY29tcGx5IHN0cmljdGx5IHdpdGggYWxsIHN1Y2ggbGF3cyBhbmQgcmVndWxhdGlvbnMgYW5kIGFja25vd2xlZGdlIHRoYXQgdGhlIFNvZnR3YXJlIG1heSBub3QgYmUgZXhwb3J0ZWQgb3IgcmUtZXhwb3J0ZWQgKGkpIGludG8gKG9yIHRvIGEgbmF0aW9uYWwgb3IgcmVzaWRlbnQgb2YpIGFueSBVLlMuIGVtYmFyZ29lZCBjb3VudHJ5IG9yIChpaSkgdG8gYW55b25lIG9uIHRoZSBVLlMuIFRyZWFzdXJ5IERlcGFydG1lbnQncyBsaXN0IG9mIFNwZWNpYWxseSBEZXNpZ25hdGVkIE5hdGlvbmFscyBvciB0aGUgVS5TLiBDb21tZXJjZSBEZXBhcnRtZW50J3MgVGFibGUgb2YgRGVuaWFsIE9yZGVycyAoZWFjaCwgYSAiTGlzdCIpLiBCeSB1c2luZyB0aGUgU29mdHdhcmUsIHlvdSByZXByZXNlbnQgYW5kIHdhcnJhbnR5IHRoYXQgeW91IGFyZSBub3QgbG9jYXRlZCBpbiwgdW5kZXIgdGhlIGNvbnRyb2wgb2YsIG9yIGEgbmF0aW9uYWwgb3IgcmVzaWRlbnQgb2YgYW55IHN1Y2ggY291bnRyeSBvciBvbiBhbnkgc3VjaCBMaXN0Ljxicj48YnI%2BPGI%2BMTAuPC9iPiBBY2tub3dsZWRnbWVudCBhbmQgRXhjbHVzaXZpdHkuIExJQ0VOU0VFIEFDS05PV0xFREdFUyBUSEFUIElUIEhBUyBSRUFEIFRISVMgQUdSRUVNRU5ULCBVTkRFUlNUQU5EIElULCBBTkQgQUdSRUUgVE8gQkUgQk9VTkQgQlkgSVRTIFRFUk1TIEFORCBDT05ESVRJT05TLiBMSUNFTlNFRSBGVVJUSEVSIEFHUkVFUyBUSEFUIElUIElTIFRIRSBDT01QTEVURSBBTkQgRVhDTFVTSVZFIFNUQVRFTUVOVCBPRiBUSEUgQUdSRUVNRU5UIEJFVFdFRU4gVVMgV0hJQ0ggU1VQRVJDRURFUyBBTlkgUFJPUE9TQUwgT1IgUFJJT1IgQUdSRUVNRU5ULCBPUkFMIE9SIFdSSVRURU4sIEFORCBBTlkgT1RIRVIgQ09NTVVOSUNBVElPTlMgQkVUV0VFTiBUSEUgUEFSVElFUyBSRUxBVElORyBUTyBUSEUgU1VCSkVDVCBNQVRURVIgT0YgVEhJUyBBR1JFRU1FTlQuIE5vIHByb3Zpc2lvbiBhcHBlYXJpbmcgb24gYW55IGZvcm0gb3JpZ2luYXRlZCBieSBMaWNlbnNlZSBzaGFsbCBiZSBhcHBsaWNhYmxlIG9yIGhhdmUgYW55IGZvcmNlIG9yIGVmZmVjdCB1bmxlc3Mgc3VjaCBwcm92aXNpb24gaXMgZXhwcmVzc2x5IGFjY2VwdGVkIGluIHdyaXRpbmcgYnkgYW4gb2ZmaWNlciBvZiBTVVBFUk1JQ1JPLiBUaGlzIEFncmVlbWVudCBjYW5ub3QgYmUgbW9kaWZpZWQgYnkgcHVyY2hhc2Ugb3JkZXJzIG9yIG90aGVyIGZvcm1zLCBhZHZlcnRpc2VtZW50cywgb3Igb3JhbCBvciB3cml0dGVuIHJlcHJlc2VudGF0aW9ucyBvZiByZXByZXNlbnRhdGl2ZXMgb2YgTGljZW5zZWUgb3IgU1VQRVJNSUNSTywgb3IgYW55b25lIGVsc2UsIHVubGVzcyBhIHdyaXR0ZW4gYW1lbmRtZW50IGhhcyBiZWVuIHNpZ25lZCBieSBhIFNVUEVSTUlDUk8gb2ZmaWNlci4fAgKAAmRkAgsPZBYCAgEPPCsACQEADxYCHg1OZXZlckV4cGFuZGVkZ2RkAg0PZBYCAgEPPCsACQEADxYCHwdnZGQCDw9kFgICAQ88KwAJAQAPFgIfB2dkZAIRDw8WAh8GZ2QWAgIBDzwrAAkCAA8WBh8HZB4MU2VsZWN0ZWROb2RlZB4JTGFzdEluZGV4AgFkCBQrAAJkFCsAAhYEHgtOYXZpZ2F0ZVVybAUfaHR0cHM6Ly93d3cuc3VwZXJtaWNyby5DT00vU01TLx4IRXhwYW5kZWRnZGQCEw9kFgICAQ88KwAJAQAPFgIfB2dkZBgCBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WAQUZY3RsMDAkVHJlZVZpZXdfQmFja1RvU01DSQUZY3RsMDAkQ1BDZW50ZXIkTXlHcmlkVmlldw88KwAKAQgCAWQabeybef5KGAnaCK7v2vQc2a00Wg%3D%3D&__VIEWSTATEGENERATOR=51AA6286&__SCROLLPOSITIONX=0&__SCROLLPOSITIONY=296.79998779296875&__EVENTVALIDATION=%2FwEWDALhp8SFDALrteqdCwKEh7PuBQKz2ZK8DgLrn5ifAgKK1ZSnAgLDn8SaBwLDotPPDwLa2dqdDALa2e7mBQLa2bLUDwLa2cawB7%2FrA5ZwTs0THYWn9Mh8UN3HaK5T&ctl00%24CPCenter%24Hidden_EmailAddress=1%401.2&ctl00%24CPCenter%24Hidden_RequestType=0&ctl00%24CPCenter%24Hidden_Category=SUM \
--compressed -o %o"
)

package() {
	cd sum_"$pkgver"_Linux_x86_64
	
	install -Dm766 sumrc.sample "$pkgdir/etc/sumrc"
	sed -i '1{s|.*|# To use this config you should symlink to this file with "ln -s /etc/sumrc $HOME/.sumrc" command.|}' "$pkgdir/etc/sumrc"
	sed -i '2{s|.*|# Alternatively, invoke supermicro-update-manager with "--rc_path=/etc/sumrc" parameter.|}' "$pkgdir/etc/sumrc"
	sed -i 's|#journal_path = /home/administrator/journal/supermicro/test|journal_path = /var/log/supermicro-update-manager|' "$pkgdir/etc/sumrc"
	sed -i 's|#journal_level = 0|journal_level = 6|' "$pkgdir/etc/sumrc"

	install -m757 -d "${pkgdir}"/var/log/supermicro-update-manager
	
	# acpica_bin folder: contains acpidump and acpiexec. I do not know when they are used, so did not packaged them.
	# driver folder: sum_bios.ko only needed if InBand SMI E7h support is not implemented in BIOS. I have not seen such systems, but if you have, please contact me and I will edit pkgbuild.
	# ExternalData folder: contains SMCIPID.txt, tui.fnt, VENID.txt. I do not know when they are used, so did not packaged them.
	
	install -D SUM_UserGuide.pdf "$pkgdir/usr/share/doc/supermicro-update-manager/SUM_UserGuide.pdf"
	install -D PlatformFeatureSupportMatrix.pdf "$pkgdir/usr/share/doc/supermicro-update-manager/PlatformFeatureSupportMatrix.pdf"
	install -Dm755 sum "$pkgdir/usr/bin/supermicro-update-manager" # rename executable file to not conflict with gnu sum.
	
	# policy_sample.xml: I did not packaged it (yet at least).
	
	msg2 "Warning! I did not explored all files extensively yet. Some files may be missing from original archive. See PKGBUILD for details."
}
