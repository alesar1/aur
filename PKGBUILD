# Maintainer: Moses Narrow <moe_narrow@use.startmail.com>
# Maintainer: Rudi [KittyCash] <rudi@skycoinmail.com>
projectname=skycoin
pkgname=skywire
pkgname1=skywire
pkgdesc="TESTNET Skywire: Building a New Internet. Skycoin.com"
pkgver='autogenerated'
pkggopath="github.com/${projectname}/${pkgname1}"
pkgrel=1
arch=('any')
url="https://${pkggopath}"
license=()
makedepends=(dep git go gcc)
provides=('skywire')
conflicts=('skywire-mainnet')
source=("git+${url}.git#branch=${BRANCH:-master}")
sha256sums=('SKIP')

export GOOS=linux
export GOPATH=${srcdir}
export CGO_ENABLED=0

case "$CARCH" in
x86)      export GOARCH="386" GO386="387" ;;
x86_64)   export GOARCH="amd64" ;;
arm*)     export GOARCH="arm" ;;
armel)    export GOARCH="arm" GOARM="5" ;;
armhf)    export GOARCH="arm" GOARM="6" ;;
armv7)    export GOARCH="arm" GOARM="7" ;;
armv8)    export GOARCH="arm64" ;;
aarch64)  export GOARCH="arm64" ;;
mips)     export GOARCH="mips" ;;
mips64)   export GOARCH="mips64" ;;
mips64el) export GOARCH="mips64le" ;;
mipsel)   export GOARCH="mipsle" ;;
*)        return 1 ;;
	esac

pkgver() {
	cd ${srcdir}/${pkgname1}
	local date=$(git log -1 --format="%cd" --date=short | sed s/-//g)
	local count=$(git rev-list --count HEAD)
	local commit=$(git rev-parse --short HEAD)
	echo "${date}.${count}_${commit}"
}

prepare() {
# https://wiki.archlinux.org/index.php/Go_package_guidelines
mkdir -p ${srcdir}/go/src/${pkggopath//$pkgname1/} ${srcdir}/go/bin
ln -rTsf ${srcdir}/${pkgname1} ${srcdir}/go/src/${pkggopath}
cd ${srcdir}/go/src/${pkggopath}/cmd
git checkout master
git submodule --quiet update --init --recursive

export GOPATH="${srcdir}"/go
export GOBIN=${GOPATH}/bin
export PATH=${GOPATH}/bin:${PATH}
msg2 'installing go dependencies'
#dep init
#dep ensure
}

build() {
export GOPATH=${srcdir}/go
export GOBIN=${GOPATH}/bin
export PATH=${GOPATH}/bin:${PATH}
cd ${srcdir}/go/src/${pkggopath}/cmd
go install \
  -gcflags "all=-trimpath=${GOPATH}" \
  -asmflags "all=-trimpath=${GOPATH}" \
  -ldflags "-extldflags ${LDFLAGS}" \
  -v ./...

msg 2 'creating launcher scripts for skywire'
mkdir -p ${srcdir}/go/${pkgname1}-scripts
cd ${srcdir}/go/${pkgname1}-scripts

echo -e '#!/bin/bash
#launch skywire manager with nohup using new discovery server: discovery.skycoin.com
skywire-manager-nohup
skywire-node-nohup
echo "skywire has started"' > ${pkgname1}
chmod +x ${pkgname1}

echo -e '#!/bin/bash
#launch skywire manager with nohup
export GOBIN=/usr/lib/skycoin/go/bin
export GOPATH=/usr/lib/skycoin/go
nohup skywire-manager -web-dir /usr/lib/skycoin/skywire/static/skywire-manager/ > /dev/null 2>&1 &sleep 3
echo "skywire-manager has started"' > ${pkgname1}-manager-nohup
chmod +x ${pkgname1}-manager-nohup
echo -e '#!/bin/bash
#launch skywire node with nohup & discovery server: discovery.skycoin.com
export GOBIN=/usr/lib/skycoin/go/bin
export GOPATH=/usr/lib/skycoin/go
nohup skywire-node -connect-manager -manager-address 127.0.0.1:5998 -manager-web 127.0.0.1:8000 -discovery-address testnet.skywire.skycoin.com:5999-028ec969bdeb92a1991bb19c948645ac8150468a6919113061899051409de3f243 -address :5000 -web-port :6001 > /dev/null 2>&1 &cd / > /dev/null 2>&1 &sleep 3
echo "skywire-node has started"' > ${pkgname1}-node-nohup
  chmod +x ${pkgname1}-node-nohup
	#edit the following script for the IP of your manager; default is the official setup with manager at 192.168.0.2
	echo -e '#!/bin/bash
#launch skywire official node with nohup & discovery server: discovery.skycoin.com
export GOBIN=/usr/lib/skycoin/go/bin
export GOPATH=/usr/lib/skycoin/go
nohup skywire-node -connect-manager -manager-address 192.168.0.2:5998 -manager-web 192.168.0.2:8000 -discovery-address testnet.skywire.skycoin.com:5999-028ec969bdeb92a1991bb19c948645ac8150468a6919113061899051409de3f243 -address :5000 -web-port :6001 > /dev/null 2>&1 &cd / > /dev/null 2>&1 &sleep 3
echo "skywire-node has started"' > ${pkgname1}-node-miner
  chmod +x ${pkgname1}-node-miner

	echo -e '#!/bin/bash
	#launch skywire qubes node with nohup  & discovery server: discovery.skycoin.com
	export GOBIN=/usr/lib/skycoin/go/bin
	export GOPATH=/usr/lib/skycoin/go
	nohup skywire-node -connect-manager -manager-address 10.137.0.16:5998 -manager-web 10.137.0.16:8000 -discovery-address testnet.skywire.skycoin.com:5999-028ec969bdeb92a1991bb19c948645ac8150468a6919113061899051409de3f243 -address :5000 -web-port :6001 > /dev/null 2>&1 &cd / > /dev/null 2>&1 &sleep 3
	echo "skywire-node has started"' > ${pkgname1}-node-qubes
	  chmod +x ${pkgname1}-node-qubes
#script to set a custom manager IP address at runtime
	echo -e '#!/bin/bash
#launch skywire official node with nohup and a custom IP
read -p "Skywire Manager IP:" SKYMGRIP
echo "Skywire manager set to $SKYMGRIP"
export GOBIN=/usr/lib/skycoin/go/bin
export GOPATH=/usr/lib/skycoin/go
nohup skywire-node -connect-manager -manager-address $SKYMGRIP:5998 -manager-web $SKYMGRIP:8000 -discovery-address testnet.skywire.skycoin.com:5999-028ec969bdeb92a1991bb19c948645ac8150468a6919113061899051409de3f243 -address :5000 -web-port :6001 > /dev/null 2>&1 &cd / > /dev/null 2>&1 &sleep 3
echo "skywire-node has started"' > ${pkgname1}-node-setip
 chmod +x ${pkgname1}-node-setip
#script to set a custom manager IP address at boot to be used with the system.d service.
	echo -e '#!/bin/bash
#launch skywire official node with nohup and a custom IP
export GOBIN=/usr/lib/skycoin/go/bin
export GOPATH=/usr/lib/skycoin/go
nohup skywire-node -connect-manager -manager-address $SKYMGRIP:5998 -manager-web $SKYMGRIP:8000 -discovery-address testnet.skywire.skycoin.com:5999-028ec969bdeb92a1991bb19c948645ac8150468a6919113061899051409de3f243 -address :5000 -web-port :6001 > /dev/null 2>&1 &cd / > /dev/null 2>&1 &sleep 3
echo "skywire-node has started"' > ${pkgname1}-node-envip
	chmod +x ${pkgname1}-node-envip

	echo -e '#!/bin/bash
#halt skywire
sudo killall skywire-node
sudo killall skywire-manager
echo "skywire halted"' > ${pkgname1}-halt
	chmod +x ${pkgname1}-halt

	msg 2 'creating system.d .service files'
	#these service files point to skywire & skywire-node-miner scripts from above
	#the systemd service files included with skywire are wrong for archlinux (debian formatted)
  cd ${srcdir}/go
	echo -e '[Unit]
Description=Skywire Manager Node service
After=network.target
After=network-online.target

[Service]
Type=oneshot
ExecStart=/usr/bin/skywire
RemainAfterExit=yes
ExecStop=/usr/bin/skywire-halt
TryExec=/usr/bin/skywire

[Install]
WantedBy=multi-user.target ' > ${pkgname1}-manager.service

	echo -e '[Unit]
Description=Skywire Node service
After=network.target
After=network-online.target

[Service]
Type=oneshot
ExecStart=/usr/bin/skywire-node-miner
RemainAfterExit=yes
ExecStop=/usr/bin/skywire-halt
TryExec=/usr/bin/skywire

[Install]
WantedBy=multi-user.target ' > ${pkgname1}-node.service
#use the following system.d service for a custom manager IP address;$ echo SKYMGRIP=<IP of skywire manager> >> .bashrc
#this service file points to skywire-node-env
	echo -e '[Unit]
Description=Skywire Node service
After=network.target
After=network-online.target

[Service]
Type=oneshot
ExecStart=/usr/bin/skywire-node-envip
RemainAfterExit=yes
ExecStop=/usr/bin/skywire-halt
TryExec=/usr/bin/skywire

[Install]
WantedBy=multi-user.target ' > ${pkgname1}-node-envip.service
}

package() {
options=(!strip staticlibs)
#create directory trees
mkdir -p ${pkgdir}/usr/bin
mkdir -p ${pkgdir}/usr/lib/${projectname}/go/bin
mkdir -p ${pkgdir}/usr/lib/${projectname}/${pkgname1}/
#restate go envs
export GOPATH=${pkgdir}/usr/lib/${projectname}/go
export GOBIN=${pkgdir}/usr/lib/${projectname}/go/bin
#install binaries & symlink to /usr/bin
msg2 'installing binaries'
skybins=${srcdir}/go/bin
skybins1=${pkgdir}/usr/lib/${projectname}/go/bin/
#collect the binaries & install
skywirebins=$( ls "$skybins")
for i in ${skywirebins}; do
  install -Dm755 ${srcdir}/go/bin/${i} ${pkgdir}/usr/lib/${projectname}/go/bin/${i}
	ln -rTsf ${pkgdir}/usr/lib/${projectname}/go/bin/${i} ${pkgdir}/usr/bin/${pkgname1}-${i}
	chmod 755 ${pkgdir}/usr/bin/${pkgname1}-${i}
done
mv ${pkgdir}/usr/bin/${pkgname1}-${pkgname1}-manager ${pkgdir}/usr/bin/${pkgname1}-manager
chmod 755 ${pkgdir}/usr/bin/${pkgname1}-manager
mv ${pkgdir}/usr/bin/${pkgname1}-${pkgname1}-node ${pkgdir}/usr/bin/${pkgname1}-node
chmod 755 ${pkgdir}/usr/bin/${pkgname1}-node
#install the web dir
cp -r ${srcdir}/${pkgname1}/static ${pkgdir}/usr/lib/${projectname}/${pkgname1}/
mkdir -p ${pkgdir}/usr/share/doc/${projectname}/${pkgname1}
#install the docs
cp -r ${srcdir}/${pkgname1}/docs/api ${pkgdir}/usr/share/doc/${projectname}/${pkgname1}-manager
#install the scripts
skywirescripts=$( ls ${srcdir}/go/${pkgname1}-scripts )
for i in ${skywirescripts}; do
  cp ${srcdir}/go/${pkgname1}-scripts/${i} ${pkgdir}/usr/bin/${i}
done
#install the system.d service
install -Dm644 ${srcdir}/go/${pkgname1}-manager.service ${pkgdir}/usr/lib/systemd/system/${pkgname1}-manager.service
install -Dm644 ${srcdir}/go/${pkgname1}-node.service ${pkgdir}/usr/lib/systemd/system/${pkgname1}-node.service
install -Dm644 ${srcdir}/go/${pkgname1}-node-envip.service ${pkgdir}/usr/lib/systemd/system/${pkgname1}-node-envip.service
}
