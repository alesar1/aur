# Maintainer: Moses Narrow <moe_narrow@use.startmail.com>
# Maintainer: Rudi [KittyCash] <rudi@skycoinmail.com>
projectname=skycoin
pkgname=skywire-git
pkgname1=skywire
githuborg=SkycoinProject
pkgdesc="Skywire: Building a New Internet. Skycoin.com"
pkgver='autogenerated'
#pkgver='autogenerated'
pkggopath="github.com/${githuborg}/skywire-mainnet"
pkgrel=4
#pkgrel=4
arch=('any')
url="https://${pkggopath}"
license=()
makedepends=(git go npm python python2 skycoin-keyring)
provides=('skywire')
conflicts=('skywire')
source=("git+${url}.git#branch=${BRANCH:-master}"
"https://github.com/SkycoinProject/skybian/raw/develop/static/skywire-hypervisor.service"
"https://github.com/SkycoinProject/skybian/raw/develop/static/skywire-visor.service"
"skywire-scripts.tar.gz"
"hypervisorconfig.PKGBUILD"
"PKGBUILD.sig")
sha256sums=('SKIP'
            '99a01866a21a02b7c972262cb054da718419d4e8d37dcd36cefbb5b17d877867'
            'd891297b28463e9ac8f765a95fc1d0488b51d01f47692a7aa62a3ac0baa443ac'
            'd75a22cc4083562a8be67c3bc71304010239fd0308bb6602a000a3fdfbfb3cdb'
            '5243025f2b5dc0f5d2658f54dd2d551699a57f4de2b82c2e1b113992744bd8ad'
            'SKIP')
validpgpkeys=('DE08F924EEE93832DABC642CA8DC761B1C0C0CFC'  # Moses Narrow <moe_narrow@use.startmail.com>
              '98F934F04F9334B81DFA3398913BBD5206B19620') #iketheadore skycoin <luxairlake@protonmail.com>
#tar -czvf skywire-scripts.tar.gz skywire-scripts
#updatepkgsums
export GOOS=linux
export GOPATH="${srcdir}"
export GOROOT="$builddir"
export GOBIN="$GOROOT"/bin
export GOROOT_FINAL=/usr/lib/go

export CGO_ENABLED=1

case "$CARCH" in
x86)      export GOARCH="386" GO386="387" ;;
x86_64)   export GOARCH="amd64" ;;
arm*)     export GOARCH="arm" ;;
armel)    export GOARCH="arm" GOARM="5" ;;
armhf)    export GOARCH="arm" GOARM="6" ;;
armv7)    export GOARCH="arm" GOARM="7" ;;
armv8)    export GOARCH="arm64" ;;
aarch64)  export GOARCH="arm64" ;;
mips)     export GOARCH="mips" ;;
mips64)   export GOARCH="mips64" ;;
mips64el) export GOARCH="mips64le" ;;
mipsel)   export GOARCH="mipsle" ;;
*)        return 1 ;;
	esac

pkgver() {
	cd "${srcdir}/skywire-mainnet"
	local date=$(git log -1 --format="%cd" --date=short | sed s/-//g)
	local count=$(git rev-list --count HEAD)
	local commit=$(git rev-parse --short HEAD)
	echo "${date}.${count}_${commit}"
}

prepare() {
	#gpg --import key
	#verify PKGBUILD signature
	gpg --verify ../PKGBUILD.sig ../PKGBUILD
  # https://wiki.archlinux.org/index.php/Go_package_guidelines
	mkdir -p ${srcdir}/go/src/github.com/${githuborg}/ ${srcdir}/go/bin ${srcdir}/go/apps
  ln -rTsf ${srcdir}/skywire-mainnet ${srcdir}/go/src/${pkggopath}
  cd ${srcdir}/go/src/${pkggopath}/
  #git submodule --quiet update --init --recursive
  export GOPATH="${srcdir}"/go
  export GOBIN=${GOPATH}/bin
  export PATH=${GOPATH}/bin:${PATH}
  msg2 'installing go dependencies'
	go mod vendor -v
  #dep init
  #dep ensure
}

build() {
  export GOPATH=${srcdir}/go
  export GOBIN=${GOPATH}/bin
  export GOAPPS=${GOPATH}/apps
  export PATH=${GOPATH}/bin:${PATH}
  cd ${srcdir}/go/src/${pkggopath}
  #build hypervisor UI
  make install-deps-ui
  make lint-ui
  make build-ui
  #build binaries
	cmddir=${srcdir}/go/src/${pkggopath}/cmd
  #using go build for determinism
	cd ${cmddir}/apps/skychat
  msg2 'building skychat binary'
  go build -trimpath -ldflags '-extldflags ${LDFLAGS}' -ldflags=-buildid= -o $GOAPPS/ .
  cd ${cmddir}/apps/skysocks
  msg2 'building skysocks binary'
  go build -trimpath -ldflags '-extldflags ${LDFLAGS}' -ldflags=-buildid= -o $GOAPPS/ .
  cd ${cmddir}/apps/skysocks-client
  msg2 'building skysocks-client binary'
  go build -trimpath -ldflags '-extldflags ${LDFLAGS}' -ldflags=-buildid= -o $GOAPPS/ .
  cd ${cmddir}/skywire-visor
  msg2 'building skywire-visor binary'
  go build -trimpath -ldflags '-extldflags ${LDFLAGS}' -ldflags=-buildid= -o $GOBIN/ .
  cd ${cmddir}/skywire-cli
  msg2 'building skywire-cli binary'
  go build -trimpath -ldflags '-extldflags ${LDFLAGS}' -ldflags=-buildid= -o $GOBIN/ .
	cd ${cmddir}/setup-node
  msg2 'building setup-node binary'
  go build -trimpath -ldflags '-extldflags ${LDFLAGS}' -ldflags=-buildid= -o $GOBIN/ .
	cd ${cmddir}/hypervisor
  msg2 'building hypervisor binary'
  go build -trimpath -ldflags '-extldflags ${LDFLAGS}' -ldflags=-buildid= -o $GOBIN/ .
  #binary transparency
  cd $GOBIN
  msg2 'binary sha256sums'
  sha256sum $(ls)
  cd $GOAPPS
  sha256sum $(ls)
#	make build
#  make install
#	mv messaging-server ${srcdir}/go/bin/messaging-server
}

package() {
  export GOPATH=${srcdir}/go
  export GOBIN=${GOPATH}/bin
  export GOAPPS=${GOPATH}/apps
  #create directory trees
  mkdir -p ${pkgdir}/usr/bin/apps
  mkdir -p ${pkgdir}/usr/lib/${projectname}/go/bin
  #mkdir -p ${pkgdir}/usr/lib/${projectname}/${pkgname1}/static
	#NOT putting the sources in /usr/lib/skycoin/skywire for size considerations
  #	cp -r ${srcdir}/${pkgname1}/static/skywire-manager-src ${pkgdir}/usr/lib/${projectname}/${pkgname1}/static/skywire-manager-src
  #  cd ${pkgdir}/usr/lib/${projectname}/${pkgname}/static/skywire-manager-src
  #  npm install --user root
  #  find ${pkgdir}/usr/lib/${projectname}/${pkgname} -type d -exec chmod 755 {} +
  # npm gives ownership of ALL FILES to build user
  #  chown -R root:root "$pkgdir"
  msg2 'installing binaries'
  skywirebins=$( ls ${GOBIN} )
  for i in ${skywirebins}; do
    install -Dm755 ${GOBIN}/${i} ${pkgdir}/usr/bin/${i}
  done
  skywireapps=$( ls ${GOAPPS} )
  for i in ${skywireapps}; do
    install -Dm755 ${GOAPPS}/${i} ${pkgdir}/usr/bin/apps/${i}
  done
  #install scripts
  install -Dm755 ${srcdir}/${pkgname1}-scripts/skywire-halt.sh ${pkgdir}/usr/bin/skywire-halt
  install -Dm755 ${srcdir}/${pkgname1}-scripts/skywire.sh ${pkgdir}/usr/bin/skywire
  install -Dm755 ${srcdir}/${pkgname1}-scripts/skywire-setuser.sh ${pkgdir}/usr/bin/skywire-setuser
  install -Dm644  ${srcdir}/hypervisorconfig.PKGBUILD  ${pkgdir}/usr/lib/${projectname}/${pkgname1}/hypervisorconfig/PKGBUILD
	cd ${pkgdir}/usr/bin/
	mv hypervisor ${pkgname1}-hypervisor
  #install the system.d services
	install -Dm644 ${srcdir}/${pkgname1}-hypervisor.service ${pkgdir}/usr/lib/systemd/system/${pkgname1}-hypervisor.service
  install -Dm644 ${srcdir}/${pkgname1}-visor.service ${pkgdir}/usr/lib/systemd/system/${pkgname1}-visor.service
}
