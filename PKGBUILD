#!/bin/false
# Maintainer: Chris Severance aur.severach aATt spamgourmet dott com
# Category: devel

# Todo: service for Pro/5 DataServer

# Basis bug: BLM is hard coded to use /usr/tmp (fixed herein)
# Basis bug: some Basis scripts have cosmetic errors (fixed herein)

# Build instructions:
# sudo must be configured and available to the user account for makepkg.
# In (non root) user account: download PKGBUILD into a new folder
# using any method: cower, wget, web browser, copy through network, or paste into PuTTY

# This PKGBUILD does not automatically download files. Basis does not make
# the files available as direct links. At the Basis web site 
# click Download and enter your info.
# The BLM doesn't require a name. You'll be entering your name twice 
# for Pro/5 and Pro/5 DataServer. That's just the way it works!

# Download from Basis the PRO/5, PRO/5 Data Server, and Standalone PRO/5 BLM.
# You do not need to have already purchased a license to download. 
# This PKGBUILD is made for both 32 and 64 bit versions. The 32 bit
# version can be run on a 64 bit system under multilib. You can download
# just the bitness for your platform or both. I recommend both.

# If you have license files already then "source PKGBUILD" and place
# them in the appropriate z folders. This allows them to be built
# in the package so you can eliminate the install steps. See below 
# for files and folders. Obviously you don't want to distribute a 
# package with your license in it.

# License concepts: (for those who aren't used to Macrovision FlexLM licensing)

# The only product that requires a license generated by Basis
# is the Basis License Manager (BLM). Every installation must
# run at least one BLM server. A single BLM server is
# recommended to get started. Developers may have a separate
# BLM server from the production BLM servers.

# Developer only licenses are available at a low yearly price.
# This is highly recommended for active developers.
# * You get get all features enabled. Good for testing to determine
#   whether a better license would be worthwhile.
# * You don't get kicked when the production BLM servers restart, 
#   crash, or run out of licenses.
# * You don't consume one or more full licenses needed for users 
#   on production systems.
# * If you develop on production systems you can use an altered
#   Pro/5 SERVER configuration so your runs use licenses from 
#   the BLM serving your developers license.

# Other Pro/5 products can be installed on any
# machines that have network access to a BLM server.
# The BLM server should not be enabled unless you have
# a BLM license that isn't served by another BLM server.
# Simple installations will run Pro/5 and the BLM
# on the same server.

# It is not necessary to have a functioning BLM server to try Pro/5.
# You can test suitability, functionality, run, and list your programs.
# Once your BLM server is up and running you can point your Pro/5
# installs to it and they will become fully functional without nag screens.

# While the BLM license is locked to the BLM server it was activated on, 
# BLM license checkout is not machine locked, platform or or OS specific. 
# You can run Pro/5 on as many different machines and OS as you like. 
# You can try other platforms to see if they are better suited to your needs.
# All you need is a BLM server with available licenses to point to. 

# BLM License file security content may improve over time. Newer revisions
# of Pro/5 may require features not found in old license files or BLM servers.
# Contact Basis for an updated license file or for BLM server changes.
# Older revisions of Pro/5 are expected to run with newer licenses 
# and BLM servers.

# How to use Basis installer:

# install is the Basis installer, typically found in /usr/local/basis
# after the BLM is installed. It must be run as root.
# You can just run it for the menu or specify top level menu items
# install                 # for menu
# install BLM             # starts BLM menu
# install PRO5            # starts PRO5 menu
# install BLM PRO5 PRO5DS # starts BLM menu, then continues on to the PRO5 and PRO5DS menu
# The submenu items (REG, SERVER, ...) are not accepted on the command line

# First time license instructions:

# To License Basis License Manager (BLM)
# 1. Purchase a license. Basis sends you license info 
# as BBX######.htm in an email. 
# This is not the BLM license and does not make your BLM functional.
#
# 2. You install the Pro/5 package including the BLM on the new BLM server.
# install BLM, REG
# Enter your information from the .htm file. 
#
# If you don't have sendmail installed and configured, the EMAIL option won't 
# work. Select OTHER as your delivery type and a file will be generated that 
# you can fax, email, or submit in the web registration tool. This file 
# contains a HostID derived from the machine BLM REG is run from. You must 
# BLM REG on the server that will be running the BLM. The host ID code is not 
# affected by changes to hard drive models or ethernet cards and is tolerant 
# to some variations in OS such as Arch Linux vs CentOS. The HostID is the 
# same for the 32 and 64 bit versions.
#
# To send the license by email you must compose as text only. A HTML email
# will not be accepted. The Basis license server can reply with your 
# 7 day license in as little as 2 minutes. The full license will arrive later.
#
# Note: AutoLic is Windows only and is not available for Linux.
#
# 3. Basis sends you a BLM license "BASIS BBJ License.txt" in an email. Place 
# this in an easy to find location on the new BLM server with a short name.
# install BLM, INSTALL
#  Specify the .txt file you received. Enable your BLM with the systemd commands
# below.
#
# 4. On all your Pro/5 installations select
# install PRO5, SERVER
# and specify the IP or DNS of your new BLM server

# Once installed you can have these licenses integrated into your package
# for faster installs. Copy these files from /usr/local/basis into the
# package folder and make the package again.

# blmgr/*.lic -> zblmgr/
# blmgr/Register.properties -> zblmgr/
# pro5/BASIS.lic -> zpro5/

# Don't do these things in the Basis installer:
# BLM CREATE ADD (done by this package)
# BLM START STOP (see systemd systemctl start/stop below)
# PRO5 SELECT    (done by this package)
# PRO5 CONFIG    (doesn't seem to have any use and doesn't work well because it doesn't start in full screen mode)
# install        (nothing to install if you have supplied the 3 files above)

_opt_blgmgr_user="chris" # default: root, the license manager should not be run as root
_opt_pro5_sql="pro5b"    # default: pro5b for non-sql, pro5s for sql
_opt_pro5_exe="bbx4"     # default: pro5, this link will be created in /usr/local/bin so
                         # Pro/5 is in the path. Select a name that minimizes the number of
                         # scripts you must modify.
_force32bit=0            # default: 0 for native bitness version, 1 for 32 bit version on 64 bit system
                         # with multilib. The package names are different so you
                         # can have all ready for compatibility, performance,
                         # crash testing, or just carrying around for easy installs.

# To build and install package for native bitness:
# makepkg -sCcfi

# To build 32 bit package on 64 bit system
# sh -c 'export CARCH=i686; makepkg -sCcf'

# To build 32 bit multilib package on 64 bit system
# Change _force32bit=1
# makepkg -sCcf

# Once installed and your license is installed you can to enable and start the BLM service.

# systemctl enable basis_lmgrd
# systemctl start basis_lmgrd

# Try out your new install in command line mode
# cd /usr/local/basis/pro5; unset BBTERM; ./pro5
# Try out your new install in full screen mode
# cd /usr/local/basis/pro5; export BBTERM=T0; ./pro5

# Got READY> prompt with no nag screens, all good!
# Type BYE or RELEASE to exit

# So far as I know I've solved every one of the annoyances
# with the Basis install.
# If you have license problems check the logs at /var/log/basis/
# Check the status with
# systemctl status basis_lmgrd

# The setup for a fully functioning Basis BBx Progression Pro/5 environment
# is extensive and not covered here.

# There are no man pages.

# Once installed you should add the utility folders ext, graphics, and std
# to your operating config.bbx. Old utilities should be removed if there are
# no modified versions. Many of the supplied utilities won't work unless all 
# the utilities are the same version. To keep you from becoming dependant on
# custom changes to these files they are locked on install so even 
# root can't edit them. If you want to customize an included utility, make 
# a copy with a new name.

# Uninstall cleanup: Nothing

# For a new version of Pro/5 all you need to change is
# pkgver, source...
# Then run "updpkgsums" to get new md5sums

# ***************** Arch PKGBUILD *******************
set -u
pkgname='basis-pro5'
pkgver='14.0'
pkgrel='1'
# http://www.basis.com/bbx
pkgdesc=('BASIS BBx Progression Pro/5 Business BASIC eXtended for BBj')
url='http://www.basis.com/'
license=('custom:Basis International')
install="${pkgname}-install.sh" # I can find no way to get makepkg to delete this when done
#depends=()

# 32-bit Rev 14.00 Linux Kernel 2.6.17-1.2142_FC4+ AND glibc v2.3+
# 104551200blm111010.Z = BLM              Port 1045
# 104551400.Z          = Pro/5            Port 1045
# 124551400.Z          = Pro/5 DataServer Port 1245
source_i686=('104551200blm111010.Z::file://104551200blm111010.Z' '104551400.Z::file://104551400.Z' '124551400.Z::file://124551400.Z')

md5sums_i686=('c636e2a4a1e1b751d4ed4452e814d10c'
              '2917e1056665be192adb3f99dcef85b4'
              '4d53bd538b66365080cd695bf70de3f2')
md5sums_x86_64=('4711bdb97625b78dbcba941efb9167be'
                '70b8b73f56cc18f720f573a8a980d19b'
                '6fac757c9d0627d8dadff890fad35339')

source_x86_64=('604551200blm111010.Z::file://604551200blm111010.Z' '604551400.Z::file://604551400.Z' '624551400.Z::file://624551400.Z')
# 64-bit Rev 14.00 Linux Kernel v2.6+ and glibc v2.3+
# 604551200blm111010.Z = BLM              Port 6045
# 604551400.Z          = Pro/5            Port 6045
# 624551400.Z          = Pro/5 DataServer Port 6245

if [ "${CARCH:-}" = 'i686' -o "${_force32bit}" -eq 0 ]; then
  arch=('i686' 'x86_64')
else
  :;source=(${source_i686[@]})
  unset source_i686 source_x86_64
  :;md5sums=(${md5sums_i686[@]})
  unset md5sums_i686 md5sums_x86_64
  arch=('any')
  depends=('lib32-glibc')
fi

options=('!docs' 'emptydirs' '!strip') # strip is so poorly implemented that it changes the content and date on executables, even when there's nothing to strip! What were they thinking?
#backup=('etc/trueport/config.tp' 'etc/trueport/pktfwdcfg.tp' 'etc/trueport/sslcfg.tp')
_basedir='/usr/local/basis'
_servicefile='basis_lmgrd.service'

mkdir -p zblmgr zpro5
chmod 644 *.Z zblmgr/* zpro5/*
# prepare() {}

build() {
  set -u
  cd "${srcdir}"

  # The permissions on these files are horrendous
  local _file
  for _file in `find . -type f`; do
    #echo "${_file}"
    local _pm_executable=0
    local _pm_type="`file "${_file}"`"
    local _pm_isdata="${_pm_type##*:}" # bash
    local _pm_isdata="`echo ${_pm_isdata}`" # Trim spaces

    case "${_pm_isdata}" in
      #'empty')         _pm_executable=0;;
      'ASCII text'*)    _pm_executable=0;;
      'HTML'*)          _pm_executable=0;;
      #*'tar archive'*) _pm_executable=0;;
      *'ELF '*)         _pm_executable=1;;
      #*'compressed data'*) _pm_executable=0;;
      *' batch '*)      _pm_executable=1;;
      *' source, '*)    _pm_executable=0;;
      'BBx '*)          _pm_executable=0;;
      *'POSIX shell script'*) _pm_executable=1;;
      *) echo "${_pm_isdata}: ${_file}";;
    esac

    if [ "${_pm_executable}" -eq 0 ]; then
      chmod 644 "${_file}"
    else
      chmod 755 "${_file}"
    fi
  done

  find . -type d -exec chmod 755 {} \;
  chmod 644 scripts/* # these are all sourced
  chmod 744 install # only root can run install

  cat > pro5/config.bbx << EOF
ALIAS T0 /dev/tty xterm
prefix '${_basedir}/pro5/std/' '${_basedir}/pro5/ext/' '${_basedir}/pro5/graphics/'
EOF
  chmod 644 'pro5/config.bbx'
  # these will be marked immutable during install
  chmod 444 pro5/ext/* pro5/std/* pro5/graphics/*

  # Branding the EXE eliminates the need for the license path in an ENV variable
  # Branding didn't work with the Basis installer. Only two files contain BLM_LICLOC.
  local _touches
  for _touches in 'pro5/pro5b' 'pro5/pro5s'; do
    pro5/BLMbrand "${_touches}" "${_touches}.tmp" "${_basedir}/pro5"
    touch -r "${_touches}" "${_touches}.tmp"
    mv "${_touches}.tmp" "${_touches}"
  done

  # bring in license files if provided
  local _basis_folder
  for _basis_folder in *; do
    if [ -d "${_basis_folder}" -a -d "../z${_basis_folder}/" ]; then
      cp -p "../z${_basis_folder}/"* "${_basis_folder}" || : # ignore error on copy
    fi
  done
  set +u
}

package() {
  set -u
  mkdir -p "${pkgdir}${_basedir}"
  cd "${srcdir}"
  for _basis_pkg in *; do
    if [ ! -h "${_basis_pkg}" ]; then
      mv "${_basis_pkg}" "${pkgdir}${_basedir}"
    fi
  done
  cd "${pkgdir}${_basedir}"

  # Perform the BLM CREATE step, auto-install the BasisRunLM
  local _outfile="${pkgdir}${_basedir}/scripts/BasisLicManager.Arch"
  cp -p "${pkgdir}${_basedir}/scripts/BasisLicManager" "${_outfile}"
  # fix a cosmetic script bug.
  sed -i -e 's/ read / funcread /g' \
    -e 's/License Manager not found: ${lmgrdcom}/License Manager not found: \\${lmgrdcom}/g' \
    "${_outfile}"
cat >> "${_outfile}" << EOF
PrintFile() {
  echo -n ""
  #echo "Print Stuff"
}
PrintPrompt() {
  echo -n ""
  #echo "Prompt Stuff"
}
funcread() {
  echo -n ""
  #echo "Read Stuff"
}
CreateRunLM "${pkgdir}${_basedir}/blmgr"
EOF
  sh "${_outfile}" > /dev/null
  rm -f "${_outfile}"

  # We had to add ${pkgdir} to get the install to put the file in the right place
  # now we remove the ${pkgdir} slop from the generated file
  local _lmgrfile="${pkgdir}${_basedir}/blmgr/BasisRunLM"
  sed -i -e "s:${pkgdir}/:/:g" "${_lmgrfile}"

  # The systemd service doesn't work right unless you have hash bang on the front
  mv "${_lmgrfile}" "${_lmgrfile}.Arch"
  echo '#!/bin/sh' > "${_lmgrfile}"
  cat "${_lmgrfile}.Arch" >> "${_lmgrfile}"
  chmod 755 "${_lmgrfile}"
  rm -f "${_lmgrfile}.Arch"

  # Place the log where logs belong
  local _logfolder='/var/log/basis'
  sed -i -e "s:/usr/local/basis/blmgr/log:${_logfolder}:g" "${_lmgrfile}"
  # the log must be world writable so we can run the manager under a non root user's account
  install -d -m755 "${pkgdir}${_logfolder}"
  chmod 777 "${pkgdir}${_logfolder}"
  # should we chown this on install?

  # disable BLM CREATE ADD START STOP. We do all this.
  _outfile="${pkgdir}${_basedir}/scripts/BasisLicManager"
  if ! grep -q 'Arch Linux' "${_outfile}"; then
    cp -p "${_outfile}" "${_outfile}.Arch"
    cat >> "${_outfile}" << EOF

# Automatically added by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# http://aur.archlinux.org/

# The commands
# BLM CREATE ADD START STOP
# are not compatible with Arch Linux systemd.

# The Arch Linux PKGBUILD performs CREATE automatically.
# The Arch Linux PKGBUILD also creates systemd scripts (ADD) for
# START and STOP.

# The original functionality is disabled and substituted with
# instructionals for Arch Linux.

# These modifications do not bypass any license agreements (AcceptLic).

CreateRunLM () 
{
        echo "This function has already been completed by the Arch Linux installer."
        echo ""
        PrintPrompt ReturnToContinue
        read crlm_answer
}

InstallRunLM ()
{
  CreateRunLM
}

StartBLM ()
{
    echo "To start your license manager use:"
    echo "  systemctl start basis_lmgrd"
    echo ""
    echo "To have your license mananger start at every boot use:"
    echo "  systemctl enable basis_lmgrd"
    echo ""
    echo "To check the status of your license manager"
    echo "  systemctl status basis_lmgrd"
    echo ""
        PrintPrompt ReturnToContinue
        read crlm_answer
}

StopBLM ()
{
    echo "To stop your license manager use:"
    echo "  systemctl stop basis_lmgrd"
    echo ""
    echo "To stop your license mananger from starting at every boot use:"
    echo "  systemctl disable basis_lmgrd"
    echo ""
    echo "To check the status of your license manager"
    echo "  systemctl status basis_lmgrd"
    echo ""
        PrintPrompt ReturnToContinue
        read crlm_answer
}
EOF
    touch -r "${_outfile}.Arch" "${_outfile}"
    rm -rf "${_outfile}.Arch"
  fi

  # systemd support
  cat > "${_servicefile}" << EOF
[Unit]
Description=Basis License Manager
After=network.target
[Service]
User=$_opt_blgmgr_user
Type=forking
ExecStart=${_basedir}/blmgr/BasisRunLM
ExecStop=${_basedir}/blmgr/lmutil lmdown -vendor basis
RemainAfterExit=yes
[Install]
WantedBy=multi-user.target
EOF
  mkdir -p "${pkgdir}/usr/lib/systemd/system/"
  install -m 644 "${_servicefile}" "${pkgdir}/usr/lib/systemd/system/"
  rm -f "${_servicefile}"

  # Branding makes this env variable unnecessary. This requires a reboot or a relogin
  # Branding works immediately and can't be busted by someone messing with scripts
  if ! :; then
    local _licfiles
    for _licfiles in csh sh; do
      local _licfile="basis_lmgr.${_licfile}s"
      cat > "${_licfile}" << EOF
# Automatically generated by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# http://aur.archlinux.org/

# This file tells Basis Pro/5 where to look for it's license

LM_LICENSE_FILE="${_basedir}/pro5/BASIS.lic"
export LM_LICENSE_FILE
EOF
      mkdir -p "${pkgdir}/etc/profile.d/"
      install -m 755 "${_licfile}" "${pkgdir}/etc/profile.d/"
      rm -f "${_licfile}"
    done
  fi

  # Fix script error that makes the user wonder why the installer doesn't reread the phone
  cp -p 'scripts/BasisReg' 'scripts/BasisReg.Arch'
  sed -i -e 's:"Delivery"[)]    :"Phone")blr_phone="${blr_propval}" ;;\n"Delivery") :g' \
    'scripts/BasisReg'
  touch -r 'scripts/BasisReg.Arch' 'scripts/BasisReg'
  rm -f 'scripts/BasisReg.Arch'

  # turns out that OTHER works perfectly so we don't need all these hacks. 
  # it's here in case someone wants to see how this can be done
  if ! :; then
    # Make a workable email system for those who don't have sendmail
    # Enable automatic operation
    sed -i -e 's: blr_orighostid="\$: $blr_readreturn\nblr_orighostid="\$:g' \
      'scripts/BasisReg'

    sed -i -e 's: glr_mthd="\$1":\nif [ "$glr_tmpfolder" = "" ]; then\n  glr_tmpfolder=".."\nfi\nglr_mthd="$1":g' \
           -e 's:\.\./\${glr_tmpfile}:${glr_tmpfolder}/${glr_tmpfile}:g' \
      'scripts/BasisFuns'

    sed -i -e 's: blm|BLM[)]: email|EMAIL) cd "${CurDir}/blmgr";blr_readreturn="return";BasisLicRegister;glr_tmpfolder="/tmp";GenLicRequest EMAIL;echo "";echo "Generated $glr_tmpfolder/$glr_tmpfile";echo "";echo "How to send\:";echo "Compose new message in your email.";echo "Disable HTML or Rich Text--send as text only";echo "Subject\: (blank subject)";echo "Paste $glr_tmpfile into body (not as attachment)";echo "Copy To\: address to your To\: field";echo "Remove To\: address and first blank line from email body";echo "Erase or disable any signatures";echo "Send Email";echo "rm $glr_tmpfolder/$glr_tmpfile" ;;\nblm|BLM):g' install
    _emailfile="${srcdir}/genemail.sh"

    rm -f "${_emailfile}"
    cat > "${_emailfile}" << EOF
#!/bin/sh
# Automatically generated by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# http://aur.archlinux.org/
cd "\`dirname "\$0"\`"
if [ ! -s "blmgr/Register.properties" ]; then
  echo "Please run the installer"
  echo "BLM REG"
  echo "Select EMAIL as your delivery preference"
else
  ./install email
fi
EOF

    install -m 755 "${_emailfile}" "${pkgdir}/${_basedir}"
    rm -f "${_emailfile}"
  fi

  sed -i -e 's:^\(CurDir=\):if [ $EUID -ne 0 ]; then\n  echo "Must be root"\n  exit 1\nfi\n\n \1:g' 'install'

  # select executable
  mkdir -p "${pkgdir}/usr/local/bin"
  ln -s "${_basedir}/pro5/${_opt_pro5_sql}" "${pkgdir}/usr/local/bin/${_opt_pro5_exe}"

  # create bin links findable by the path
  local _pro5exe
  for _pro5exe in 'pro5cpl' 'pro5plot' 'pro5lst'; do
    ln -s "${_basedir}/pro5/${_pro5exe}" "${pkgdir}/usr/local/bin/"
  done
  # a symlink is better than what the Basis installer does
  ln -s "${_opt_pro5_sql}" "${pkgdir}/${_basedir}/pro5/pro5"
  set +u
}

cat > "${install}" << EOF
post_upgrade() {
  #mandb -q
  systemctl daemon-reload
  #depmod -a
  systemctl -q is-enabled "${_servicefile}"
  if [ "\$?" -eq "0" ]; then  
    systemctl start "${_servicefile}"
  fi
  #echo "Startup scripts updated or installed"
  # This prevents editing of the supplied utilites. Please make a copy.
  # chattr ensures that even root can't do it
  chattr +i ${_basedir}/pro5/ext/* ${_basedir}/pro5/std/* ${_basedir}/pro5/graphics/*
}

post_install() {
  post_upgrade
  # It's a shame this path is hard coded into the license manager.
  # This, or maybe a binary patch?
  ln -s /tmp /usr/tmp || :
}

pre_upgrade() {
  systemctl stop "${_servicefile}"
  chattr -i ${_basedir}/pro5/ext/* ${_basedir}/pro5/std/* ${_basedir}/pro5/graphics/*
}

pre_remove() {
  pre_upgrade
}

post_remove() {
  systemctl daemon-reload
  #echo "startup scripts removed"
  #mandb -q
  if [ -L /usr/tmp ]; then
    rm -f /usr/tmp
  fi
}
EOF
set +u
