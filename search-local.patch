*** orig-nss.c	2018-02-19 15:33:31.000000000 +0000
--- nss.c	2020-06-05 17:29:03.659841552 +0100
***************
*** 126,131 ****
--- 126,149 ----
      }
  }
  
+ static enum nss_status _convert_avahi_result(avahi_resolve_result_t r, int* errnop, int* h_errnop) {
+     switch (r) {
+     case AVAHI_RESOLVE_RESULT_SUCCESS:
+         return NSS_STATUS_SUCCESS;
+ 
+     case AVAHI_RESOLVE_RESULT_HOST_NOT_FOUND:
+         *errnop = ETIMEDOUT;
+         *h_errnop = HOST_NOT_FOUND;
+         return NSS_STATUS_NOTFOUND;
+ 
+     case AVAHI_RESOLVE_RESULT_UNAVAIL:
+     default:
+         *errnop = ETIMEDOUT;
+         *h_errnop = NO_RECOVERY;
+         return NSS_STATUS_UNAVAIL;
+     }
+ }
+ 
  static enum nss_status gethostbyname_impl(const char* name, int af,
                                            userdata_t* u, int* errnop,
                                            int* h_errnop) {
***************
*** 168,195 ****
      if (mdns_allow_file)
          fclose(mdns_allow_file);
  #endif
- 
      if (!name_allowed) {
          *errnop = EINVAL;
          *h_errnop = NO_RECOVERY;
          return NSS_STATUS_UNAVAIL;
      }
  
!     switch (do_avahi_resolve_name(af, name, u)) {
!     case AVAHI_RESOLVE_RESULT_SUCCESS:
!         return NSS_STATUS_SUCCESS;
! 
!     case AVAHI_RESOLVE_RESULT_HOST_NOT_FOUND:
!         *errnop = ETIMEDOUT;
!         *h_errnop = HOST_NOT_FOUND;
!         return NSS_STATUS_NOTFOUND;
! 
!     case AVAHI_RESOLVE_RESULT_UNAVAIL:
!     default:
!         *errnop = ETIMEDOUT;
!         *h_errnop = NO_RECOVERY;
!         return NSS_STATUS_UNAVAIL;
!     }
  }
  
  enum nss_status _nss_mdns_gethostbyname4_r(const char* name,
--- 186,211 ----
      if (mdns_allow_file)
          fclose(mdns_allow_file);
  #endif
      if (!name_allowed) {
+ 		if (!strstr(name, ".")) {
+ 			const char *p="local";
+ 			int fullnamesize;
+ 			char *fullname;
+ 			fullnamesize = strlen(name) + strlen(p) + 2;
+ 			if ((fullname = malloc(fullnamesize))){
+ 				avahi_resolve_result_t r;
+ 				snprintf(fullname, fullnamesize, "%s.%s", name, p);
+     			r = do_avahi_resolve_name(af, fullname, u);
+ 				free(fullname);
+ 				return _convert_avahi_result(r, errnop, h_errnop);
+ 				}
+ 			}
          *errnop = EINVAL;
          *h_errnop = NO_RECOVERY;
          return NSS_STATUS_UNAVAIL;
      }
  
!     return _convert_avahi_result(do_avahi_resolve_name(af, name, u), errnop, h_errnop);
  }
  
  enum nss_status _nss_mdns_gethostbyname4_r(const char* name,
