diff --git a/packages/hadron-build/commands/release.js b/packages/hadron-build/commands/release.js
index e84733eaa..f016360bc 100644
--- a/packages/hadron-build/commands/release.js
+++ b/packages/hadron-build/commands/release.js
@@ -480,9 +480,6 @@ exports.run = (argv, done) => {
     task('write license file', writeLicenseFile),
     task('remove development files', removeDevelopmentFiles),
     !noAsar && task('create application asar', createApplicationAsar),
-    !skipInstaller && task('create branded installer', createBrandedInstaller),
-    task('create application zip', createApplicationZip),
-    task('store build configuration as json', writeConfigToJson)
   ].filter(Boolean));
 
   return async.series(tasks, (_err) => {
@@ -496,9 +493,5 @@ exports.run = (argv, done) => {
 exports.handler = (argv) => {
   exports.run(argv, (_err, CONFIG) => {
     cli.abortIfError(_err);
-    cli.ok(`${CONFIG.assets.length} assets successfully built`);
-    CONFIG.assets.map(function(asset) {
-      cli.info(asset.path);
-    });
   });
 };
diff --git a/packages/hadron-build/lib/target.js b/packages/hadron-build/lib/target.js
index 8911ff4ed..2b60b1865 100644
--- a/packages/hadron-build/lib/target.js
+++ b/packages/hadron-build/lib/target.js
@@ -10,7 +10,6 @@ const path = require('path');
 const { promisify } = require('util');
 const normalizePkg = require('normalize-package-data');
 const parseGitHubRepoURL = require('parse-github-repo-url');
-const ffmpegAfterExtract = require('electron-packager-plugin-non-proprietary-codecs-ffmpeg').default;
 const windowsInstallerVersion = require('./windows-installer-version');
 const debug = require('debug')('hadron-build:target');
 const execFile = promisify(childProcess.execFile);
@@ -213,7 +212,6 @@ class Target {
       arch: this.arch,
       electronVersion: this.electronVersion,
       sign: null,
-      afterExtract: [ffmpegAfterExtract]
     };
 
     if (this.platform === 'win32') {
