diff --git a/CMakeLists.txt b/CMakeLists.txt
index 189838a..102d34f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -247,27 +247,17 @@ add_custom_command(
 set(GPU_CODE modelHandler_OpenCL.cl.h)
 
 if(CUDA_FOUND)
-	add_custom_command(
-		OUTPUT modelHandler_CUDA.ptx20.h
-		COMMAND ${CONV_EXE} modelHandler_CUDA.ptx20 modelHandler_CUDA.ptx20.h str
-		DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx20 conv
-	)
 	add_custom_command(
 		OUTPUT modelHandler_CUDA.ptx30.h
 		COMMAND ${CONV_EXE} modelHandler_CUDA.ptx30 modelHandler_CUDA.ptx30.h str
 		DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx30 conv
 	)
-	add_custom_command(
-		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx20
-		COMMAND ${CUDA_NVCC_EXECUTABLE} ${CUDA_NVCC_FLAGS} -arch=sm_20 -ptx -o ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx20 ${CMAKE_CURRENT_SOURCE_DIR}/src/modelHandler_CUDA.cu
-		DEPENDS src/modelHandler_CUDA.cu
-	)
 	add_custom_command(
 		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx30
 		COMMAND ${CUDA_NVCC_EXECUTABLE} ${CUDA_NVCC_FLAGS} -arch=sm_30 -ptx -o ${CMAKE_CURRENT_BINARY_DIR}/modelHandler_CUDA.ptx30 ${CMAKE_CURRENT_SOURCE_DIR}/src/modelHandler_CUDA.cu
 		DEPENDS src/modelHandler_CUDA.cu
 	)
-	set(GPU_CODE ${GPU_CODE} modelHandler_CUDA.ptx30.h modelHandler_CUDA.ptx20.h)
+	set(GPU_CODE ${GPU_CODE} modelHandler_CUDA.ptx30.h)
 endif()
 
 add_custom_target(gensrcs ALL DEPENDS ${GPU_CODE})
diff --git a/src/modelHandler_CUDA.cpp b/src/modelHandler_CUDA.cpp
index 8ed0ef8..ef37894 100644
--- a/src/modelHandler_CUDA.cpp
+++ b/src/modelHandler_CUDA.cpp
@@ -15,9 +15,6 @@ static void *handle;
 #endif
 
 #ifdef HAVE_CUDA
-static const char prog20[] = 
-#include "modelHandler_CUDA.ptx20.h"
-	;
 static const char prog30[] = 
 #include "modelHandler_CUDA.ptx30.h"
 	;
@@ -136,7 +133,7 @@ initCUDA(ComputeEnv *env, int dev_id)
 		return false;
 	}
 
-	const char *prog = prog20;
+	const char *prog = prog30;
 	if (cap_major >= 3) {
 		prog = prog30;
 	}
