--- src/bin/sage-env.orig	2015-01-06 10:46:04.469687605 +0100
+++ src/bin/sage-env	2015-01-06 10:49:59.547762019 +0100
@@ -110,41 +110,7 @@
 }
 
 
-# New value for SAGE_ROOT: either SAGE_ROOT (if given)
-# or a guessed value based on pwd.
-if [ -n "$SAGE_ROOT" ]; then
-    NEW_SAGE_ROOT="$SAGE_ROOT"
-elif [ -f sage -a -d build ]; then
-    NEW_SAGE_ROOT="."
-elif [ -f ../../sage -a -d ../../build ]; then
-    NEW_SAGE_ROOT="../.."
-else
-    # No idea what SAGE_ROOT should be...
-    echo >&2 "Error: You must set the SAGE_ROOT environment variable or run this"
-    echo >&2 "script from the SAGE_ROOT or SAGE_ROOT/local/bin/ directory."
-    return 1
-fi
-
-# Make NEW_SAGE_ROOT absolute
-NEW_SAGE_ROOT=`cd "$NEW_SAGE_ROOT" && pwd -P`
-
-# Sanity check NEW_SAGE_ROOT
-if [ -f "$NEW_SAGE_ROOT/sage" -a -d "$NEW_SAGE_ROOT/build" ]; then
-    :
-else
-    echo >&2 "Error: SAGE_ROOT is set to a bad value:"
-    echo >&2 "SAGE_ROOT=$SAGE_ROOT"
-    echo >&2 "You must correct it or erase it and run this script from the SAGE_ROOT"
-    echo >&2 "or SAGE_ROOT/local/bin/ directory."
-    return 1
-fi
-
-# Warn if NEW_SAGE_ROOT does not equal the old SAGE_ROOT
-if [ "$SAGE_ROOT" != "$NEW_SAGE_ROOT" -a -n "$SAGE_ROOT" ]; then
-    echo >&2 "Warning: overwriting SAGE_ROOT environment variable:"
-    echo >&2 "Old SAGE_ROOT=$SAGE_ROOT"
-    echo >&2 "New SAGE_ROOT=$NEW_SAGE_ROOT"
-fi
+NEW_SAGE_ROOT="/usr"
 
 # Don't execute the commands more than once for the same version of
 # sage-env.  Check this after checking the validity of SAGE_ROOT, but
@@ -245,21 +211,13 @@
 fi
 
 # Setting Sage-related location environment variables.
-export SAGE_LOCAL="$SAGE_ROOT/local"
-export SAGE_ETC="$SAGE_LOCAL/etc"
-export SAGE_SHARE="$SAGE_LOCAL/share"
-export SAGE_EXTCODE="$SAGE_SHARE/sage/ext"
-export SAGE_SPKG_INST="$SAGE_LOCAL/var/lib/sage/installed"
-export SAGE_LOGS="$SAGE_ROOT/logs/pkgs"
-export SAGE_SRC="$SAGE_ROOT/src"
-export SAGE_DOC_SRC="$SAGE_SRC/doc"
-export SAGE_DOC="$SAGE_SHARE/doc/sage"
-
-if [ -z "${SAGE_ORIG_PATH_SET}" ]; then 
-    SAGE_ORIG_PATH=$PATH && export SAGE_ORIG_PATH 
-    SAGE_ORIG_PATH_SET=True && export SAGE_ORIG_PATH_SET 
-fi 
-export PATH="$SAGE_ROOT/build/bin:$SAGE_SRC/bin:$SAGE_LOCAL/bin:$PATH"
+export SAGE_LOCAL="$SAGE_ROOT"
+export SAGE_ETC="/etc/sage"
+export SAGE_SHARE="$SAGE_LOCAL/share/sage"
+export SAGE_EXTCODE="$SAGE_SHARE/ext"
+export SAGE_SRC="$SAGE_SHARE/source"
+export SAGE_DOC_SRC="/usr/share/doc/sage"
+export SAGE_DOC="/usr/share/doc/sage"
 
 if [ "$SAGE_BANNER" = "bare" ]; then
     export SAGE_BANNER_TEXT=$(cat "$SAGE_ROOT/VERSION.txt")
@@ -319,9 +277,6 @@
 GPHELP="$SAGE_LOCAL/bin/gphelp" && export GPHELP
 GPDOCDIR="$SAGE_LOCAL/share/pari/doc" && export GPDOCDIR
 
-SINGULARPATH="$SAGE_LOCAL/share/singular" && export SINGULARPATH
-SINGULAR_EXECUTABLE="$SAGE_LOCAL/bin/Singular" && export SINGULAR_EXECUTABLE
-
 if [ -z "$SAGE_REPO_ANONYMOUS" ]; then
     SAGE_REPO_ANONYMOUS="git://trac.sagemath.org/sage.git"
     export SAGE_REPO_ANONYMOUS
@@ -364,10 +319,10 @@
     export SAGE_STARTUP_FILE
 fi
 
+export LIBMTX="$DOT_SAGE/meataxe"
+[[ -d $LIBMTX ]] || mkdir $LIBMTX # Create meataxe data dir
+
-IPYTHONDIR=`find "$SAGE_SPKG_INST" -name "ipython*"`
-if [ -n "$IPYTHONDIR" ]; then
-    export IPYTHONDIR="$DOT_SAGE/${IPYTHONDIR##*/}"
-fi
+export IPYTHONDIR="$DOT_SAGE/ipython"
 
 if [ "$PYTHON_EGG_CACHE" = "" ]; then
     PYTHON_EGG_CACHE="$DOT_SAGE/.python-eggs"
@@ -453,8 +400,6 @@
         fi
     fi
 fi
-MAXIMA_PREFIX="$SAGE_ROOT/local" && export MAXIMA_PREFIX
-
 PERL5LIB="$SAGE_LOCAL/lib/perl5:$PERL5LIB" && export PERL5LIB
 
 ############ architecture flags
@@ -622,9 +567,6 @@
     LD_LIBRARY_PATH="$SAGE_LOCAL/bin:$LD_LIBRARY_PATH" && export LD_LIBRARY_PATH
 fi
 
-# See trac 7186 -- this is needed if ecl is moved
-ECLDIR="$SAGE_LOCAL/lib/ecl/" && export ECLDIR
-
 # Handle parallel building/testing/...
 # See Trac Ticket #12016
 # First, figure out the right values for SAGE_NUM_THREADS (default
