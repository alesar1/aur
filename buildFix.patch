--- pebble-tool/pebble_tool/commands/sdk/__init__.py
+++ pebble-tool/pebble_tool/commands/sdk/__init__.py
@@ -27,22 +27,7 @@
         os.environ['PATH'] += ":{}".format(get_arm_tools_path())
 
     def _fix_python(self):
-        # First figure out what 'python' means:
-        try:
-            version = int(subprocess.check_output(["python", "-c", "import sys; print(sys.version_info[0])"]).strip())
-        except (subprocess.CalledProcessError, ValueError):
-            raise ToolError("'python' doesn't mean anything on this system.")
-
-        if version != 2:
-            try:
-                python2_version = int(subprocess.check_output(["python2", "-c",
-                                                                "import sys; print(sys.version_info[1])"]).strip())
-            except (subprocess.CalledProcessError, ValueError):
-                raise ToolError("Can't find a python2 interpreter.")
-            if python2_version < 6:
-                raise ToolError("Require python 2.6 or 2.7 to run the build tools; got 2.{}".format(python2_version))
-            # We have a viable python2. Use our hack to stick 'python' into the path.
-            os.environ['PATH'] = '{}:{}'.format(os.path.normpath(os.path.dirname(__file__)), os.environ['PATH'])
+        pass
 
     def _waf(self, command, *args):
         args = list(args)