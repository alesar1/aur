all_off="$(tput sgr0)"
bold="${all_off}$(tput bold)"
yellow="${bold}$(tput setaf 3)"
blue="${bold}$(tput setaf 4)"
green="${bold}$(tput setaf 2)"

_instructions_install() {
  printf "${yellow}==>${all_off} ${bold}ATENTION:${all_off}
${green}==>${all_off} ${bold}First Steps needed to run 'LSI MegaRAID SNMP Agent':
  ${blue}->${all_off} Create or edit the file: «${bold}/etc/snmp/snmpd.conf${all_off}» and put in: '${bold}pass .1.3.6.1.4.1.3582 /usr/bin/lsi_mrdsnmpmain${all_off}' and save.
  ${blue}->${all_off} Edit the file «${bold}/etc/lsi_mrdsnmp/LSI_StorSNMP.ini${all_off}» and comment out the option you want use.
${green}==>${all_off} ${bold}To start 'LSI MegaRAID Storage Manager Framework' service, run:
  ${blue}->${all_off} # ${bold}systemctl start lsi_msm${all_off}
${green}==>${all_off} ${bold}To start 'LSI MegaRAID SNMP Agent' service, run:
  ${blue}->${all_off} # ${bold}systemctl start lsi_mrdsnmpd$all_off}
${green}==>${all_off} ${bold}To open 'LSI MegaRAID Storage Manager' client:
  ${blue}->${all_off} '${bold}Menu${all_off}' -> '${bold}System${all_off}' -> '${bold}MegaRAID Storage Manager StartupUI${all_off}'
  ${blue}->${all_off} Or launch: # ${bold}/usr/share/MegaRAID_Storage_Manager/startupui.sh${all_off}\n"
}

_instructions_update() {
  if [  -f /etc/snmp/snmpd.conf ]; then
    printf "${yellow}==>${all_off} ${bold}ATENTION:${all_off}
${green}==>${all_off} ${bold}The file «/etc/snmp/snmpd.conf» not found.
  ${blue}->${all_off} Please Create and put this content:
     '${bold}pass .1.3.6.1.4.1.3582 /usr/bin/lsi_mrdsnmpmain${all_off}'
     before start/restart the '${bold}LSI MegaRAID SNMP Agent${all_off}' service.\n"
  else
    printf "${yellow}==>${all_off} ${bold}ATENTION:${all_off}
${green}==>${all_off} ${bold}The file «/etc/snmp/snmpd.conf» is found.${all_off}
  ${blue}->${all_off} Please make sure if have this content:
     '${bold}pass .1.3.6.1.4.1.3582 /usr/bin/lsi_mrdsnmpmain${all_off}'
     before start/restart the 'LSI MegaRAID SNMP Agent' service.\n"
  fi
}

post_install() {
  ldconfig &> /dev/null
  cd "/usr/share/MegaRAID_Storage_Manager"
  jre/bin/java -classpath .:GUI.jar ExternalApp.ConfigRepositoryMain 71244 -set INSTALLER_VERSION "v${1%-*}" &> /dev/null &> /dev/null

  _instructions_install
}

post_upgrade() {
  ldconfig &> /dev/null

  cd "/usr/share/MegaRAID_Storage_Manager"
  rm -fr ActiveClientList.txt
  jre/bin/java -classpath .:Framework/Framework.jar VivaldiHeartbeat ActiveClientList.txt &> /dev/null
  jre/bin/java -classpath .:GUI.jar ExternalApp.ConfigRepositoryMain 71244 -clear &> /dev/null
  jre/bin/java -classpath .:GUI.jar ExternalApp.ConfigRepositoryMain 71244 -set INSTALLER_VERSION "v${1%-*}" &> /dev/null

  _instructions_update
}

pre_remove() {
  cd "/usr/share/MegaRAID_Storage_Manager"
  rm -fr ActiveClientList.txt
  jre/bin/java -classpath .:Framework/Framework.jar VivaldiHeartbeat ActiveClientList.txt  &> /dev/null
  jre/bin/java -classpath .:GUI.jar ExternalApp.ConfigRepositoryMain 71244 -clear  &> /dev/null

  if [ "$(systemctl is-active lsi_msm)" = "active" ]; then
    systemctl stop lsi_msm &> /dev/null
    printf "${yellow}==>${all_off} ${bold}Stopping 'lsi_msm' Service${all_off}\n"
  fi
  if [ "$(systemctl is-enabled lsi_msm)" = "enable" ]; then
    systemctl disable lsi_msm &> /dev/null
    printf "${yellow}==>${all_off} ${bold}Disabling 'lsi_msm' Service${all_off}\n"
  fi
}

post_remove() {
  ldconfig &> /dev/null
  paths=(/usr/share/MegaRAID_Storage_Manager)

  first=true
  for path in ${paths[@]}; do
    if [ -d $path ]; then
      if $first; then
        first=false
        printf "${yellow}==>${all_off} ${bold}Leftover Paths:${all_off}\n"
      fi
      echo "    $paths"
    fi
  done

  files=(/etc/SlAsyncAddpCfg*.cfg)

  first=true
  for files in ${files[@]}; do
    if [ -f $files ]; then
      if $first; then
        first=false
        printf "${yellow}==>${all_off} ${bold}Leftover Files:${all_off}\n"
      fi
      echo "    $files"
    fi
  done
}
