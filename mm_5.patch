--- a/grub-core/kern/efi/mm.c	2022-03-26 23:51:18.575479411 +0100
+++ b/grub-core/kern/efi/mm.c	2022-03-26 23:55:01.813184231 +0100
@@ -478,7 +478,7 @@
 }

 /* Add memory regions.  */
-static void
+static grub_err_t
 add_memory_regions (grub_efi_memory_descriptor_t *memory_map,
 		    grub_efi_uintn_t desc_size,
 		    grub_efi_memory_descriptor_t *memory_map_end,
@@ -506,9 +506,9 @@
 					   GRUB_EFI_ALLOCATE_ADDRESS,
 					   GRUB_EFI_LOADER_CODE);
       if (! addr)
-	grub_fatal ("cannot allocate conventional memory %p with %u pages",
-		    (void *) ((grub_addr_t) start),
-		    (unsigned) pages);
+ 	return grub_error (GRUB_ERR_OUT_OF_MEMORY,
+ 			    "cannot allocate conventional memory %p with %u pages",
+ 			    (void *) ((grub_addr_t) start), (unsigned) pages);

       grub_mm_init_region (addr, PAGES_TO_BYTES (pages));

@@ -518,7 +518,9 @@
     }

   if (required_pages > 0)
-    grub_fatal ("too little memory");
+    return grub_error (GRUB_ERR_OUT_OF_MEMORY, "too little memory");
+
+  return GRUB_ERR_NONE;
 }

 void
@@ -565,6 +567,7 @@
   grub_efi_memory_descriptor_t *filtered_memory_map_end;
   grub_efi_uintn_t map_size;
   grub_efi_uintn_t desc_size;
+  grub_err_t err;
   int mm_status;

   /* Prepare a memory region to store two memory maps.  */
@@ -609,8 +612,11 @@
   sort_memory_map (filtered_memory_map, desc_size, filtered_memory_map_end);

   /* Allocate memory regions for GRUB's memory management.  */
-  add_memory_regions (filtered_memory_map, desc_size,
-		      filtered_memory_map_end, BYTES_TO_PAGES (required_bytes));
+  err = add_memory_regions (filtered_memory_map, desc_size,
+			    filtered_memory_map_end,
+			    BYTES_TO_PAGES (required_bytes));
+  if (err != GRUB_ERR_NONE)
+    return err;

 #if 0
   /* For debug.  */
