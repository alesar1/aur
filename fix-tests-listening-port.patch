--- reposilite-backend/src/test/java/org/panda_lang/reposilite/ReposiliteIntegrationTest.java	(revision bb52fbefa8fc220f50040889c39fdfce70b50204)
+++ reposilite-backend/src/test/java/org/panda_lang/reposilite/ReposiliteIntegrationTest.java	(revision d3608becb48afccfb2ca0b060821be8d7b523aad)
@@ -14,10 +14,12 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.Random;
 
 public abstract class ReposiliteIntegrationTest {
 
     protected static final HttpRequestFactory requestFactory = new NetHttpTransport().createRequestFactory();
+    public static final String testPort = String.valueOf(new Random().nextInt(16383) + 49152);
 
     @TempDir
     protected File workingDirectory;
@@ -30,12 +32,20 @@
     }
 
     protected Reposilite reposilite(File workingDirectory, String... args) throws IOException {
+        return reposilite(testPort, workingDirectory, args);
+    }
+
+    protected Reposilite reposilite(String port, File workingDirectory, String... args) throws IOException {
         FileUtils.copyDirectory(new File("src/test/workspace/repositories"), new File(workingDirectory, "repositories"));
-
-        return ReposiliteLauncher.create(ArrayUtils.mergeArrays(args, ArrayUtils.of(
-                "--working-directory=" + workingDirectory.getAbsolutePath(),
-                "--test-env"
-        ))).orElseThrow(() -> new RuntimeException("Invalid test parameters"));
+        System.setProperty("reposilite.port", port);
+        try {
+            return ReposiliteLauncher.create(ArrayUtils.mergeArrays(args, ArrayUtils.of(
+                    "--working-directory=" + workingDirectory.getAbsolutePath(),
+                    "--test-env"
+            ))).orElseThrow(() -> new RuntimeException("Invalid test parameters"));
+        } finally {
+            System.clearProperty("reposilite.port");
+        }
     }
 
     @AfterEach
@@ -65,7 +75,7 @@
     }
 
     protected GenericUrl url(String uri) {
-        return new GenericUrl("http://localhost:80" + uri);
+        return new GenericUrl("http://localhost:" + testPort + uri);
     }
 
 }
--- reposilite-backend/src/test/java/org/panda_lang/reposilite/ReposiliteLauncherTest.java	(revision bb52fbefa8fc220f50040889c39fdfce70b50204)
+++ reposilite-backend/src/test/java/org/panda_lang/reposilite/ReposiliteLauncherTest.java	(revision d3608becb48afccfb2ca0b060821be8d7b523aad)
@@ -38,10 +38,12 @@
 
         try {
             System.setProperty("reposilite.debugEnabled", "true");
+            System.setProperty("reposilite.port", ReposiliteIntegrationTest.testPort);
             ReposiliteLauncher.main("-wd=" + workingDirectory.getAbsolutePath());
         }
         finally {
             System.clearProperty("reposilite.debugEnabled");
+            System.clearProperty("reposilite.port");
         }
 
         assertTrue(ReposiliteWriter.contains("Debug enabled"));
--- reposilite-backend/src/test/java/org/panda_lang/reposilite/console/CliControllerTest.java	(revision bb52fbefa8fc220f50040889c39fdfce70b50204)
+++ reposilite-backend/src/test/java/org/panda_lang/reposilite/console/CliControllerTest.java	(revision d3608becb48afccfb2ca0b060821be8d7b523aad)
@@ -90,7 +90,7 @@
             @Override
             public void onWebSocketClose(int statusCode, String reason) { }
 
-        }, new URI("ws://localhost:80/api/cli"), clientUpgradeRequest).get();
+        }, new URI("ws://localhost:"+testPort+"/api/cli"), clientUpgradeRequest).get();
     }
 
 }
\ No newline at end of file
--- reposilite-backend/src/test/java/org/panda_lang/reposilite/repository/LookupControllerTest.java	(revision bb52fbefa8fc220f50040889c39fdfce70b50204)
+++ reposilite-backend/src/test/java/org/panda_lang/reposilite/repository/LookupControllerTest.java	(revision d3608becb48afccfb2ca0b060821be8d7b523aad)
@@ -97,11 +97,11 @@
 
     @Test
     void shouldReturn200AndProxiedFile() throws Exception {
-        super.reposilite.getConfiguration().setProxied(Collections.singletonList("http://localhost:8080"));
+        String proxyPort = String.valueOf(Integer.parseInt(testPort)+1);
+        super.reposilite.getConfiguration().setProxied(Collections.singletonList("http://localhost:"+proxyPort));
 
         try {
-            System.setProperty("reposilite.port", "8080");
-            Reposilite proxiedReposilite = super.reposilite(proxiedWorkingDirectory);
+            Reposilite proxiedReposilite = super.reposilite(proxyPort, proxiedWorkingDirectory);
             proxiedReposilite.launch();
 
             File proxiedFile = new File(proxiedWorkingDirectory, "/repositories/releases/proxiedGroup/proxiedArtifact/proxied.txt");
