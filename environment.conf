# Specify additional arguments to pass to promscale on startup
PROMSCALE_ARGS=""

# Available arguments and environment variables:
#  -app string
#        'app' sets application_name in database connection string. This is helpful during debugging when looking at pg_stat_activity. [PROMSCALE_APP] [TS_PROM_APP] (default "promscale@0.4.0")
#  -async-acks
#        Acknowledge asynchronous inserts. If this is true, the inserter will not wait after insertion of metric data in the database. This increases throughput at the cost of a small chance of data loss. [PROMSCALE_ASYNC_ACKS] [TS_PROM_ASYNC_ACKS]
#  -auth-password string
#        Authentication password used for web endpoint authentication. This flag should be set together with auth-username. It is mutually exclusive with auth-password-file and bearer-token flags. [PROMSCALE_AUTH_PASSWORD] [TS_PROM_AUTH_PASSWORD]
#  -auth-password-file string
#        Path for auth password file containing the actual password used for web endpoint authentication. This flag should be set together with auth-username. It is mutually exclusive with auth-password and bearer-token methods. [PROMSCALE_AUTH_PASSWORD_FILE] [TS_PROM_AUTH_PASSWORD_FILE]
#  -auth-username string
#        Authentication username used for web endpoint authentication. Disabled by default. [PROMSCALE_AUTH_USERNAME] [TS_PROM_AUTH_USERNAME]
#  -bearer-token string
#        Bearer token (JWT) used for web endpoint authentication. Disabled by default. Mutually exclusive with bearer-token-file and basic auth methods. [PROMSCALE_BEARER_TOKEN] [TS_PROM_BEARER_TOKEN]
#  -bearer-token-file string
#        Path of the file containing the bearer token (JWT) used for web endpoint authentication. Disabled by default. Mutually exclusive with bearer-token and basic auth methods. [PROMSCALE_BEARER_TOKEN_FILE] [TS_PROM_BEARER_TOKEN_FILE]
#  -config string
#        YAML configuration file path for Promscale. [PROMSCALE_CONFIG] [TS_PROM_CONFIG] (default "config.yml")
#  -db-connect-retries int
#        Number of retries Promscale should make for establishing connection with the database. [PROMSCALE_DB_CONNECT_RETRIES] [TS_PROM_DB_CONNECT_RETRIES]
#  -db-connection-timeout duration
#        Timeout for establishing the connection between Promscale and TimescaleDB. [PROMSCALE_DB_CONNECTION_TIMEOUT] [TS_PROM_DB_CONNECTION_TIMEOUT] (default 1m0s)
#  -db-connections-max int
#        Maximum number of connections to the database that should be opened at once. It defaults to 80% of the maximum connections that the database can handle. [PROMSCALE_DB_CONNECTIONS_MAX] [TS_PROM_DB_CONNECTIONS_MAX] (default -1)
#  -db-host string
#        Host for TimescaleDB/Vanilla Postgres. [PROMSCALE_DB_HOST] [TS_PROM_DB_HOST] (default "localhost")
#  -db-name string
#        Database name. [PROMSCALE_DB_NAME] [TS_PROM_DB_NAME] (default "timescale")
#  -db-password string
#        Password for connecting to TimescaleDB/Vanilla Postgres. [PROMSCALE_DB_PASSWORD] [TS_PROM_DB_PASSWORD]
#  -db-port int
#        TimescaleDB/Vanilla Postgres connection password. [PROMSCALE_DB_PORT] [TS_PROM_DB_PORT] (default 5432)
#  -db-ssl-mode string
#        TimescaleDB/Vanilla Postgres connection ssl mode. If you do not want to use ssl, pass 'allow' as value. [PROMSCALE_DB_SSL_MODE] [TS_PROM_DB_SSL_MODE] (default "require")
#  -db-statements-cache
#        Whether database connection pool should use cached prepared statements. Disable if using PgBouncer [PROMSCALE_DB_STATEMENTS_CACHE] [TS_PROM_DB_STATEMENTS_CACHE] (default true)
#  -db-uri postgres://postgres:password@localhost:5432/timescale?sslmode=require
#        TimescaleDB/Vanilla Postgres DB URI. Example DB URI postgres://postgres:password@localhost:5432/timescale?sslmode=require [PROMSCALE_DB_URI] [TS_PROM_DB_URI]
#  -db-user string
#        TimescaleDB/Vanilla Postgres user. [PROMSCALE_DB_USER] [TS_PROM_DB_USER] (default "postgres")
#  -db-writer-connection-concurrency int
#        Maximum number of database connections for writing per go process. [PROMSCALE_DB_WRITER_CONNECTION_CONCURRENCY] [TS_PROM_DB_WRITER_CONNECTION_CONCURRENCY] (default 4)
#  -high-availability
#        Enable external_labels based HA. [PROMSCALE_HIGH_AVAILABILITY] [TS_PROM_HIGH_AVAILABILITY]
#  -install-extensions
#        Install TimescaleDB, Promscale extension. [PROMSCALE_INSTALL_EXTENSIONS] [TS_PROM_INSTALL_EXTENSIONS] (default true)
#  -labels-cache-size uint
#        Maximum number of labels to cache. [PROMSCALE_LABELS_CACHE_SIZE] [TS_PROM_LABELS_CACHE_SIZE] (default 10000)
#  -leader-election-pg-advisory-lock-id int
#        (DEPRECATED) Leader-election based high-availability. It is based on PostgreSQL advisory lock and requires a unique advisory lock ID per high-availability group. Only a single connector in each high-availability group will write data at one time. A value of 0 disables leader election. [PROMSCALE_LEADER_ELECTION_PG_ADVISORY_LOCK_ID] [TS_PROM_LEADER_ELECTION_PG_ADVISORY_LOCK_ID]
#  -leader-election-pg-advisory-lock-prometheus-timeout duration
#        (DEPRECATED) Prometheus timeout duration for leader-election high-availability. The connector will resign if the associated Prometheus instance does not respond within the given timeout. This value should be a low multiple of the Prometheus scrape interval, big enough to prevent random flips. [PROMSCALE_LEADER_ELECTION_PG_ADVISORY_LOCK_PROMETHEUS_TIMEOUT] [TS_PROM_LEADER_ELECTION_PG_ADVISORY_LOCK_PROMETHEUS_TIMEOUT] (default -1ns)
#  -leader-election-scheduled-interval duration
#        (DEPRECATED) Interval at which scheduled election runs. This is used to select a leader and confirm that we still holding the advisory lock. [PROMSCALE_LEADER_ELECTION_SCHEDULED_INTERVAL] [TS_PROM_LEADER_ELECTION_SCHEDULED_INTERVAL] (default 5s)
#  -log-format string
#        The log format to use [ 'logfmt', 'json' ]. [PROMSCALE_LOG_FORMAT] [TS_PROM_LOG_FORMAT] (default "logfmt")
#  -log-level string
#        Log level to use from [ 'error', 'warn', 'info', 'debug' ]. [PROMSCALE_LOG_LEVEL] [TS_PROM_LOG_LEVEL] (default "info")
#  -memory-target value
#        Target for max amount of memory to use. Specified in bytes or as a percentage of system memory (e.g. 80%). [PROMSCALE_MEMORY_TARGET] [TS_PROM_MEMORY_TARGET] (default 80%)
#  -metrics-cache-size uint
#        Maximum number of metric names to cache. [PROMSCALE_METRICS_CACHE_SIZE] [TS_PROM_METRICS_CACHE_SIZE] (default 10000)
#  -migrate string
#        Update the Prometheus SQL schema to the latest version. Valid options are: [true, false, only]. [PROMSCALE_MIGRATE] [TS_PROM_MIGRATE] (default "true")
#  -multi-tenancy
#        Use multi-tenancy mode in Promscale. [PROMSCALE_MULTI_TENANCY] [TS_PROM_MULTI_TENANCY]
#  -multi-tenancy-allow-non-tenants
#        Allow Promscale to ingest/query all tenants as well as non-tenants. By setting this to true, Promscale will ingest data from non multi-tenant Prometheus instances as well. If this is false, only multi-tenants (tenants listed in 'multi-tenancy-valid-tenants') are allowed for ingesting and querying data. [PROMSCALE_MULTI_TENANCY_ALLOW_NON_TENANTS] [TS_PROM_MULTI_TENANCY_ALLOW_NON_TENANTS]
#  -multi-tenancy-valid-tenants string
#        Sets valid tenants that are allowed to be ingested/queried from Promscale. This can be set as: 'allow-all' (default) or a comma separated tenant names. 'allow-all' makes Promscale ingest or query any tenant from itself. A comma separated list will indicate only those tenants that are authorized for operations from Promscale. [PROMSCALE_MULTI_TENANCY_VALID_TENANTS] [TS_PROM_MULTI_TENANCY_VALID_TENANTS] (default "allow-all")
#  -promql-default-subquery-step-interval duration
#        Default step interval to be used for PromQL subquery evaluation. This value is used if the subquery does not specify the step value explicitly. Example: <metric_name>[30m:]. Note: in Prometheus this setting is set by the evaluation_interval option. [PROMSCALE_PROMQL_DEFAULT_SUBQUERY_STEP_INTERVAL] [TS_PROM_PROMQL_DEFAULT_SUBQUERY_STEP_INTERVAL] (default 1m0s)
#  -promql-enable-feature string
#        [EXPERIMENTAL] Enable optional PromQL features, separated by commas. These are disabled by default in Promscale's PromQL engine. Currently, this includes 'promql-at-modifier' and 'promql-negative-offset'. For more information, see https://github.com/prometheus/prometheus/blob/master/docs/disabled_features.md [PROMSCALE_PROMQL_ENABLE_FEATURE] [TS_PROM_PROMQL_ENABLE_FEATURE]
#  -promql-lookback-delta duration
#        Maximum lookback duration for retrieving metrics during expression evaluations and federation. [PROMSCALE_PROMQL_LOOKBACK_DELTA] [TS_PROM_PROMQL_LOOKBACK_DELTA] (default 5m0s)
#  -promql-max-points-per-ts int
#        Maximum number of points per time-series in a query-range request. This calculation is an estimation, that happens as (start - end)/step where start and end are the 'start' and 'end' timestamps of the query_range. [PROMSCALE_PROMQL_MAX_POINTS_PER_TS] [TS_PROM_PROMQL_MAX_POINTS_PER_TS] (default 11000)
#  -promql-max-samples int
#        Maximum number of samples a single query can load into memory. Note that queries will fail if they try to load more samples than this into memory, so this also limits the number of samples a query can return. [PROMSCALE_PROMQL_MAX_SAMPLES] [TS_PROM_PROMQL_MAX_SAMPLES] (default 50000000)
#  -promql-query-timeout duration
#        Maximum time a query may take before being aborted. This option sets both the default and maximum value of the 'timeout' parameter in '/api/v1/query.*' endpoints. [PROMSCALE_PROMQL_QUERY_TIMEOUT] [TS_PROM_PROMQL_QUERY_TIMEOUT] (default 2m0s)
#  -read-only
#        Read-only mode for the connector. Operations related to writing or updating the database are disallowed. It is used when pointing the connector to a TimescaleDB read replica. [PROMSCALE_READ_ONLY] [TS_PROM_READ_ONLY]
#  -series-cache-initial-size uint
#        Maximum number of series to cache. [PROMSCALE_SERIES_CACHE_INITIAL_SIZE] [TS_PROM_SERIES_CACHE_INITIAL_SIZE] (default 250000)
#  -series-cache-max-bytes value
#        Initial number of elements in the series cache. Specified in bytes or as a percentage of the memory-target (e.g. 50%). [PROMSCALE_SERIES_CACHE_MAX_BYTES] [TS_PROM_SERIES_CACHE_MAX_BYTES] (default 50%)
#  -tls-cert-file string
#        TLS Certificate file for web server, leave blank to disable TLS. [PROMSCALE_TLS_CERT_FILE] [TS_PROM_TLS_CERT_FILE]
#  -tls-key-file string
#        TLS Key file for web server, leave blank to disable TLS. [PROMSCALE_TLS_KEY_FILE] [TS_PROM_TLS_KEY_FILE]
#  -tput-report int
#        Interval in seconds at which throughput should be reported. [PROMSCALE_TPUT_REPORT] [TS_PROM_TPUT_REPORT]
#  -upgrade-extensions
#        Upgrades TimescaleDB, Promscale extensions. [PROMSCALE_UPGRADE_EXTENSIONS] [TS_PROM_UPGRADE_EXTENSIONS] (default true)
#  -upgrade-prerelease-extensions
#        Upgrades to pre-release TimescaleDB, Promscale extensions. [PROMSCALE_UPGRADE_PRERELEASE_EXTENSIONS] [TS_PROM_UPGRADE_PRERELEASE_EXTENSIONS]
#  -use-schema-version-lease
#        Use schema version lease to prevent race conditions during migration. [PROMSCALE_USE_SCHEMA_VERSION_LEASE] [TS_PROM_USE_SCHEMA_VERSION_LEASE] (default true)
#  -web-cors-origin string
#        Regex for CORS origin. It is fully anchored. Example: 'https?://(domain1|domain2)\.com' [PROMSCALE_WEB_CORS_ORIGIN] [TS_PROM_WEB_CORS_ORIGIN] (default ".*")
#  -web-enable-admin-api
#        Allow operations via API that are for advanced users. Currently, these operations are limited to deletion of series. [PROMSCALE_WEB_ENABLE_ADMIN_API] [TS_PROM_WEB_ENABLE_ADMIN_API]
#  -web-listen-address string
#        Address to listen on for web endpoints. [PROMSCALE_WEB_LISTEN_ADDRESS] [TS_PROM_WEB_LISTEN_ADDRESS] (default ":9201")
#  -web-telemetry-path string
#        Web endpoint for exposing Promscale's Prometheus metrics. [PROMSCALE_WEB_TELEMETRY_PATH] [TS_PROM_WEB_TELEMETRY_PATH] (default "/metrics")
