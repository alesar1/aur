diff --git a/src/extension.js b/src/extension.js
index 7b8508d9b31e394e3ecc58e61a2ed5aede3d7b2b..7517a04ff3a14b415efbd8739eb8116caa88ec2e 100644
--- a/src/extension.js
+++ b/src/extension.js
@@ -645,7 +645,7 @@ class OpenWeatherMenuButton extends PanelMenu.Button {
         if (!this._settings)
             this.loadConfig();
         let v = this._settings.get_int('refresh-interval-forecast');
-        return ((v >= 600) ? v : 600);
+        return ((v >= 3600) ? v : 3600);
     }
 
     get _loc_len_current() {
diff --git a/src/preferences/generalPage.js b/src/preferences/generalPage.js
index a33f91ada60fd09aa4a518fd5a536c3b97f8f4dd..bba94569121d9b38562ddecf2892a54796c6ed98 100644
--- a/src/preferences/generalPage.js
+++ b/src/preferences/generalPage.js
@@ -46,7 +46,7 @@ class OpenWeather_GeneralPage extends Adw.PreferencesPage {
                 upper: 1440,
                 step_increment: 1,
                 page_increment: 10,
-                value: this._settings.get_int('refresh-interval-current')
+                value: this._settings.get_int('refresh-interval-current')  / 60
             }),
             climb_rate: 5,
             numeric: true,
@@ -68,7 +68,7 @@ class OpenWeather_GeneralPage extends Adw.PreferencesPage {
                 upper: 1440,
                 step_increment: 1,
                 page_increment: 10,
-                value: this._settings.get_int('refresh-interval-forecast')
+                value: this._settings.get_int('refresh-interval-forecast')  / 60
             }),
             climb_rate: 5,
             numeric: true,
@@ -248,10 +248,10 @@ class OpenWeather_GeneralPage extends Adw.PreferencesPage {
 
         // Bind signals
         currentRefreshSpinButton.connect('value-changed', (widget) => {
-            this._settings.set_int('refresh-interval-current', widget.get_value());
+            this._settings.set_int('refresh-interval-current', 60 * widget.get_value());
         });
         forecastRefreshSpinButton.connect('value-changed', (widget) => {
-            this._settings.set_int('refresh-interval-forecast', widget.get_value());
+            this._settings.set_int('refresh-interval-forecast', 60 * widget.get_value());
         });
         disableForecastSwitch.connect('notify::active', (widget) => {
             if (widget.get_active()) {
