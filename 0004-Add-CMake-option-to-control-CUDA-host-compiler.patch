From 52da91e85e1be4a32f3b5dc286ecc70944f75e9a Mon Sep 17 00:00:00 2001
From: howetuft <howetuft@gmail.com>
Date: Sat, 5 Mar 2022 11:05:49 +0100
Subject: [PATCH 4/4] Add CMake option to control CUDA host compiler

This commit allows to specify CUDA host compiler (nvcc's -ccbin command
line option) when configuring the build. It addresses the case where the
C/C++ compiler to be used in CUDA toolchain should be different from the
default C/C++ compiler.
The new CMake option is named CUDA_HOST_COMPILER and can be used
as follows:
`cmake -DCUDA_HOST_COMPILER=<path-to-compiler>`
---
 CMakeLists.txt            | 2 ++
 src/kernel/CMakeLists.txt | 5 +++++
 2 files changed, 7 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5f65a82a..6f2c0ebd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -110,10 +110,12 @@ if(NOT APPLE)
   option(WITH_CYCLES_CUBIN_COMPILER    "Build cubins with nvrtc based compiler instead of nvcc" OFF)
   option(WITH_CYCLES_CUDA_BUILD_SERIAL "Build cubins one after another (useful on machines with limited RAM)" OFF)
   option(WITH_CUDA_DYNLOAD             "Dynamically load CUDA libraries at runtime (for developers, makes cuda-gdb work)" ON)
+  set(CUDA_HOST_COMPILER "" CACHE FILEPATH "Specify CUDA host compiler (nvcc --compiler-bindir)")
   mark_as_advanced(CYCLES_CUDA_BINARIES_ARCH)
   mark_as_advanced(WITH_CYCLES_CUBIN_COMPILER)
   mark_as_advanced(WITH_CYCLES_CUDA_BUILD_SERIAL)
   mark_as_advanced(WITH_CUDA_DYNLOAD)
+  mark_as_advanced(CUDA_HOST_COMPILER)
 endif()
 
 # AMD HIP
diff --git a/src/kernel/CMakeLists.txt b/src/kernel/CMakeLists.txt
index 51158b86..b9cdcc06 100644
--- a/src/kernel/CMakeLists.txt
+++ b/src/kernel/CMakeLists.txt
@@ -418,6 +418,11 @@ if(WITH_CYCLES_CUDA_BINARIES)
       -o ${CMAKE_CURRENT_BINARY_DIR}/${cuda_file}
       -Wno-deprecated-gpu-targets)
 
+    if(CUDA_HOST_COMPILER)
+      set(cuda_flags ${cuda_flags}
+        -ccbin="${CUDA_HOST_COMPILER}")
+    endif()
+
     if(WITH_NANOVDB)
       set(cuda_flags ${cuda_flags}
         -D WITH_NANOVDB
-- 
2.35.1

