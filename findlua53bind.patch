--- code/CMakeModules/FindLuabind.cmake.old	2016-01-31 07:27:45.890212020 +0100
+++ code/CMakeModules/FindLuabind.cmake	2016-01-31 07:07:40.000000000 +0100
@@ -9,16 +9,24 @@
   IF(LUABIND_LIBRARY_RELEASE MATCHES "\\.so")
     INCLUDE(CheckDepends)
 
-    SET(LUA52_LIBRARY "liblua5.2")
-    CHECK_LINKED_LIBRARY(LUABIND_LIBRARY_RELEASE LUA52_LIBRARY LUALIB_FOUND)
+    SET(LUA53_LIBRARY "liblua")
+    CHECK_LINKED_LIBRARY(LUABIND_LIBRARY_RELEASE LUA53_LIBRARY LUALIB_FOUND)
+ 
     
     IF(NOT LUALIB_FOUND)
       # fedora (v20)
-      SET(LUA52_LIBRARY "liblua-5.2")
-      CHECK_LINKED_LIBRARY(LUABIND_LIBRARY_RELEASE LUA52_LIBRARY LUALIB_FOUND)
+      SET(LUA53_LIBRARY "liblua")
+      CHECK_LINKED_LIBRARY(LUABIND_LIBRARY_RELEASE LUA53_LIBRARY LUALIB_FOUND)
     ENDIF(NOT LUALIB_FOUND)
 
     IF(LUALIB_FOUND)
+      MESSAGE(STATUS "Luabind is using Lua 5.3")
+      FIND_PACKAGE(Lua53 REQUIRED)
+    ELSE(LUALIB_FOUND)
+      SET(LUA52_LIBRARY "liblua5.2")
+      CHECK_LINKED_LIBRARY(LUABIND_LIBRARY_RELEASE LUA52_LIBRARY LUALIB_FOUND)
+
+    IF(LUALIB_FOUND)
       MESSAGE(STATUS "Luabind is using Lua 5.2")
       FIND_PACKAGE(Lua52 REQUIRED)
     ELSE(LUALIB_FOUND)
@@ -40,6 +48,7 @@
         ENDIF(LUALIB_FOUND)
       ENDIF(LUALIB_FOUND)
     ENDIF(LUALIB_FOUND)
+  ENDIF(LUALIB_FOUND)
   ELSE(LUABIND_LIBRARY_RELEASE MATCHES "\\.so")
     # TODO: find a way to detect Lua version
     IF(WITH_LUA53)
